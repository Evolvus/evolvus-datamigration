----------------------------- BANK REPORTS (FINANCIAL POSITION) -----------------------

1) ARABIC_BG_REPORT

"select SOL_ID,BG_SRL_NUM,BG_TYPE,CIF_ID,CRNCY_CODE,ALT_BENEFICIARY_NAME,
trim(DBMS_LOB.SUBSTR(ALT_GUARANTEE_DETAILS,32700)) GUARANTEE_DETAILS, 
trim(DBMS_LOB.SUBSTR(ALT_AMEND_GUARANTEE_DETAILS,32700)) AMEND_GUARANTEE_DETAILS,
trim(DBMS_LOB.SUBSTR(FREE_TEXT8,32700)) FREE_TEXT8
from custom.C_ALTGUARNT_DET where bank_id='01'"

2) BG_BIFURCATED_REPORT

"SELECT 
CASE WHEN TRIM(M.BHALF_BRN) IS NOT NULL THEN M.BHALF_BRN ELSE M.INPUT_BRN END BRANCH_CODE, SOL_ID,
CODE,GTE_ID,BG_TYPE,BG_CLASS,
C.CIF_ID,
MASTER_REF,BG_SRL_NUM,
CCY,B.CRNCY_CODE,
TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE, TO_CHAR(b.BG_EXPIRY_DATE,'DD-MM-YYYY') FIN_EXPIRY_DATE,
LIAB_AMT/C8PWD,BG_AMT, 
CASE WHEN TRIM(GTE_ID)='C' THEN 'INWARD' ELSE 'OUTWARD' END TYPE
FROM MASTER_ODS M
INNER JOIN TBAADM.BGM B ON REPLACE(M.MASTER_REF,'/','-')=BG_SRL_NUM
INNER JOIN C8PF ON C8CCY=CCY
INNER JOIN PRODTYPE_ODS PO ON PO.KEY97=PRODTYPE
LEFT JOIN TBAADM.CMG C ON B.CUST_ID=C.CUST_ID
LEFT JOIN IGMASTER_ODS IG ON IG.KEY97=M.KEY97    
WHERE REFNO_PFIX='SBG' AND LIAB_AMT!=0
union all
SELECT 
CASE WHEN TRIM(M.BHALF_BRN) IS NOT NULL THEN M.BHALF_BRN ELSE M.INPUT_BRN END BRANCH_CODE, SOL_ID,
CODE,GTE_ID,BG_TYPE,BG_CLASS,
C.CIF_ID,
MASTER_REF,BG_SRL_NUM,
CCY,B.CRNCY_CODE,
TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE, TO_CHAR(b.BG_EXPIRY_DATE,'DD-MM-YYYY') FIN_EXPIRY_DATE,
LIAB_AMT/C8PWD,BG_AMT, 
CASE WHEN TRIM(GTE_ID)='C' THEN 'INWARD' ELSE 'OUTWARD' END TYPE
FROM MASTER_ODS M
INNER JOIN TBAADM.BGM B ON REPLACE(M.MASTER_REF,'/','-')=BG_SRL_NUM
INNER JOIN C8PF ON C8CCY=CCY
INNER JOIN PRODTYPE_ODS PO ON PO.KEY97=PRODTYPE
LEFT JOIN TBAADM.CMG C ON B.CUST_ID=C.CUST_ID
LEFT JOIN IGMASTER_ODS IG ON IG.KEY97=M.KEY97    
WHERE REFNO_PFIX='SBG' AND LIAB_AMT is null
union all
SELECT 
CASE WHEN TRIM(M.BHALF_BRN) IS NOT NULL THEN M.BHALF_BRN ELSE M.INPUT_BRN END BRANCH_CODE, SOL_ID,
CODE,GTE_ID,BG_TYPE,BG_CLASS,
C.CIF_ID,MASTER_REF,BG_SRL_NUM,CCY,B.CRNCY_CODE,
TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE, TO_CHAR(b.BG_EXPIRY_DATE,'DD-MM-YYYY') FIN_EXPIRY_DATE,
LIAB_AMT/C8PWD,BG_AMT, 
CASE WHEN TRIM(GTE_ID)='C' THEN 'INWARD' ELSE 'OUTWARD' END TYPE
FROM MASTER_ODS M
INNER JOIN TBAADM.BGM B ON 'X'||REPLACE(M.MASTER_REF,'/','-')=BG_SRL_NUM
INNER JOIN C8PF ON C8CCY=CCY
INNER JOIN PRODTYPE_ODS PO ON PO.KEY97=PRODTYPE
LEFT JOIN TBAADM.CMG C ON B.CUST_ID=C.CUST_ID
LEFT JOIN IGMASTER_ODS IG ON IG.KEY97=M.KEY97    
WHERE REFNO_PFIX='SBG' AND LIAB_AMT!=0"

3) BG_FUTURE_CHARGE_PPC_MASTER

"SELECT B2K_ID, TFCT_SRL_NUM, TDCC_KEY_SRL_NUM, DUE_DATE, CR_DR_IND, TRAN_CRNCY_CODE, TRAN_AMT, TRAN_DATE, FREQUENCY FROM TDCC WHERE DUE_DATE>=TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')
ORDER BY B2K_ID,TFCT_SRL_NUM"

4) BG_FUTURE_CHARGE_PPC_SCHEDULE

"SELECT B2K_ID BG_NUMBER,TO_CHAR(due_DATE,'DD-MM-YYYY') FUTURE_DATE,TFCT_SRL_NUM,TRAN_CRNCY_CODE,TRAN_AMT FROM TDCC_FINAL WHERE DUE_DATE>TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY') 
ORDER BY BG_NUMBER,TFCT_SRL_NUM,TO_DATE(FUTURE_DATE,'DD-MM-YYYY')"

5) BG_LIMIT_LINKAGE

"SELECT LL.REF_NO,LL.CUSTOMER,LL.TYPE BG_TYPE,LL.LIMIT_PREFIX,LL.LIMIT_SUFFIX
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF001 T1 ON TRIM(T1.BG_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='A'
WHERE TRIM(LL.LIMIT_PREFIX) IS NOT NULL
ORDER BY CUSTOMER"

6) BG_LIMIT_LINKAGE_AND_UTILISATION

"SELECT LL.REF_NO,BG.BG_AMT,BG.CRNCY_CODE BG_CURRENCY,LL.CUSTOMER,LL.TYPE BG_TYPE,LL.LIMIT_PREFIX,LL.LIMIT_SUFFIX,T.CRNCY_CODE LIMIT_CURRENCY,T.ORIG_SANCT_LIM,T.SANCT_LIM,T.DRWNG_POWER,T.LIAB,T.CONTINGENT_LIAB--,T.UTIL_LIMIT_FUND_BASED,T.UTIL_LIMIT_NON_FUND_BASED
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF001 T1 ON TRIM(T1.BG_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='A'
LEFT JOIN TBAADM.LLT T ON T.LIMIT_PREFIX=LL.LIMIT_PREFIX AND T.LIMIT_SUFFIX=LL.LIMIT_SUFFIX
LEFT JOIN TBAADM.BGM BG ON TRIM(LL.REF_NO)=BG.BG_SRL_NUM AND BG.BANK_ID='01'
WHERE TRIM(LL.LIMIT_PREFIX) IS NOT NULL
ORDER BY CUSTOMER"

7) BG_MARGIN

"SELECT B.SOL_ID SOL_ID,C.CIF_ID,B.BG_SRL_NUM MASTER_REF,B.BG_TYPE,GM.MARGIN_CRNCY CCY,GM.COLLECT_AMT MGN_AMT,G.FORACID ACCOUNT,'BG_MARGIN' TYPE  FROM TBAADM.GMMT GM 
INNER JOIN TBAADM.BGM B ON B.BG_B2KID=GM.B2KID 
INNER JOIN TBAADM.GAM G ON G.ACID=GM.MARGIN_ACID
LEFT JOIN TBAADM.CMG C ON C.CUST_ID=B.CUST_ID 
WHERE B2KID_TYPE='BNKGR' AND GM.BANK_ID='01' AND MARGIN_TYPE='C' 
order by SOL_ID,MASTER_REF"

8) BG_MISSING_LIMIT

"SELECT LL.REF_NO,LL.CUSTOMER,LL.TYPE BG_TYPE,T1.LIMITPREFIX,T1.LIMITSUFFIX
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF001 T1 ON TRIM(T1.BG_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='A'
WHERE TRIM(LL.LIMIT_PREFIX) IS NULL
ORDER BY CUSTOMER"

9) BG_PENDED_EVENTS

"SELECT DISTINCT
MA.MASTER_REF,BE.AMOUNT NEW_AMOUNT,
ADD_MONTHS (BE.START_DATE,CASE WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=3 THEN 3
     WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=6 THEN 6
     WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=12 THEN 12
     WHEN C99.P_CHG_UNIT='Q' THEN 3
     WHEN C99.P_CHG_UNIT='H' THEN 6
     WHEN C99.P_CHG_UNIT IN ('Y','A') THEN 12
     ELSE 1 END) NEW_START_DATE,
C99.P_CHG_UNIT,BE.CCY,MA.EXPIRY_DAT,C99.P_CHG_NO,
CASE WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=3 THEN 'Q'
     WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=6 THEN 'H'
     WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=12 THEN 'Y'
     WHEN C99.P_CHG_UNIT='D' THEN 'M'
     ELSE C99.P_CHG_UNIT END NEW_FREQ
FROM MASTER_ODS MA
LEFT JOIN BASEEVENT_ODS BE ON MA.KEY97=BE.MASTER_KEY AND BE.TYPEFLAG='30881'
INNER JOIN PAYCHARGES_ODS PO ON PO.KEY97=BE.KEY97 
LEFT JOIN TIDATAITEM_ODS TI ON TI.KEY97=MA.PCP_PTY AND TI.TYPEFLAG='27713'
LEFT JOIN PARTYDTLS_ODS PA ON PA.KEY97=TI.KEY97
LEFT JOIN GFPF_ODS GF ON REPLACE(TRIM(PA.CUS_MNM),' ','')=REPLACE(TRIM(GF.GFCUS1),' ','')
LEFT JOIN DIARYENTRY_ODS DE ON MA.KEY97=DE.MASTER_KEY AND DE.TYPEFLAG ='31115'
LEFT JOIN RELITEM_ODS RI ON BE.KEY97=RI.EVENT_KEY AND RI.TYPEFLAG='20678'
LEFT JOIN PERIODCHG_ODS PC ON PC.KEY97=RI.KEY97
LEFT JOIN BASECHARGE_ODS BC ON BC.KEY97=RI.KEY97
LEFT JOIN EVENTCHG_ODS EC ON EC.KEY97=BC.KEY97
LEFT JOIN CHARGE99_ODS C99 ON C99.KEY97=EC.CHG_SCH
LEFT JOIN CHARGE04_ODS C04 ON C04.KEY97=C99.CHG_TYPE
LEFT JOIN TRANSCHED_ODS TS ON TS.KEY97=EC.TCHG_SCH
WHERE MA.REFNO_PFIX='SBG' AND BE.REFNO_PFIX='PPC'  AND BE.STATUS NOT IN ('c','a') AND DE.KEY97 IS NULL AND BE.AMOUNT!=0
AND 
ADD_MONTHS (BE.START_DATE,CASE WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=3 THEN 3
     WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=6 THEN 6
     WHEN C99.P_CHG_UNIT='M' AND C99.P_CHG_NO=12 THEN 12
     WHEN C99.P_CHG_UNIT='Q' THEN 3
     WHEN C99.P_CHG_UNIT='H' THEN 6
     WHEN C99.P_CHG_UNIT IN ('Y','A') THEN 12
     ELSE 1 END)<MA.EXPIRY_DAT"

10) BG_PENDED_FUTURE_CHARGE_PPC_MASTER

"SELECT B2K_ID,TFCT_KEY_SRL_NUM,TTL_SYS_CALC_CHRG_AMT,START_DATE,END_DATE,DEF_CHRG_FREQ_TYPE FROM TFCT_TEMP
ORDER BY B2K_ID,TFCT_KEY_SRL_NUM"

11) BG_PENDED_FUTURE_CHARGE_PPC_SCHEDULE

"SELECT B2K_ID, TFCT_SRL_NUM, TDCC_KEY_SRL_NUM, DUE_DATE, CR_DR_IND, TRAN_CRNCY_CODE, TRAN_AMT FROM TDCC_FINAL_TEMP 
ORDER BY B2K_ID,TFCT_SRL_NUM,due_date"

12) BG_PPC_ALL_REPORT

"(SELECT MA.REFNO_PFIX,TRIM(CIF_ID) CUSTOMER_NUMBER,MA.MASTER_REF,BC.CHG_DUE/C8PWD CHARGE_AMOUNT,TO_CHAR(PC.START_DAT,'DD-MM-YYYY') START_DATE,BC.CHG_CCY,C99.P_CHG_UNIT,C99.P_CHG_NO,TO_CHAR(PC.END_DAT,'DD-MM-YYYY') END_DATE,
TO_CHAR(DE.DDATE,'DD-MM-YYYY') DUE_DATE,TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') EXPIRY_DATE,
CASE WHEN TS.SCHED_TYPE='F' THEN NULL ELSE '0'||TO_CHAR(TS.T1_PERCENT) END T1_PERCENT--,EC.CALCTEXT,TS.SCHED_TYPE
FROM DIARYENTRY_ODS DE
INNER JOIN MASTER_ODS MA ON MA.KEY97=DE.MASTER_KEY
LEFT JOIN RELITEM_ODS RI ON RI.KEY97=DE.PERIOD_CHG AND RI.TYPEFLAG='20678'
LEFT JOIN BASEEVENT_ODS BE ON BE.KEY97=RI.EVENT_KEY 
LEFT JOIN PERIODCHG_ODS PC ON PC.KEY97=RI.KEY97
LEFT JOIN BASECHARGE_ODS BC ON BC.KEY97=RI.KEY97
LEFT JOIN EVENTCHG_ODS EC ON EC.KEY97=BC.KEY97
LEFT JOIN CHARGE99_ODS C99 ON C99.KEY97=EC.CHG_SCH
LEFT JOIN CHARGE04_ODS C04 ON C04.KEY97=C99.CHG_TYPE
LEFT JOIN C8PF ON C8CCY=BC.CHG_CCY
LEFT JOIN TRANSCHED_ODS TS ON TS.KEY97=EC.TCHG_SCH
INNER JOIN TF001 T1 ON TRIM(T1.BG_NUM)=REPLACE(MA.MASTER_REF,'/','-') AND FUNC_CODE='A'
WHERE DE.TYPEFLAG ='31115' 
AND MA.REFNO_PFIX = 'SBG'  
) ORDER BY MA.REFNO_PFIX,TRIM(CIF_ID),MA.MASTER_REF"

13) BG_TECT_LAST_RATE

SELECT * FROM TF_BG_C_TECT

14) BG_TRANSACTION_CHARGES

"SELECT TT.*,'0'||TO_CHAR(TE.FIXED_TENOR_PCNT),TE.TENOR_PERIOD 
FROM TF_CUSTOM_BGTT TT
LEFT JOIN TF_BG_C_TECT TE ON TRIM(TE.ENTITY_ID)=TRIM(TT.ENTITY_ID) 
ORDER BY TT.ENTITY_ID,TT.EVENT_SRL_NUM"

15) ELC_OS

"SELECT DM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END BRANCH,
ACTL_CRNCY_CODE,DC_REG_TYPE,CU.CIF_ID, 
DC_REF_NUM,AVAIL_BY,DM.AVAILABLE_BY,
SUM( CASE WHEN EVENT_TYPE='E' THEN EVENT_AMT END) ISSUE,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END AMEND, 
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END) ELSE 0 END BILLS,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END NON_BILLS_UTILISATION,
DC_TOL_AVAIL_AMT,
SUM(CASE WHEN EVENT_TYPE='E' THEN EVENT_AMT END) +
(CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END)
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END) ELSE 0 END
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END 
+ DC_TOL_AVAIL_AMT FINACLE_OS_BALANCE,
LIAB_AMT/C8PWD TI_OUTSTAND_BALANCE,
AMT_O_S/C8PWD TI_UNCONFIRMED_AMOUNT
FROM TBAADM.DCMM DM
INNER JOIN TBAADM.DCEM DE ON DM.DC_B2KID=DE.DC_B2KID
INNER JOIN MASTER_ODS MA ON DC_REF_NUM=REPLACE(MASTER_REF,'/','-')
INNER JOIN LCMASTER_ODS LC ON MA.KEY97=LC.KEY97
INNER JOIN C8PF C8 ON MA.CCY=C8CCY
INNER JOIN TF005 T5 ON DC_REF_NUM=TRIM(DC_NUM)  
LEFT JOIN TBAADM.CMG CU ON CU.CUST_ID=DM.BENEF_PARTY_CODE 
WHERE  
T5.FUNC_CODE='E' 
GROUP BY DM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END,CCY,ACTL_CRNCY_CODE,DC_REG_TYPE,CU.CIF_ID,DM.DC_REF_NUM,LIAB_AMT/C8PWD,DC_TOL_AVAIL_AMT,AVAIL_BY,DM.AVAILABLE_BY,AMT_O_S/C8PWD
ORDER BY DM.SOL_ID,DC_REF_NUM"

16) ELC_OS_BILLS_NEW

"SELECT FB.SOL_ID,FE.LC_NUMBER,FB.BILL_CRNCY_CODE,MM.DC_REG_TYPE,FB.BILL_ID,FB.BILL_AMT, TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') LODGE_DATE,
TO_CHAR(FB.ACCEPT_DATE,'DD-MM-YYYY') ACCEPTED_EVENT_DATE,TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') EXPIRY_DATE,
CASE WHEN LC.CONF_INSTR='W' THEN 'UNCONFIRMED'
     WHEN LC.CONF_INSTR='M' THEN 'MAY_ADD'
     ELSE 'CONFIRMED' END STATUS,
CASE WHEN FB.BILL_FUNC_CODE='A' THEN 'ACCEPTED' ELSE 'LODGED' END BILL_EVENT_STATUS, MA.STATUS
FROM TBAADM.FBM FB
LEFT JOIN TBAADM.FEI FE ON FB.BILL_ID=FE.BILL_ID
LEFT JOIN TBAADM.DCMM MM ON FE.LC_NUMBER=MM.DC_REF_NUM
LEFT JOIN MASTER_ODS MA ON REPLACE(MA.MASTER_REF,'/','-')=FE.LC_NUMBER
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
WHERE FB.BANK_ID='01' AND FB.BILL_ID LIKE 'EX%' AND FB.BILL_FUNC_CODE!='R'"

17) ELC_OS_CONFIRMED

"SELECT DM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END BRANCH,
ACTL_CRNCY_CODE,DC_REG_TYPE,CU.CIF_ID, 
DC_REF_NUM,AVAIL_BY,DM.AVAILABLE_BY,LC.CONF_INSTR,
SUM( CASE WHEN EVENT_TYPE='E' THEN EVENT_AMT END) ISSUE,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END AMEND, 
CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='G' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='G' THEN EVENT_AMT END) ELSE 0 END LODGE_BILLS,
CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='A' THEN EVENT_AMT END) ELSE 0 END ACCEPTED_BILLS,
CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='R' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='R' THEN EVENT_AMT END) ELSE 0 END PAID_BILLS,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END NON_BILLS_UTILISATION,
DC_TOL_AVAIL_AMT,
SUM(CASE WHEN EVENT_TYPE='E' THEN EVENT_AMT END) +
(CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END)
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END) ELSE 0 END
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END 
+ DC_TOL_AVAIL_AMT FINACLE_OS_BALANCE,
LIAB_AMT/C8PWD TI_OUTSTAND_BALANCE, MA.STATUS
FROM TBAADM.DCMM DM
INNER JOIN TBAADM.DCEM DE ON DM.DC_B2KID=DE.DC_B2KID
INNER JOIN MASTER_ODS MA ON DC_REF_NUM=REPLACE(MASTER_REF,'/','-')
INNER JOIN LCMASTER_ODS LC ON MA.KEY97=LC.KEY97
INNER JOIN C8PF C8 ON MA.CCY=C8CCY
INNER JOIN TF005 T5 ON DC_REF_NUM=TRIM(DC_NUM)  
LEFT JOIN TBAADM.CMG CU ON CU.CUST_ID=DM.BENEF_PARTY_CODE 
WHERE  
T5.FUNC_CODE='E' AND LC.CONF_INSTR='C'
GROUP BY DM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END,CCY,ACTL_CRNCY_CODE,DC_REG_TYPE,CU.CIF_ID,DM.DC_REF_NUM,LIAB_AMT/C8PWD,DC_TOL_AVAIL_AMT,LC.AVAIL_BY,DM.AVAILABLE_BY,LC.CONF_INSTR, MA.STATUS
ORDER BY DM.SOL_ID,DC_REF_NUM"

18) ELC_OS_UNCONFIRMED

"SELECT DM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END BRANCH,
ACTL_CRNCY_CODE,DC_REG_TYPE,CU.CIF_ID, 
DC_REF_NUM,AVAIL_BY,DM.AVAILABLE_BY,LC.CONF_INSTR,
SUM( CASE WHEN EVENT_TYPE='E' THEN EVENT_AMT END) ISSUE,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END AMEND, 
CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='G' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='G' THEN EVENT_AMT END) ELSE 0 END LODGE_BILLS,
CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='A' THEN EVENT_AMT END) ELSE 0 END ACCEPTED_BILLS,
CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='R' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='R' THEN EVENT_AMT END) ELSE 0 END PAID_BILLS,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END NON_BILLS_UTILISATION,
DC_TOL_AVAIL_AMT,
SUM(CASE WHEN EVENT_TYPE='E' THEN EVENT_AMT END) +
(CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END)
- CASE WHEN TRIM(SUM( CASE WHEN BILL_OPERATION='R' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN BILL_OPERATION='R' THEN EVENT_AMT END) ELSE 0 END
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END 
+ DC_TOL_AVAIL_AMT FINACLE_OS_BALANCE,
AMT_O_S/C8PWD TI_OUTSTAND_BALANCE, MA.STATUS
FROM TBAADM.DCMM DM
INNER JOIN TBAADM.DCEM DE ON DM.DC_B2KID=DE.DC_B2KID
INNER JOIN MASTER_ODS MA ON DC_REF_NUM=REPLACE(MASTER_REF,'/','-')
INNER JOIN LCMASTER_ODS LC ON MA.KEY97=LC.KEY97
INNER JOIN C8PF C8 ON MA.CCY=C8CCY
INNER JOIN TF005 T5 ON DC_REF_NUM=TRIM(DC_NUM)  
LEFT JOIN TBAADM.CMG CU ON CU.CUST_ID=DM.BENEF_PARTY_CODE 
WHERE  
T5.FUNC_CODE='E' AND LC.CONF_INSTR!='C'
GROUP BY DM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END,CCY,ACTL_CRNCY_CODE,DC_REG_TYPE,CU.CIF_ID,DM.DC_REF_NUM,AMT_O_S/C8PWD,DC_TOL_AVAIL_AMT,LC.AVAIL_BY,DM.AVAILABLE_BY,LC.CONF_INSTR,MA.STATUS
ORDER BY DM.SOL_ID,DC_REF_NUM"

19) FD_MARGIN_MISSING

"SELECT DISTINCT 
REPLACE(MA.MASTER_REF,'/','-') B2KID,
CO.CCY MARGIN_CRNCY,
CO.AMOUNT/C8PWD MARGIN_AMT,
TRIM(LT.ACCOUNT_NUMBER) OPER_ACID,CUST_DDA
FROM TIDATAITEM_ODS TI
INNER JOIN MASTER_ODS MA ON MA.KEY97=TI.MASTER_KEY
LEFT JOIN COLLATERAL_ODS CO ON CO.KEY97=TI.KEY97
INNER JOIN C8PF C8M ON C8M.C8CCY=CO.CCY
LEFT JOIN MAP_ACC MP ON MP.EXTERNAL_ACC=TRIM(REPLACE(REPLACE(CO.CUST_DDA,'-',''),' ',''))
LEFT JOIN LIEN_O_TABLE LT ON TRIM(LT.ACCOUNT_NUMBER)=TRIM(MP.FIN_ACC_NUM)
WHERE TI.MASTER_KEY IN (SELECT KEY97 FROM MASTER_ODS WHERE REFNO_PFIX ='SBG' AND STATUS='LIV' AND LIAB_AMT!=0) 
AND TI.TYPEFLAG='523' AND TRIM(MA.USEROPTN2) IS NOT NULL
AND REPLACE(MA.MASTER_REF,'/','-') NOT IN (SELECT B2KID FROM TF_MARGIN_MASTER_FD)
UNION
SELECT DISTINCT 
REPLACE(MA.MASTER_REF,'/','-') B2KID,
CO.CCY MARGIN_CRNCY,
CO.AMOUNT/C8PWD COLLECT_AMT,
TRIM(LT.ACCOUNT_NUMBER) OPER_ACID,CUST_DDA
FROM TIDATAITEM_ODS TI
INNER JOIN MASTER_ODS MA ON MA.KEY97=TI.MASTER_KEY
LEFT JOIN COLLATERAL_ODS CO ON CO.KEY97=TI.KEY97
INNER JOIN C8PF C8M ON C8M.C8CCY=CO.CCY
LEFT JOIN MAP_ACC MP ON MP.EXTERNAL_ACC=TRIM(REPLACE(REPLACE(CO.CUST_DDA,'-',''),' ',''))
LEFT JOIN LIEN_O_TABLE LT ON TRIM(LT.ACCOUNT_NUMBER)=TRIM(MP.FIN_ACC_NUM)
WHERE TI.MASTER_KEY IN (SELECT KEY97 FROM MASTER_ODS WHERE REFNO_PFIX ='ILC' AND STATUS='LIV' AND LIAB_AMT!=0) 
AND TI.TYPEFLAG='523' 
AND REPLACE(MA.MASTER_REF,'/','-') NOT IN (SELECT B2KID FROM TF_MARGIN_MASTER_FD)"

20) FD_MARGIN_REPORT_BG

"SELECT B.SOL_ID SOL_ID,C.CIF_ID,B.BG_SRL_NUM MASTER_REF,B.BG_TYPE,GM.MARGIN_CRNCY CCY,GM.COLLECT_AMT MGN_AMT,G.FORACID ACCOUNT,'BG_MARGIN' TYPE  
FROM TBAADM.GMMT GM 
INNER JOIN TBAADM.BGM B ON B.BG_B2KID=GM.B2KID 
LEFT JOIN TBAADM.GAM G ON G.ACID=GM.OPER_ACID
LEFT JOIN TBAADM.CMG C ON C.CUST_ID=B.CUST_ID 
WHERE B2KID_TYPE='BNKGR' AND GM.BANK_ID='01' AND MARGIN_TYPE='L'
ORDER BY B.BG_SRL_NUM"

21) FD_MARGIN_REPORT_LC

"SELECT B.SOL_ID,C.CIF_ID,B.DC_REF_NUM,B.DC_REG_TYPE,GM.MARGIN_CRNCY,GM.COLLECT_AMT,G.FORACID ACCOUNT,'LC_MARGIN' TYPE FROM TBAADM.GMMT GM 
INNER JOIN TBAADM.DCMM B ON B.DC_B2KID=GM.B2KID 
LEFT JOIN TBAADM.GAM G ON G.ACID=GM.OPER_ACID
LEFT JOIN TBAADM.CMG C ON C.CUST_ID=B.ISSU_PARTY_CODE
WHERE B2KID_TYPE='DOCCR' AND GM.BANK_ID='01' AND MARGIN_TYPE='L'
ORDER BY SOL_ID,B.DC_REF_NUM,TYPE"

22) INWARD_BILLS_REPORT_NEW

"select FBM.MTENOR_BILL_ID, 
CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END BRANCH,
FBM.SOL_ID,
MA.MASTER_REF LEG_BILL_ID,
FBM.BILL_ID FIN_BILL_ID,
--CASE WHEN TRIM(FBM.BILL_ID) LIKE '%OBC%' THEN CIF1.FIN_CIF_ID ELSE CIF2.FIN_CIF_ID END CIFID,
B.REFNO_PFIX LEG_FUNC_CODE,
FBM.BILL_FUNC_CODE,
CASE WHEN TRIM(DRWR.COUNTRY)!='KW' AND TRIM(CD.TENOR_NO) IS NULL THEN 'FDBCS' 
     WHEN TRIM(DRWR.COUNTRY)!='KW' AND TRIM(CD.TENOR_NO) IS NOT NULL THEN 'FDBCU'
     WHEN TRIM(DRWR.COUNTRY)='KW' AND TRIM(CD.TENOR_NO) IS NULL  THEN 'LDBCS'
     WHEN TRIM(DRWR.COUNTRY)='KW' AND TRIM(CD.TENOR_NO) IS NOT NULL THEN 'LDBCU'
END LEG_BILLPARAMTYPE, 
FBM.BILL_PARAM_TYPE,
PA.CUS_MNM LEG_FIN_CIF,
C.CIF_ID,
TO_CHAR(CD.PAY_AMT/C8PWD,'999999999999.999') LEG_BILL_AMT,
TO_CHAR(FBM.BILL_AMT,'999999999999.999') FIN_BILL_AMOUNT,
PA.COUNTRY LEG_BILL_COUNTRY,
FBM.BILL_CNTRY_CODE FIN_BILL_CNTRY_CODE,
MA.CCY LEG_CURRENCY,
FBM.BILL_CRNCY_CODE FIN_CURRENCY,
TO_CHAR(CM.RCVD_DATE,'MM/DD/YYYY') RECV_DATE,
FBM.BILL_DATE FIN_RECV_DATE,
CASE WHEN TRIM(CD.TENOR_DATE) IS NOT NULL THEN TO_CHAR(CD.TENOR_DATE,'DD-MM-YYYY') ELSE TO_CHAR(CM.RCVD_DATE,'DD-MM-YYYY') END TI_DUEDATE,
TO_CHAR(DUE_DATE,'DD-MM-YYYY') FIN_DUE_DATE
FROM MASTER_ODS MA 
INNER JOIN BASEEVENT_ODS B ON B.MASTER_KEY=MA.KEY97 AND B.REFNO_PFIX='CRE'
INNER JOIN C8PF ON C8CCY=MA.CCY
INNER JOIN COLLMASTER_ODS CM ON CM.KEY97=MA.KEY97
INNER JOIN PARTYDTLS_ODS PA ON PA.KEY97=CM.DRAWEE_PTY
LEFT JOIN PARTYDTLS_ODS DRWR ON DRWR.KEY97=CM.DRAWER_PTY --- DRAWER PARTY DETAILS---applicant
INNER JOIN TIDATAITEM_ODS TI ON TI.MASTER_KEY=MA.KEY97 AND TI.TYPEFLAG IN ('336','7490','2051','9389')
INNER JOIN COLLDRAFT_ODS CD ON TI.KEY97=CD.KEY97
INNER JOIN TBAADM.CNC CNC ON CNC.CRNCY_CODE=MA.CCY AND CNC.BANK_ID='01'
LEFT JOIN TBAADM.FBPT FB ON FB.BILL_PARAM_TYPE=CASE WHEN TRIM(PA.COUNTRY)!='KW' AND SUBSTR(CD.TENOR_FROM,1,1)='S'  THEN 'FDBCS' 
     WHEN TRIM(PA.COUNTRY)!='KW' AND SUBSTR(CD.TENOR_FROM,1,1)!='S' THEN 'FDBCU'
     WHEN TRIM(PA.COUNTRY)='KW' AND SUBSTR(CD.TENOR_FROM,1,1)='S'  THEN 'LDBCS'
     WHEN TRIM(PA.COUNTRY)='KW' AND SUBSTR(CD.TENOR_FROM,1,1)!='S' THEN 'LDBCU'
END AND FB.BANK_ID='01'
LEFT JOIN (SELECT * FROM TBAADM.FBM WHERE BANK_ID=GET_PARAM('BANK_ID')) FBM ON trim(REPLACE(TRIM(MA.MASTER_REF),'/','-'))=FBM.MTENOR_BILL_ID
LEFT JOIN (SELECT * FROM TBAADM.FEI WHERE BANK_ID=GET_PARAM('BANK_ID')) FEI ON FBM.BILL_ID=FEI.BILL_ID --AND TO_CHAR(CD.PAY_AMT/C8PWD,'999999999999.999')=fei.TOTAL_INVOICE_AMT
left join tbaadm.cmg c on c.cust_id=fbm.PARTY_CODE
WHERE CD.O_S_AMT!=0 AND MA.TOTLIABAMT!=0 AND MA.STATUS='LIV' AND MA.REFNO_PFIX IN 'COL' AND TRIM(CD.STATUS) NOT IN ('RT','P') --AND MA.MASTER_REF='DBC/17-031406'"

23) LC_BILLS_REPORT

"SELECT LC.SOLID,T11.BILLID,CIFID,BILLAMT,INVOICECRNCY,BILLPARAMTYPE,ACCEPTANCE_CR_BACID,ACCEPTANCE_DR_BACID,OTHER_BANK_CHRG
FROM TF011 T11 
INNER JOIN TF010_LC LC ON T11.BILLID=LC.BILLID
LEFT JOIN TBAADM.FBPT FB ON TRIM(BILLPARAMTYPE)=TRIM(BILL_PARAM_TYPE) AND FB.BANK_ID='01'
LEFT JOIN TBAADM.FBM BM ON BILL_ID=trim(T11.BILLID)
WHERE BILLEVENTTYPE='A'"

24) LC_INSURANCE

"select DISTINCT DC_NUM,TRIM(TRIM(PA.REFERENCE)||' '||TRIM(PA.ADDRESS1)) INSURANCE_DETAILS
from tidataitem_ods ti
INNER JOIN MASTER_ODS MO ON MO.KEY97=TI.MASTER_KEY
INNER JOIN TF004 T1 ON TRIM(T1.DC_NUM)=REPLACE(MO.MASTER_REF,'/','-')
inner join (select * from partydtls_ods where role='INS') pa on ti.key97=pa.key97
where ti.typeflag='27713' AND TRIM(TRIM(PA.REFERENCE)||' '||TRIM(PA.ADDRESS1)) IS NOT NULL"

25) LC_LIMIT_LINKAGE

"SELECT LL.REF_NO,LL.CUSTOMER,LL.TYPE BG_TYPE,LL.LIMIT_PREFIX,LL.LIMIT_SUFFIX,DC_TENOR
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF004 T4 ON TRIM(T4.DC_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='S'
WHERE TRIM(LL.LIMIT_PREFIX) IS NOT NULL
ORDER BY CUSTOMER"

26) LC_LIMIT_LINKAGE_AND_UTILISATION

"SELECT LL.REF_NO,MA.CCY LC_CCY,MA.LIAB_AMT/C8PWD LC_AMOUNT,LL.CUSTOMER,LL.TYPE LC_TYPE,LL.LIMIT_PREFIX,LL.LIMIT_SUFFIX,T.CRNCY_CODE LIMIT_CURRENCY,T.ORIG_SANCT_LIM,T.SANCT_LIM,T.DRWNG_POWER,T.LIAB,T.CONTINGENT_LIAB--,T.UTIL_LIMIT_FUND_BASED,T.UTIL_LIMIT_NON_FUND_BASED
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF004 T4 ON TRIM(T4.DC_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='S'
LEFT JOIN TBAADM.LLT T ON T.LIMIT_PREFIX=LL.LIMIT_PREFIX AND T.LIMIT_SUFFIX=LL.LIMIT_SUFFIX
LEFT JOIN MASTER_ODS MA ON REPLACE(MASTER_REF,'/','-')=TRIM(LL.REF_NO)
LEFT JOIN C8PF C8 ON C8CCY=MA.CCY
WHERE TRIM(LL.LIMIT_PREFIX) IS not NULL
ORDER BY CUSTOMER"

27) LC_MARGIN

"SELECT B.SOL_ID,C.CIF_ID,B.DC_REF_NUM,B.DC_REG_TYPE,GM.MARGIN_CRNCY,GM.COLLECT_AMT,G.FORACID ACCOUNT,'LC_MARGIN' TYPE FROM TBAADM.GMMT GM 
INNER JOIN TBAADM.DCMM B ON B.DC_B2KID=GM.B2KID 
INNER JOIN TBAADM.GAM G ON G.ACID=GM.MARGIN_ACID
LEFT JOIN TBAADM.CMG C ON C.CUST_ID=B.ISSU_PARTY_CODE
WHERE B2KID_TYPE='DOCCR' AND GM.BANK_ID='01' AND MARGIN_TYPE='C'
ORDER BY SOL_ID,B.DC_REF_NUM,TYPE"

28) LC_MISSING_LIMIT

"SELECT LL.REF_NO,LL.CUSTOMER,LL.TYPE BG_TYPE,T4.LIMITPREFIX,T4.LIMIT_SUFFIX,DC_TENOR
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF004 T4 ON TRIM(T4.DC_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='S'
WHERE TRIM(LL.LIMIT_PREFIX) IS NULL
ORDER BY CUSTOMER"

29) LC_REPORT

"SELECT 
MM.SOL_ID,
CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END BRANCH,
ACTL_CRNCY_CODE,
DC_REG_TYPE,
MM.TENOR_IND,
CU.CIF_ID, 
DC_REF_NUM,
SUM( CASE WHEN EVENT_TYPE='S' THEN EVENT_AMT END) ISSUE,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END AMEND, 
DC_TOL_AVAIL_AMT,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END) ELSE 0 END BILLS,
CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END NON_BILLS_UTILISATION,
MM.DC_BILL_FRUCT_AMT DLINK_BILL_AMOUNT,
SUM(CASE WHEN EVENT_TYPE='S' THEN EVENT_AMT END) +
(CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='A' THEN EVENT_AMT END) ELSE 0 END)
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='B' THEN EVENT_AMT END) ELSE 0 END
- CASE WHEN TRIM(SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END)) IS NOT NULL THEN SUM( CASE WHEN EVENT_TYPE='U' THEN EVENT_AMT END) ELSE 0 END 
+ DC_TOL_AVAIL_AMT FINACLE_OS_BALANCE,
LIAB_AMT/C8PWD TI_OUTSTAND_BALANCE, MA.STATUS
FROM TF_ILC_MASTER TF
LEFT JOIN TBAADM.DCMM MM ON REPLACE(TF.MASTER_REF,'/','-')=MM.DC_REF_NUM
LEFT JOIN TBAADM.DCEM EM ON MM.DC_B2KID=EM.DC_B2KID
LEFT JOIN MASTER_ODS MA ON MA.MASTER_REF=TF.MASTER_REF
LEFT JOIN TBAADM.CMG CU ON CU.CUST_ID=MM.ISSU_PARTY_CODE
LEFT JOIN C8PF C8 ON MA.CCY=C8CCY
GROUP BY MM.SOL_ID,CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END,CCY,ACTL_CRNCY_CODE,DC_REG_TYPE,MM.TENOR_IND,CU.CIF_ID,MM.DC_REF_NUM,LIAB_AMT/C8PWD,DC_TOL_AVAIL_AMT,MM.DC_BILL_FRUCT_AMT,MA.STATUS
ORDER BY 6 ASC NULLS LAST"

30) LC_TECT_LAST_RATE

SELECT * FROM TF_LC_C_TECT

31) LC_TRANSACTION_CHARGES

"SELECT TT.*,'0'||TO_CHAR(TE.FIXED_TENOR_PCNT),TE.TENOR_PERIOD 
FROM TF_CUSTOM_LCTT TT
LEFT JOIN TF_LC_C_TECT TE ON TRIM(TE.ENTITY_ID)=TRIM(TT.ENTITY_ID) 
ORDER BY TT.ENTITY_ID,TT.EVENT_SRL_NUM"

32) LQ_REPORT

"SELECT MM.SOL_ID,CM.CIF_ID,DC_REF_NUM,ACTL_CRNCY_CODE,BILL_REF_NUM,EVENT_AMT,OTHER_BANK_CHRG
FROM TBAADM.DCEM EM
LEFT JOIN TBAADM.DCMM MM ON EM.DC_B2KID=MM.DC_B2KID
LEFT JOIN TBAADM.CMG CM ON CM.CUST_ID=MM.ISSU_PARTY_CODE
LEFT JOIN TBAADM.FBM BM ON BILL_ID=BILL_REF_NUM
WHERE EM.BANK_ID='01' AND EM.BILL_OPERATION='K'"

33) OPEN_ENDED_BG_REPORT

"SELECT MASTER_REF,EXPIRY_DAT,BG.BG_SRL_NUM,TO_CHAR(bg.BG_EXPIRY_DATE,'DD-MM-YYYY') BG_EXPIRY_DATE,TO_CHAR(CLAIM_EXPIRY_DATE,'DD-MM-YYYY') CLAIM_EXPIRY_DATE,BG.BG_TYPE,CMG.CIF_ID,LIAB_AMT/C8PWD LIABILITY_AMOUNT
FROM MASTER_ODS MA 
LEFT JOIN C8PF ON C8CCY=MA.CCY
INNER JOIN TBAADM.BGM BG ON BG_SRL_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TF_BG_OPEN_ENDED PP ON TRIM(BG_NUM)=BG_SRL_NUM
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=BG.CUST_ID
WHERE MA.EXPIRY_DAT IS NULL AND MA.REFNO_PFIX='SBG'"

34) OPEN_ENDED_REPORT_PPC

SELECT * FROM TF_BG_PPC

35) OPEN_ENDED_REPORT_WITHOUT_PPC

"SELECT MASTER_REF,EXPIRY_DAT,BG.BG_SRL_NUM,TO_CHAR(BG_EXPIRY_DATE,'DD-MM-YYYY') BG_EXPIRY_DATE,TO_CHAR(CLAIM_EXPIRY_DATE,'DD-MM-YYYY') CLAIM_EXPIRY_DATE
FROM MASTER_ODS MA 
INNER JOIN TBAADM.BGM BG ON BG_SRL_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TF_BG_PPC PP ON TRIM(BG_NUM)=BG_SRL_NUM
WHERE MA.EXPIRY_DAT IS NULL AND MA.STATUS='LIV' AND MA.LIAB_AMT!=0 AND MA.REFNO_PFIX='SBG'
AND TRIM(BG_NUM) IS NULL"

36) OUTWARD_BILLS_REPORT

"select DISTINCT
CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END BRANCH ,
FBM.SOL_ID,
MA.MASTER_REF LEG_BILL_ID,
FBM.BILL_ID FIN_BILL_ID,
B.REFNO_PFIX LEG_FUNC_CODE,
FBM.BILL_FUNC_CODE FIN_FUNC_CODE,
CASE WHEN CM.DOCREL_TYP='V' THEN 'POUR AVAL' ELSE '' END TI_FUNC_CODE,
TRIM(PA.COUNTRY) DRAWER_COUNTRY,
trim(CD.TENOR_FROM) TENOR_FROM,
CASE WHEN TRIM(PA.COUNTRY)!='AE' AND SUBSTR(CD.TENOR_FROM,1,1)='S'  THEN 'FOBCS' 
     WHEN TRIM(PA.COUNTRY)!='AE' AND SUBSTR(CD.TENOR_FROM,1,1)!='S' THEN 'FOBCU'
     WHEN TRIM(PA.COUNTRY)='AE' AND SUBSTR(CD.TENOR_FROM,1,1)='S'  THEN 'LOBCS'
     WHEN TRIM(PA.COUNTRY)='AE' AND SUBSTR(CD.TENOR_FROM,1,1)!='S' THEN 'LOBCU'
END LEG_BILLPARAMTYPE,
FBM.BILL_PARAM_TYPE,
NP.CUS_MNM LEG_CUST,
CIF_ID FIN_CIF,
TO_CHAR(CD.PAY_AMT/C8PWD,'999999999999.999') LEG_BILL_AMT,
TO_CHAR(FEI.TOTAL_INVOICE_AMT,'999999999999.999') FIN_BILL_AMT,
PA.COUNTRY LEG_BILL_COUNTRY,
FBM.BILL_CNTRY_CODE FIN_BILL_CNTRY_CODE,
MA.CCY LEG_CURRENCY,
FBM.BILL_CRNCY_CODE FIN_CURRENCY,
TO_CHAR(CM.RCVD_DATE,'MM/DD/YYYY') RECV_DATE,
FBM.BILL_DATE FIN_RECV_DATE
FROM MASTER_ODS MA 
INNER JOIN C8PF ON C8CCY=MA.CCY
INNER JOIN BASEEVENT_ODS B ON B.MASTER_KEY=MA.KEY97 AND B.REFNO_PFIX='CRE'
LEFT JOIN BASEEVENT_ODS BA ON B.MASTER_KEY=MA.KEY97 AND B.REFNO_PFIX='CAC'
INNER JOIN COLLMASTER_ODS CM ON CM.KEY97=MA.KEY97
INNER JOIN PARTYDTLS_ODS PA ON PA.KEY97=CM.DRAWEE_PTY
INNER JOIN TIDATAITEM_ODS TI ON TI.MASTER_KEY=MA.KEY97 AND TI.TYPEFLAG IN ('336','7490','2051','9389')
INNER JOIN COLLDRAFT_ODS CD ON TI.KEY97=CD.KEY97
INNER JOIN TBAADM.CNC CNC ON CNC.CRNCY_CODE=MA.CCY AND CNC.BANK_ID='01'
INNER JOIN TBAADM.FBPT FB ON FB.BILL_PARAM_TYPE=CASE WHEN TRIM(PA.COUNTRY)!='KW' AND SUBSTR(CD.TENOR_FROM,1,1)='S'  THEN 'FOBCS' 
     WHEN TRIM(PA.COUNTRY)!='KW' AND SUBSTR(CD.TENOR_FROM,1,1)!='S' THEN 'FOBCU'
     WHEN TRIM(PA.COUNTRY)='KW' AND SUBSTR(CD.TENOR_FROM,1,1)='S'  THEN 'LOBCS'
     WHEN TRIM(PA.COUNTRY)='KW' AND SUBSTR(CD.TENOR_FROM,1,1)!='S' THEN 'LOBCU'
END AND FB.BANK_ID='01'
LEFT JOIN (SELECT * FROM TBAADM.FBM WHERE BANK_ID=GET_PARAM('BANK_ID')) FBM ON trim(REPLACE(TRIM(MA.MASTER_REF),'/','-'))= FBM.BILL_ID
LEFT JOIN (SELECT * FROM TBAADM.FEI WHERE BANK_ID=GET_PARAM('BANK_ID')) FEI ON FBM.BILL_ID=FEI.BILL_ID AND TO_CHAR(CD.PAY_AMT/C8PWD,'999999999999.999')=fei.TOTAL_INVOICE_AMT
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=FBM.PARTY_CODE
LEFT JOIN PARTYDTLS_ODS NP ON NP.KEY97=MA.PRIMARYCUS
LEFT JOIN GFPF_ODS GF ON TRIM(GF.GFCUS1)=TRIM(NP.CUS_MNM)
WHERE CD.O_S_AMT!=0 AND MA.STATUS='LIV' AND MA.REFNO_PFIX IN 'OUD'"

37) PENDED_PTN_EVENTS

"SELECT DISTINCT MA.MASTER_REF,TO_CHAR(BE.START_DATE,'DD-MM-YYYY') START_DATE,BE.AMOUNT/C8PWD AMOUNT,BE.CCY, TS.P_CHG_UNIT,TS.P_CHG_NO,TS.T1_INTRATE,--,TS.EFF_DATE,TS.FINALDATE
CASE WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=3 THEN 'Q'
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=6 THEN 'H'
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=12 THEN 'Y'
     WHEN TS.P_CHG_UNIT='D' THEN 'M'
     ELSE TS.P_CHG_UNIT END NEW_FREQUENCY,
CASE WHEN TS.P_CHG_UNIT='D' THEN (BE.AMOUNT/C8PWD)/TS.P_CHG_NO*30 ELSE BE.AMOUNT/C8PWD END NEW_AMOUNT,
TO_CHAR(ADD_MONTHS (BE.START_DATE,CASE WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=3 THEN 3
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=6 THEN 6
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=12 THEN 12
     WHEN TS.P_CHG_UNIT='Q' THEN 3
     WHEN TS.P_CHG_UNIT='H' THEN 6
     WHEN TS.P_CHG_UNIT IN ('Y','A') THEN 12
     ELSE 1 END),'DD-MM-YYYY') NEW_FREQUENCY_DATE,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,
TO_CHAR(CASE WHEN ADD_MONTHS (BE.START_DATE,CASE WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=3 THEN 3
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=6 THEN 6
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=12 THEN 12
     WHEN TS.P_CHG_UNIT='Q' THEN 3
     WHEN TS.P_CHG_UNIT='H' THEN 6
     WHEN TS.P_CHG_UNIT IN ('Y','A') THEN 12
     ELSE 1 END)>=MA.EXPIRY_DAT THEN MA.EXPIRY_DAT ELSE ADD_MONTHS (BE.START_DATE,CASE WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=3 THEN 3
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=6 THEN 6
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=12 THEN 12
     WHEN TS.P_CHG_UNIT='Q' THEN 3
     WHEN TS.P_CHG_UNIT='H' THEN 6
     WHEN TS.P_CHG_UNIT IN ('Y','A') THEN 12
     ELSE 1 END) END,'DD-MM-YYYY') NEW_START_DATE 
FROM MASTER_ODS MA
LEFT JOIN BASEEVENT_ODS BE ON MA.KEY97=BE.MASTER_KEY AND BE.TYPEFLAG='30881'
INNER JOIN PAYCHARGES_ODS PO ON PO.KEY97=BE.KEY97 
LEFT JOIN C8PF ON C8CCY=BE.CCY
LEFT JOIN TIDATAITEM_ODS TI ON TI.KEY97=MA.PCP_PTY AND TI.TYPEFLAG='27713'
LEFT JOIN PARTYDTLS_ODS PA ON PA.KEY97=TI.KEY97
LEFT JOIN GFPF_ODS GF ON REPLACE(TRIM(PA.CUS_MNM),' ','')=REPLACE(TRIM(GF.GFCUS1),' ','')
INNER JOIN TF_RISKPART_MASTER TF ON TF.MASTER_REF=MA.MASTER_REF
LEFT JOIN DIARYENTRY_ODS DE ON MA.KEY97=DE.MASTER_KEY AND DE.TYPEFLAG ='31115'
LEFT JOIN RELITEM_ODS RI ON BE.KEY97=RI.EVENT_KEY AND RI.TYPEFLAG='20678'
LEFT JOIN PERIODCHG_ODS PC ON PC.KEY97=RI.KEY97
LEFT JOIN BASECHARGE_ODS BC ON BC.KEY97=RI.KEY97
LEFT JOIN EVENTCHG_ODS EC ON EC.KEY97=BC.KEY97
LEFT JOIN CHARGE99_ODS C99 ON C99.KEY97=EC.CHG_SCH
LEFT JOIN CHARGE04_ODS C04 ON C04.KEY97=C99.CHG_TYPE
LEFT JOIN TRANSCHED_ODS TS ON TS.KEY97=EC.TCHG_SCH
WHERE MA.REFNO_PFIX='PTN' AND BE.REFNO_PFIX='PCH'  AND BE.STATUS NOT IN ('c','a') AND DE.KEY97 IS NULL AND BE.AMOUNT!=0
AND ADD_MONTHS (BE.START_DATE,CASE WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=3 THEN 3
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=6 THEN 6
     WHEN TS.P_CHG_UNIT='M' AND TS.P_CHG_NO=12 THEN 12
     WHEN TS.P_CHG_UNIT='Q' THEN 3
     WHEN TS.P_CHG_UNIT='H' THEN 6
     WHEN TS.P_CHG_UNIT IN ('Y','A') THEN 12
     ELSE 1 END)<MA.EXPIRY_DAT"

38) PENDED_PTN_FUTURE_CHARGE_PPC_MASTER

"SELECT B2K_ID,TFCT_KEY_SRL_NUM,TTL_SYS_CALC_CHRG_AMT,START_DATE,END_DATE,DEF_CHRG_FREQ_TYPE FROM TFCT_PTN_TEMP
ORDER BY B2K_ID,TFCT_KEY_SRL_NUM"

39) PENDED_PTN_FUTURE_CHARGE_PPC_SCHEDULE

"SELECT B2K_ID, TFCT_SRL_NUM, TDCC_KEY_SRL_NUM, DUE_DATE, CR_DR_IND, TRAN_CRNCY_CODE, TRAN_AMT FROM TDCC_FINAL_PTN_TEMP 
ORDER BY B2K_ID,TFCT_SRL_NUM,due_date"

40) PTN_FUTURE_CHARGE_PPC_MASTER

"SELECT B2K_ID, TFCT_SRL_NUM, TDCC_KEY_SRL_NUM, DUE_DATE, CR_DR_IND, TRAN_CRNCY_CODE, TRAN_AMT, TRAN_DATE, FREQUENCY FROM TDCC_PTN WHERE DUE_DATE>=TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')
ORDER BY B2K_ID,TFCT_SRL_NUM"

41) PTN_FUTURE_CHARGE_PPC_SCHEDULE

"SELECT B2K_ID BG_NUMBER,TO_CHAR(due_DATE,'DD-MM-YYYY') FUTURE_DATE,TFCT_SRL_NUM,TRAN_CRNCY_CODE,TRAN_AMT FROM TDCC_FINAL_PTN WHERE DUE_DATE>TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY') 
ORDER BY BG_NUMBER,TFCT_SRL_NUM,TO_DATE(FUTURE_DATE,'DD-MM-YYYY')"

42) PTN_PPC_ALL_REPORT

"(SELECT MA.REFNO_PFIX,TRIM(CIF_ID) CUSTOMER_NO,MA.MASTER_REF,BC.CHG_DUE/C8PWD CHARGE_AMOUNT,TO_CHAR(PC.START_DAT,'DD-MM-YYYY') START_DATE,BC.CHG_CCY,C99.P_CHG_UNIT,C99.P_CHG_NO,TO_CHAR(PC.END_DAT,'DD-MM-YYYY') END_DATE,
TO_CHAR(DE.DDATE,'DD-MM-YYYY') DUE_DATE,TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') EXPIRY_DATE,TS.T1_INTRATE--,EC.CALCTEXT,TS.SCHED_TYPE
FROM DIARYENTRY_ODS DE
INNER JOIN MASTER_ODS MA ON MA.KEY97=DE.MASTER_KEY
LEFT JOIN RELITEM_ODS RI ON RI.KEY97=DE.PERIOD_CHG AND RI.TYPEFLAG='20678'
LEFT JOIN BASEEVENT_ODS BE ON BE.KEY97=RI.EVENT_KEY 
LEFT JOIN PERIODCHG_ODS PC ON PC.KEY97=RI.KEY97
LEFT JOIN BASECHARGE_ODS BC ON BC.KEY97=RI.KEY97
LEFT JOIN EVENTCHG_ODS EC ON EC.KEY97=BC.KEY97
LEFT JOIN CHARGE99_ODS C99 ON C99.KEY97=EC.CHG_SCH
LEFT JOIN CHARGE04_ODS C04 ON C04.KEY97=C99.CHG_TYPE
LEFT JOIN C8PF ON C8CCY=BC.CHG_CCY
LEFT JOIN TRANSCHED_ODS TS ON TS.KEY97=EC.TCHG_SCH
INNER JOIN TF001_RISK T1 ON TRIM(T1.BG_NUM)=REPLACE(MA.MASTER_REF,'/','-') AND FUNC_CODE='A'
WHERE DE.TYPEFLAG ='31115' 
AND MA.REFNO_PFIX = 'PTN'  
) ORDER BY MA.REFNO_PFIX,TRIM(CIF_ID),MA.MASTER_REF"

43) RISK_PART_LIMIT_LINKAGE_AND_UTILISATION

"SELECT LL.REF_NO,BG.BG_AMT,BG.CRNCY_CODE BG_CURRENCY,LL.CUSTOMER,LL.TYPE BG_TYPE,LL.LIMIT_PREFIX,LL.LIMIT_SUFFIX,T.CRNCY_CODE LIMIT_CURRENCY,T.ORIG_SANCT_LIM,T.SANCT_LIM,T.DRWNG_POWER,T.LIAB,T.CONTINGENT_LIAB--,T.UTIL_LIMIT_FUND_BASED,T.UTIL_LIMIT_NON_FUND_BASED
FROM TF_LIMIT_LINKAGE LL
INNER JOIN TF001_RISK T1 ON TRIM(T1.BG_NUM)=TRIM(LL.REF_NO) AND FUNC_CODE='A'
LEFT JOIN TBAADM.LLT T ON T.LIMIT_PREFIX=LL.LIMIT_PREFIX AND T.LIMIT_SUFFIX=LL.LIMIT_SUFFIX
LEFT JOIN TBAADM.BGM BG ON TRIM(LL.REF_NO)=BG.BG_SRL_NUM AND BG.BANK_ID='01'
WHERE TRIM(LL.LIMIT_PREFIX) IS NOT NULL
ORDER BY CUSTOMER"

44) RISK_PARTICIPATION_REPORT

"SELECT CASE WHEN TRIM(M.BHALF_BRN) IS NOT NULL THEN M.BHALF_BRN ELSE M.INPUT_BRN END BRANCH_CODE,
SOL_ID,CODE,BG_TYPE,C.CIF_ID,MASTER_REF,BG_SRL_NUM,CCY,B.CRNCY_CODE,LIAB_AMT/C8PWD,BG_AMT 
--CASE WHEN TRIM(GTE_ID)='C' THEN 'INWARD' ELSE 'OUTWARD' END TYPE
FROM MASTER_ODS M
INNER JOIN TBAADM.BGM B ON REPLACE(M.MASTER_REF,'/','-')=BG_SRL_NUM
INNER JOIN C8PF ON C8CCY=CCY
INNER JOIN PRODTYPE_ODS PO ON PO.KEY97=PRODTYPE
LEFT JOIN TBAADM.CMG C ON B.CUST_ID=C.CUST_ID
WHERE REFNO_PFIX='PTN' --AND LIAB_AMT!=0"

45) UNPAID_CHARGE_REPORT_PPC

"SELECT B2K_ID BG_NUMBER,TO_CHAR(DUE_DATE,'DD-MM-YYYY') UNPAID_DATE,TFCT_SRL_NUM,TRAN_CRNCY_CODE,TRAN_AMT,TRIM(CIF_ID) CIF_ID,BG_OPERATIVE_ACCOUNT_ID
FROM TDCC_FINAL 
LEFT JOIN TF001 T1 ON TRIM(B2K_ID)=TRIM(BG_NUM) AND FUNC_CODE='A'
WHERE DUE_DATE<=TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY') 
ORDER BY BG_NUMBER,TFCT_SRL_NUM,TO_DATE(UNPAID_DATE,'DD-MM-YYYY')"

46) UNPAID_CHARGE_REPORT_PPC_PTN

"SELECT B2K_ID BG_NUMBER,TO_CHAR(DUE_DATE,'DD-MM-YYYY') FUTURE_DATE,TFCT_SRL_NUM,TRAN_CRNCY_CODE,TRAN_AMT FROM TDCC_FINAL_PTN WHERE DUE_DATE<=TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY') 
ORDER BY BG_NUMBER,TFCT_SRL_NUM,TO_DATE(FUTURE_DATE,'DD-MM-YYYY')"

47) WITH_EXPIRY_DATE_PPC_REPORT

"SELECT B2K_ID BG_NUMBER,TO_CHAR(TRAN_DATE,'DD-MM-YYYY') FUTURE_DATE,TRAN_CRNCY_CODE,TRAN_AMT 
FROM TDCC
INNER JOIN MASTER_ODS MA ON REPLACE(MA.MASTER_REF,'/','-')=B2K_ID  
WHERE  TO_NUMBER(TFCT_SRL_NUM)=1 AND TRIM(MA.EXPIRY_DAT) IS NOT NULL"

----------------------------- BANK REPORTS (NON FINANCIAL POSITION) -----------------------

1) BG_POST_MOCK_REPORT

"SELECT DISTINCT 
MA.MASTER_REF TI_MASTER_REF,BG.BG_SRL_NUM FINACLE_BG_SRL_NUM, 
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=BG.BG_SRL_NUM THEN 'TRUE' ELSE 'FALSE' END REF_MATCH,
PCP.CUS_MNM TI_CUSTOMER,CM.CIF_ID FINACLE_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(PCP.CUS_MNM),8,3)||SUBSTR(TRIM(PCP.CUS_MNM),1,6)=TRIM(CM.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH, 
MA.CCY TI_CCY,BG.CRNCY_CODE FINACLE_CCY,
CASE WHEN MA.CCY=BG.CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
ID.ISSUE_DATE TI_ISSUE_DATE,TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') FINACLE_ISSUE_DATE,
CASE WHEN ID.ISSUE_DATE=TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ISSUE_DATE_MATCH,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,TO_CHAR(BG.BG_EXPIRY_DATE,'DD-MM-YYYY') FINACLE_EXPIRY_DATE,
CASE WHEN MA.EXPIRY_DAT=BG.BG_EXPIRY_DATE THEN 'TRUE' ELSE 'FALSE' END EXPIRY_DATE_MATCH,
BG.BG_ADEQ_TYPE FIN_BG_OPEN_ENDED_FLAG,
MA.LIAB_AMT/C8PWD TI_LIABILITY,BG.BG_AMT FINACLE_LIABILITY,MA.LIAB_AMT/C8PWD-BG.BG_AMT DIFFERENCE,
MA.EXPIRY_LOC TI_EXPIRY_LOCATION,BG.PLACE_LODGEMNT_CLAIM FINACLE_EXPIRY_LOCATION,
CASE WHEN NVL(trim(MA.EXPIRY_LOC),' ')=NVL(trim(BG.PLACE_LODGEMNT_CLAIM),' ') THEN 'TRUE' ELSE 'FALSE' END EXPIRY_PLACE_MATCH,
PR.CODE TI_PROD_CODE,BG.BG_TYPE FIN_BG_TYPE,BG.BG_CLASS FIN_BG_CLASS,
ACC.FIN_ACC_NUM,GAM.FORACID,
CASE WHEN ACC.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH, 
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
MA.WORKGROUP TI_WORKGROUP,BG.FREE_CODE1 FIN_WORKGROUP,
CASE WHEN nvl(TRIM(MA.WORKGROUP),' ')=nvl(TRIM(BG.FREE_CODE1),' ') THEN 'TRUE' ELSE 'FALSE' END WORKGROUP_MATCH, 
LC.OUR_CHGS TI_CHARGES_BORNE_BY, BG.CHARGES_TO FIN_BG_CHARGES_BORNE_BY,
SUBSTR(TRIM(BE.THEIR_REF),1,16) TI_BANK_REF, BG.FB_REF_NUM OTHER_BANK_REF_NUM,
APP.ADDRESS1 TI_APP_NAME,OUP.NAME FIN_APP_NAME,
CASE WHEN nvl(TRIM(APP.ADDRESS1),' ')=nvl(TRIM(OUP.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_NAME_MATCH, 
APP.ADDRESS2 TI_APP_ADD2,OUP.ADDRESS1 FIN_APP_ADD1,
CASE WHEN nvl(TRIM(APP.ADDRESS2),' ')=nvl(TRIM(OUP.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD1_MATCH,
APP.ADDRESS3 TI_APP_ADD3,OUP.ADDRESS2 FIN_APP_ADD2,
CASE WHEN nvl(TRIM(APP.ADDRESS3),' ')=nvl(TRIM(OUP.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD2_MATCH,
SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40) TI_APP_ADD_4_5,OUP.ADDRESS3 FIN_APP_ADD3,
CASE WHEN nvl(TRIM(SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40)),' ')=nvl(TRIM(OUP.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD3_MATCH,
APP.ZIPCODE TI_ZIPCODE,OUP.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(APP.ZIPCODE),' ')=nvl(TRIM(OUP.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_PIN_CODE_MATCH,
APP.COUNTRY TI_COUNTRY_CODE,OUP.CNTRY_CODE FIN_COUNTRY_CODE,
CASE WHEN nvl(TRIM(APP.COUNTRY),' ')=nvl(TRIM(OUP.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_COUNTRY_MATCH,
APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH TI_BIC_CODE,OUP.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH),' ')=nvl(TRIM(OUP.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BIC_MATCH,
BEN.ADDRESS1 TI_BEN_NAME,OUT.NAME FIN_BEN_NAME,
CASE WHEN nvl(TRIM(BEN.ADDRESS1),' ')=nvl(TRIM(OUT.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_NAME_MATCH, 
BEN.ADDRESS2 TI_BEN_ADD2,OUT.ADDRESS1 FIN_BEN_ADD1,
CASE WHEN nvl(TRIM(BEN.ADDRESS2),' ')=nvl(TRIM(OUT.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD1_MATCH,
BEN.ADDRESS3 TI_BEN_ADD3,OUT.ADDRESS2 FIN_BEN_ADD2,
CASE WHEN nvl(TRIM(BEN.ADDRESS3),' ')=nvl(TRIM(OUT.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD2_MATCH,
TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)) TI_BEN_ADD_4_5,OUT.ADDRESS3 FIN_BEN_ADD3,
CASE WHEN nvl(TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)),' ')=nvl(TRIM(OUT.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD3_MATCH,
BEN.ZIPCODE TI_ZIPCODE,OUT.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(BEN.ZIPCODE),' ')=nvl(TRIM(OUT.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_PINCODE_MATCH, 
BEN.COUNTRY TI_COUNTRY,OUT.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(BEN.COUNTRY),' ')=nvl(TRIM(OUT.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_COUNTRY_MATCH,
BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH TI_BIC_CODE,OUT.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH),' ')=nvl(TRIM(OUT.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_BIC_CODE,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS1 ELSE ADV.ADDRESS1 END TI_COR_NAME,ISS.NAME FIN_COR_NAME,
CASE WHEN nvl(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS1) ELSE TRIM(ADV.ADDRESS1) END,' ')=nvl(TRIM(ISS.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END COR_NAME_MATCH, 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS2 ELSE ADV.ADDRESS2 END TI_COR_ADD2,ISS.ADDRESS1 FIN_COR_ADD1,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS2) ELSE TRIM(ADV.ADDRESS2) END),' ')=nvl(TRIM(ISS.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD1_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS3 ELSE ADV.ADDRESS3 END TI_COR_ADD3,ISS.ADDRESS2 FIN_COR_ADD2,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS3) ELSE TRIM(ADV.ADDRESS3) END),' ')=nvl(TRIM(ISS.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD2_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35) ELSE SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,35) END TI_COR_ADD_4_5,ISS.ADDRESS3 FIN_COR_ADD3,
CASE WHEN nvl(TRIM((CASE WHEN TRIM(GTE_ID)='C' THEN SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35) ELSE SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,35) END)),' ')=nvl(TRIM(ISS.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD3_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADV.ZIPCODE) END TI_ZIPCODE,ISS.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADV.ZIPCODE) END),' ')=nvl(TRIM(ISS.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_PINCODE_MATCH, 
CASE WHEN TRIM(GTE_ID)='C' THEN trim(PCP.COUNTRY) ELSE trim(ADV.COUNTRY) END TI_COUNTRY,ISS.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN PCP.COUNTRY ELSE ADV.COUNTRY END),' ')=nvl(TRIM(ISS.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_COUNTRY_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH END TI_BIC_CODE,ISS.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH END),' ')=nvl(TRIM(ISS.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_BIC_CODE
FROM MASTER_ODS MA
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN IGMASTER_ODS IG ON IG.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY
LEFT JOIN TF_BG_ISSUE_DATE ID ON ID.MASTER_REF=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS APP ON APP.KEY97=LC.APP_PTY
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=LC.BEN_PTY
LEFT JOIN TF_OP_ACC ACC ON ACC.MASTER_REF=MA.MASTER_REF
LEFT JOIN BASEEVENT_ODS BE ON MA.KEY97=BE.MASTER_KEY AND BE.STATUS='c' AND BE.REFNO_PFIX='ISS'
LEFT JOIN PARTYDTLS_ODS ADV ON ADV.KEY97=LC.ADVBNK_PTY
LEFT JOIN TBAADM.BGM BG ON BG.BG_SRL_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CM ON CM.CUST_ID=BG.CUST_ID
LEFT JOIN TBAADM.TFAT OUP ON OUP.ADDR_B2KID=BG.BG_B2KID AND OUP.ADDR_ID='BGOUPY' AND OUP.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT OUT ON OUT.ADDR_B2KID=BG.BG_B2KID AND OUT.ADDR_ID='BGOTPY' AND OUT.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT ISS ON ISS.ADDR_B2KID=BG.BG_B2KID AND ISS.ADDR_ID='BGISBR' AND ISS.ADDR_TYPE='S' 
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=BG.OPER_ACID
LEFT JOIN TF_BG_C_TECT TECT ON TECT.ENTITY_ID=BG.BG_SRL_NUM
WHERE MA.REFNO_PFIX='SBG' AND MA.STATUS='LIV' AND MA.LIAB_AMT!=0 AND (TRIM(GTE_ID)='R' OR TRIM(GTE_ID) IS NULL)
UNION ALL
SELECT DISTINCT 
MA.MASTER_REF TI_MASTER_REF,BG.BG_SRL_NUM FINACLE_BG_SRL_NUM, 
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=BG.BG_SRL_NUM THEN 'TRUE' ELSE 'FALSE' END REF_MATCH,
PCP.CUS_MNM TI_CUSTOMER,CM.CIF_ID FINACLE_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(PCP.CUS_MNM),8,3)||SUBSTR(TRIM(PCP.CUS_MNM),1,6)=TRIM(CM.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH, 
MA.CCY TI_CCY,BG.CRNCY_CODE FINACLE_CCY,
CASE WHEN MA.CCY=BG.CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
ID.ISSUE_DATE TI_ISSUE_DATE,TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') FINACLE_ISSUE_DATE,
CASE WHEN ID.ISSUE_DATE=TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ISSUE_DATE_MATCH,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,TO_CHAR(BG.BG_EXPIRY_DATE,'DD-MM-YYYY') FINACLE_EXPIRY_DATE,
CASE WHEN MA.EXPIRY_DAT=BG.BG_EXPIRY_DATE THEN 'TRUE' ELSE 'FALSE' END EXPIRY_DATE_MATCH,
BG.BG_ADEQ_TYPE FIN_BG_OPEN_ENDED_FLAG,
MA.LIAB_AMT/C8PWD TI_LIABILITY,BG.BG_AMT FINACLE_LIABILITY,MA.LIAB_AMT/C8PWD-BG.BG_AMT DIFFERENCE,
MA.EXPIRY_LOC TI_EXPIRY_LOCATION,BG.PLACE_LODGEMNT_CLAIM FINACLE_EXPIRY_LOCATION,
CASE WHEN NVL(trim(MA.EXPIRY_LOC),' ')=NVL(trim(BG.PLACE_LODGEMNT_CLAIM),' ') THEN 'TRUE' ELSE 'FALSE' END EXPIRY_PLACE_MATCH,
PR.CODE TI_PROD_CODE,BG.BG_TYPE FIN_BG_TYPE,BG.BG_CLASS FIN_BG_CLASS,
ACC.FIN_ACC_NUM,GAM.FORACID,
CASE WHEN ACC.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH, 
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
MA.WORKGROUP TI_WORKGROUP,BG.FREE_CODE1 FIN_WORKGROUP,
CASE WHEN nvl(TRIM(MA.WORKGROUP),' ')=nvl(TRIM(BG.FREE_CODE1),' ') THEN 'TRUE' ELSE 'FALSE' END WORKGROUP_MATCH, 
LC.OUR_CHGS TI_CHARGES_BORNE_BY, BG.CHARGES_TO FIN_BG_CHARGES_BORNE_BY,
SUBSTR(TRIM(BE.THEIR_REF),1,16) TI_BANK_REF, BG.FB_REF_NUM OTHER_BANK_REF_NUM,
APP.ADDRESS1 TI_APP_NAME,OUP.NAME FIN_APP_NAME,
CASE WHEN nvl(TRIM(APP.ADDRESS1),' ')=nvl(TRIM(OUP.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_NAME_MATCH, 
APP.ADDRESS2 TI_APP_ADD2,OUP.ADDRESS1 FIN_APP_ADD1,
CASE WHEN nvl(TRIM(APP.ADDRESS2),' ')=nvl(TRIM(OUP.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD1_MATCH,
APP.ADDRESS3 TI_APP_ADD3,OUP.ADDRESS2 FIN_APP_ADD2,
CASE WHEN nvl(TRIM(APP.ADDRESS3),' ')=nvl(TRIM(OUP.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD2_MATCH,
SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40) TI_APP_ADD_4_5,OUP.ADDRESS3 FIN_APP_ADD3,
CASE WHEN nvl(TRIM(SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40)),' ')=nvl(TRIM(OUP.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD3_MATCH,
APP.ZIPCODE TI_ZIPCODE,OUP.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(APP.ZIPCODE),' ')=nvl(TRIM(OUP.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_PIN_CODE_MATCH,
APP.COUNTRY TI_COUNTRY_CODE,OUP.CNTRY_CODE FIN_COUNTRY_CODE,
CASE WHEN nvl(TRIM(APP.COUNTRY),' ')=nvl(TRIM(OUP.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_COUNTRY_MATCH,
APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH TI_BIC_CODE,OUP.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH),' ')=nvl(TRIM(OUP.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BIC_MATCH,
BEN.ADDRESS1 TI_BEN_NAME,OUT.NAME FIN_BEN_NAME,
CASE WHEN nvl(TRIM(BEN.ADDRESS1),' ')=nvl(TRIM(OUT.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_NAME_MATCH, 
BEN.ADDRESS2 TI_BEN_ADD2,OUT.ADDRESS1 FIN_BEN_ADD1,
CASE WHEN nvl(TRIM(BEN.ADDRESS2),' ')=nvl(TRIM(OUT.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD1_MATCH,
BEN.ADDRESS3 TI_BEN_ADD3,OUT.ADDRESS2 FIN_BEN_ADD2,
CASE WHEN nvl(TRIM(BEN.ADDRESS3),' ')=nvl(TRIM(OUT.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD2_MATCH,
TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)) TI_BEN_ADD_4_5,OUT.ADDRESS3 FIN_BEN_ADD3,
CASE WHEN nvl(TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)),' ')=nvl(TRIM(OUT.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD3_MATCH,
BEN.ZIPCODE TI_ZIPCODE,OUT.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(BEN.ZIPCODE),' ')=nvl(TRIM(OUT.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_PINCODE_MATCH, 
BEN.COUNTRY TI_COUNTRY,OUT.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(BEN.COUNTRY),' ')=nvl(TRIM(OUT.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_COUNTRY_MATCH,
BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH TI_BIC_CODE,OUT.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH),' ')=nvl(TRIM(OUT.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_BIC_CODE,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS1 ELSE ADV.ADDRESS1 END TI_COR_NAME,ISS.NAME FIN_COR_NAME,
CASE WHEN nvl(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS1) ELSE TRIM(ADV.ADDRESS1) END,' ')=nvl(TRIM(ISS.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END COR_NAME_MATCH, 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS2 ELSE ADV.ADDRESS2 END TI_COR_ADD2,ISS.ADDRESS1 FIN_COR_ADD1,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS2) ELSE TRIM(ADV.ADDRESS2) END),' ')=nvl(TRIM(ISS.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD1_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS3 ELSE ADV.ADDRESS3 END TI_COR_ADD3,ISS.ADDRESS2 FIN_COR_ADD2,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS3) ELSE TRIM(ADV.ADDRESS3) END),' ')=nvl(TRIM(ISS.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD2_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35) ELSE SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,35) END TI_COR_ADD_4_5,ISS.ADDRESS3 FIN_COR_ADD3,
CASE WHEN nvl(TRIM((CASE WHEN TRIM(GTE_ID)='C' THEN SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35) ELSE SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,35) END)),' ')=nvl(TRIM(ISS.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD3_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADV.ZIPCODE) END TI_ZIPCODE,ISS.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADV.ZIPCODE) END),' ')=nvl(TRIM(ISS.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_PINCODE_MATCH, 
CASE WHEN TRIM(GTE_ID)='C' THEN trim(PCP.COUNTRY) ELSE trim(ADV.COUNTRY) END TI_COUNTRY,ISS.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN PCP.COUNTRY ELSE ADV.COUNTRY END),' ')=nvl(TRIM(ISS.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_COUNTRY_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH END TI_BIC_CODE,ISS.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH END),' ')=nvl(TRIM(ISS.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_BIC_CODE
FROM MASTER_ODS MA
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN IGMASTER_ODS IG ON IG.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY
LEFT JOIN TF_BG_ISSUE_DATE ID ON ID.MASTER_REF=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS APP ON APP.KEY97=LC.APP_PTY
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=LC.BEN_PTY
LEFT JOIN TF_OP_ACC ACC ON ACC.MASTER_REF=MA.MASTER_REF
LEFT JOIN BASEEVENT_ODS BE ON MA.KEY97=BE.MASTER_KEY AND BE.STATUS='c' AND BE.REFNO_PFIX='ISS'
LEFT JOIN PARTYDTLS_ODS ADV ON ADV.KEY97=LC.ADVBNK_PTY
LEFT JOIN TBAADM.BGM BG ON BG.BG_SRL_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CM ON CM.CUST_ID=BG.CUST_ID
LEFT JOIN TBAADM.TFAT OUP ON OUP.ADDR_B2KID=BG.BG_B2KID AND OUP.ADDR_ID='BGOUPY' AND OUP.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT OUT ON OUT.ADDR_B2KID=BG.BG_B2KID AND OUT.ADDR_ID='BGOTPY' AND OUT.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT ISS ON ISS.ADDR_B2KID=BG.BG_B2KID AND ISS.ADDR_ID='BGISBR' AND ISS.ADDR_TYPE='S' 
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=BG.OPER_ACID
LEFT JOIN TF_BG_C_TECT TECT ON TECT.ENTITY_ID=BG.BG_SRL_NUM
WHERE MA.REFNO_PFIX='SBG' AND MA.STATUS='LIV' AND MA.LIAB_AMT!=0 AND TRIM(GTE_ID)='C' AND TRIM(PR.CODE) NOT IN ('COL','NOB') 
UNION ALL
SELECT DISTINCT 
MA.MASTER_REF TI_MASTER_REF,BG.BG_SRL_NUM FINACLE_BG_SRL_NUM, 
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=BG.BG_SRL_NUM THEN 'TRUE' ELSE 'FALSE' END REF_MATCH,
PCP.CUS_MNM TI_CUSTOMER,CM.CIF_ID FINACLE_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(PCP.CUS_MNM),8,3)||SUBSTR(TRIM(PCP.CUS_MNM),1,6)=TRIM(CM.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH, 
MA.CCY TI_CCY,BG.CRNCY_CODE FINACLE_CCY,
CASE WHEN MA.CCY=BG.CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
ID.ISSUE_DATE TI_ISSUE_DATE,TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') FINACLE_ISSUE_DATE,
CASE WHEN ID.ISSUE_DATE=TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ISSUE_DATE_MATCH,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,TO_CHAR(BG.BG_EXPIRY_DATE,'DD-MM-YYYY') FINACLE_EXPIRY_DATE,
CASE WHEN MA.EXPIRY_DAT=BG.BG_EXPIRY_DATE THEN 'TRUE' ELSE 'FALSE' END EXPIRY_DATE_MATCH,
BG.BG_ADEQ_TYPE FIN_BG_OPEN_ENDED_FLAG,
MA.LIAB_AMT/C8PWD TI_LIABILITY,BG.BG_AMT FINACLE_LIABILITY,MA.LIAB_AMT/C8PWD-BG.BG_AMT DIFFERENCE,
MA.EXPIRY_LOC TI_EXPIRY_LOCATION,BG.PLACE_LODGEMNT_CLAIM FINACLE_EXPIRY_LOCATION,
CASE WHEN NVL(trim(MA.EXPIRY_LOC),' ')=NVL(trim(BG.PLACE_LODGEMNT_CLAIM),' ') THEN 'TRUE' ELSE 'FALSE' END EXPIRY_PLACE_MATCH,
PR.CODE TI_PROD_CODE,BG.BG_TYPE FIN_BG_TYPE,BG.BG_CLASS FIN_BG_CLASS,
ACC.FIN_ACC_NUM,GAM.FORACID,
CASE WHEN ACC.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH, 
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
MA.WORKGROUP TI_WORKGROUP,BG.FREE_CODE1 FIN_WORKGROUP,
CASE WHEN nvl(TRIM(MA.WORKGROUP),' ')=nvl(TRIM(BG.FREE_CODE1),' ') THEN 'TRUE' ELSE 'FALSE' END WORKGROUP_MATCH, 
LC.OUR_CHGS TI_CHARGES_BORNE_BY, BG.CHARGES_TO FIN_BG_CHARGES_BORNE_BY,
SUBSTR(TRIM(BE.THEIR_REF),1,16) TI_BANK_REF, BG.FB_REF_NUM OTHER_BANK_REF_NUM,
APP.ADDRESS1 TI_APP_NAME,OUT.NAME FIN_APP_NAME,
CASE WHEN nvl(TRIM(APP.ADDRESS1),' ')=nvl(TRIM(OUT.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_NAME_MATCH, 
APP.ADDRESS2 TI_APP_ADD2,OUT.ADDRESS1 FIN_APP_ADD1,
CASE WHEN nvl(TRIM(APP.ADDRESS2),' ')=nvl(TRIM(OUT.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD1_MATCH,
APP.ADDRESS3 TI_APP_ADD3,OUT.ADDRESS2 FIN_APP_ADD2,
CASE WHEN nvl(TRIM(APP.ADDRESS3),' ')=nvl(TRIM(OUT.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD2_MATCH,
SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40) TI_APP_ADD_4_5,OUT.ADDRESS3 FIN_APP_ADD3,
CASE WHEN nvl(TRIM(SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40)),' ')=nvl(TRIM(OUT.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD3_MATCH,
APP.ZIPCODE TI_ZIPCODE,OUT.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(APP.ZIPCODE),' ')=nvl(TRIM(OUT.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_PIN_CODE_MATCH,
APP.COUNTRY TI_COUNTRY_CODE,OUT.CNTRY_CODE FIN_COUNTRY_CODE,
CASE WHEN nvl(TRIM(APP.COUNTRY),' ')=nvl(TRIM(OUT.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_COUNTRY_MATCH,
APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH TI_BIC_CODE,OUT.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH),' ')=nvl(TRIM(OUT.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BIC_MATCH,
BEN.ADDRESS1 TI_BEN_NAME,OUP.NAME FIN_BEN_NAME,
CASE WHEN nvl(TRIM(BEN.ADDRESS1),' ')=nvl(TRIM(OUP.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_NAME_MATCH, 
BEN.ADDRESS2 TI_BEN_ADD2,OUP.ADDRESS1 FIN_BEN_ADD1,
CASE WHEN nvl(TRIM(BEN.ADDRESS2),' ')=nvl(TRIM(OUP.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD1_MATCH,
BEN.ADDRESS3 TI_BEN_ADD3,OUP.ADDRESS2 FIN_BEN_ADD2,
CASE WHEN nvl(TRIM(BEN.ADDRESS3),' ')=nvl(TRIM(OUP.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD2_MATCH,
TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)) TI_BEN_ADD_4_5,OUP.ADDRESS3 FIN_BEN_ADD3,
CASE WHEN nvl(TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)),' ')=nvl(TRIM(OUP.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD3_MATCH,
BEN.ZIPCODE TI_ZIPCODE,OUP.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(BEN.ZIPCODE),' ')=nvl(TRIM(OUP.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_PINCODE_MATCH, 
BEN.COUNTRY TI_COUNTRY,OUP.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(BEN.COUNTRY),' ')=nvl(TRIM(OUP.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_COUNTRY_MATCH,
BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH TI_BIC_CODE,OUP.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH),' ')=nvl(TRIM(OUP.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_BIC_CODE,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS1 ELSE ADV.ADDRESS1 END TI_COR_NAME,ISS.NAME FIN_COR_NAME,
CASE WHEN nvl(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS1) ELSE TRIM(ADV.ADDRESS1) END,' ')=nvl(TRIM(ISS.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END COR_NAME_MATCH, 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS2 ELSE ADV.ADDRESS2 END TI_COR_ADD2,ISS.ADDRESS1 FIN_COR_ADD1,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS2) ELSE TRIM(ADV.ADDRESS2) END),' ')=nvl(TRIM(ISS.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD1_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS3 ELSE ADV.ADDRESS3 END TI_COR_ADD3,ISS.ADDRESS2 FIN_COR_ADD2,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ADDRESS3) ELSE TRIM(ADV.ADDRESS3) END),' ')=nvl(TRIM(ISS.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD2_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35) ELSE SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,35) END TI_COR_ADD_4_5,ISS.ADDRESS3 FIN_COR_ADD3,
CASE WHEN nvl(TRIM((CASE WHEN TRIM(GTE_ID)='C' THEN SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35) ELSE SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,35) END)),' ')=nvl(TRIM(ISS.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END COR_ADD3_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADV.ZIPCODE) END TI_ZIPCODE,ISS.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADV.ZIPCODE) END),' ')=nvl(TRIM(ISS.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_PINCODE_MATCH, 
CASE WHEN TRIM(GTE_ID)='C' THEN trim(PCP.COUNTRY) ELSE trim(ADV.COUNTRY) END TI_COUNTRY,ISS.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN PCP.COUNTRY ELSE ADV.COUNTRY END),' ')=nvl(TRIM(ISS.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_COUNTRY_MATCH,
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH END TI_BIC_CODE,ISS.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH END),' ')=nvl(TRIM(ISS.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END COR_BIC_CODE
FROM MASTER_ODS MA
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN IGMASTER_ODS IG ON IG.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY
LEFT JOIN TF_BG_ISSUE_DATE ID ON ID.MASTER_REF=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS APP ON APP.KEY97=LC.APP_PTY
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=LC.BEN_PTY
LEFT JOIN TF_OP_ACC ACC ON ACC.MASTER_REF=MA.MASTER_REF
LEFT JOIN BASEEVENT_ODS BE ON MA.KEY97=BE.MASTER_KEY AND BE.STATUS='c' AND BE.REFNO_PFIX='ISS'
LEFT JOIN PARTYDTLS_ODS ADV ON ADV.KEY97=LC.ADVBNK_PTY
LEFT JOIN TBAADM.BGM BG ON BG.BG_SRL_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CM ON CM.CUST_ID=BG.CUST_ID
LEFT JOIN TBAADM.TFAT OUP ON OUP.ADDR_B2KID=BG.BG_B2KID AND OUP.ADDR_ID='BGOUPY' AND OUP.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT OUT ON OUT.ADDR_B2KID=BG.BG_B2KID AND OUT.ADDR_ID='BGOTPY' AND OUT.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT ISS ON ISS.ADDR_B2KID=BG.BG_B2KID AND ISS.ADDR_ID='BGISBR' AND ISS.ADDR_TYPE='S' 
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=BG.OPER_ACID
LEFT JOIN TF_BG_C_TECT TECT ON TECT.ENTITY_ID=BG.BG_SRL_NUM
WHERE MA.REFNO_PFIX='SBG' AND MA.STATUS='LIV' AND MA.LIAB_AMT!=0 AND TRIM(GTE_ID)='C' AND TRIM(PR.CODE) IN ('COL','NOB')"

2) BG_PTN_FREE_TEXT_POST_MOCK_REPORT

"select 
'CONDITIONS' TEXT_TYPE,
tf.text_id BG_NUMBER,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_BG_FREE_TEXT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_BG_FREE_TEXT,
CASE WHEN DBMS_LOB.SUBSTR(tf.TEXT,100)=DBMS_LOB.SUBSTR(tt.TEXT,100) THEN 'TRUE' ELSE 'FALSE' END TEXT_MATCH
from tf_tftt tf
LEFT JOIN TBAADM.BGM BG ON tf.text_id=BG_SRL_NUM 
LEFT JOIN TBAADM.TFTT TT ON BG.BG_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='C' AND tt.MODULE_ID='BNKGR'
WHERE tF.TEXT_TYPE='C' AND tF.MODULE_ID='BNKGR'
UNION ALL
select 
'INSTRUCTIONS',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_BG_INSTRUCTIONS,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_BG_INTRUCTIONS,
CASE WHEN DBMS_LOB.SUBSTR(tf.TEXT,100)=DBMS_LOB.SUBSTR(tt.TEXT,100) THEN 'TRUE' ELSE 'FALSE' END TEXT_MATCH
from tf_tftt tf
LEFT JOIN TBAADM.BGM BG ON tf.text_id=BG_SRL_NUM 
LEFT JOIN TBAADM.TFTT TT ON BG.BG_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='I' AND tt.MODULE_ID='BNKGR'
WHERE tF.TEXT_TYPE='I' AND tF.MODULE_ID='BNKGR'
UNION ALL
select 
'FREE_FORMAT',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_BG_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_BG_FREE_FORMAT,
CASE WHEN DBMS_LOB.SUBSTR(tf.TEXT,100)=DBMS_LOB.SUBSTR(tt.TEXT,100) THEN 'TRUE' ELSE 'FALSE' END TEXT_MATCH
from tf_tftt tf
LEFT JOIN TBAADM.BGM BG ON tf.text_id=BG_SRL_NUM 
LEFT JOIN TBAADM.TFTT TT ON BG.BG_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='F' AND tt.MODULE_ID='BNKGR'
WHERE tF.TEXT_TYPE='F' AND tF.MODULE_ID='BNKGR'"

3) BILLS_FREE_TEXT_POST_MOCK_REPORT

"select 
'DOC_DISCR',
TO_CHAR(tf.text_id),
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN DBMS_LOB.SUBSTR(tf.TEXT,100)= DBMS_LOB.SUBSTR(tt.TEXT,100) THEN 'TRUE' ELSE 'FALSE' END  DC_DOC_DISCR_MATCH
from tf_tftt tf
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=TF.TEXT_ID
LEFT JOIN TBAADM.TFTT TT ON FB.BILL_B2K_ID=tt.TEXT_ID AND tt.TEXT_TYPE='L' AND tt.MODULE_ID='FBILL'
WHERE tF.TEXT_TYPE='L' AND tF.MODULE_ID='FBILL'
UNION ALL
select 
'PRIN_NOTES',
TO_CHAR(tf.B2K_ID),
DBMS_LOB.SUBSTR(tf.MSG,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(FX.MSG,100),
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.MSG,100))= TRIM(DBMS_LOB.SUBSTR(FX.MSG,100)) THEN 'TRUE' ELSE 'FALSE' END PRIN_NOTES_MATCH 
--DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT
from TF_FRTT_FXM tf
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=TF.B2K_ID
LEFT JOIN TBAADM.FXM FX ON FB.BILL_B2K_ID=FX.B2K_ID AND FX.MSG_CLASS='O' AND FX.B2K_TYPE='FBILL' AND FX.MSG_SRL_NUM='0001'
WHERE TF.MSG_CLASS='O' AND TF.B2K_TYPE='FBILL' AND TF.MSG_SRL_NUM='0001'
UNION ALL
select 
'PRES_NOTES',
TO_CHAR(tf.B2K_ID),
DBMS_LOB.SUBSTR(tf.MSG,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(FX.MSG,100),
CASE WHEN DBMS_LOB.SUBSTR(tf.MSG,100)= DBMS_LOB.SUBSTR(FX.MSG,100) THEN 'TRUE' ELSE 'FALSE' END PRES_NOTES_MATCH
--DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT
from TF_FRTT_FXM tf
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=TF.B2K_ID
LEFT JOIN TBAADM.FXM FX ON FB.BILL_B2K_ID=FX.B2K_ID AND FX.MSG_CLASS='O' AND FX.B2K_TYPE='FBILL' AND FX.MSG_SRL_NUM='0003'
WHERE TF.MSG_CLASS='O' AND TF.B2K_TYPE='FBILL' AND TF.MSG_SRL_NUM='0003'"

4) DBC_POST_MOCK_REPORT

"SELECT  
MA.MASTER_REF,FB.BILL_ID,
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=FB.BILL_ID THEN 'TRUE' ELSE 'FALSE' END NUMBER_MATCH,
MA.CCY TI_CCY,FB.BILL_CRNCY_CODE FIN_CCY,
CASE WHEN MA.CCY=FB.BILL_CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
DRWE.CUS_MNM TI_CUSTOMER,CMG.CIF_ID FIN_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(DRWE.CUS_MNM),8,3)||SUBSTR(TRIM(DRWE.CUS_MNM),1,6)=TRIM(CMG.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH,
OP.FIN_ACC_NUM TI_aCCOUNT,GAM.FORACID FIN_ACCOUNT,
CASE WHEN OP.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH,
CD.PAY_AMT/C8PWD TI_BILL_AMOUNT,FB.BILL_AMT FIN_BIULL_AMOUNT,
CD.PAY_AMT/C8PWD-FB.BILL_AMT DIFFERENCE,
CASE WHEN TRIM(CD.TENOR_DATE) IS NOT NULL THEN TO_CHAR(CD.TENOR_DATE,'DD-MM-YYYY') ELSE TO_CHAR(CM.RCVD_DATE,'DD-MM-YYYY') END TI_DUE_DATE,TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') FIN_DUE_DATE,
CASE WHEN CASE WHEN TRIM(CD.TENOR_DATE) IS NOT NULL THEN TO_CHAR(CD.TENOR_DATE,'DD-MM-YYYY') ELSE TO_CHAR(CM.RCVD_DATE,'DD-MM-YYYY') END=TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END DUE_DATE_MATCH,
CASE WHEN TRIM(CD.BASEDATE) IS NOT NULL THEN TO_CHAR(CD.BASEDATE,'DD-MM-YYYY') ELSE TO_CHAR((CM.RCVD_DATE),'DD-MM-YYYY') END TI_ONBOARDDATE, TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') FIN_ONBOARDDATE,
CASE WHEN CASE WHEN TRIM(CD.BASEDATE) IS NOT NULL THEN TO_CHAR(CD.BASEDATE,'DD-MM-YYYY') ELSE TO_CHAR((CM.RCVD_DATE),'DD-MM-YYYY') END=TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ONBOARD_DATE_MATCH,
CD.PAY_AMT/C8PWD TI_INVOICEAMT,FEI.TOTAL_INVOICE_AMT FIN_INVOICEAMT,
TO_CHAR(BE.START_DATE,'DD-MM-YYYY') TI_LODGEDATE,TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') FIN_LODGEDATE,
CASE WHEN BE.START_DATE=FB.LODG_DATE THEN 'TRUE' ELSE 'FALSE' END LODGE_DATE_MATCH,
TRIM(CD.TENOR_FROM) TI_TENOR_FROM,FB.USANCE_DESC FINTENOR_FROM,
CD.TENOR_NO TI_TENOR,FB.USANCE_DAYS FIN_TENOR,FB.BILL_TENOR,FB.BILL_PARAM_TYPE,
TO_CHAR(BA.FINISHED,'DD-MM-YYYY') TI_ACCEPT_DATE,TO_CHAR(FB.ACCEPT_DATE,'DD-MM-YYYY') FIN_ACCEPT_DATE,
TRIM(Be.THEIR_REF) TI_OTHER_BANK_REF,FB.FB_REF_NUM FIN_OTHER_BANK_REF,
CM.GOODSCODE TI_GOODSCODE,FEI.CMMDTY_CODE FIN_GOODSCODE,CDTY.COMMODITY_DESC,
CM.SHIP_FROM TI_SHIP_FROM,FEI.ORIGIN_OF_GOODS FIN_SHIP_FROM,
CASE WHEN TRIM(CM.SHIP_FROM)=TRIM(FEI.ORIGIN_OF_GOODS) THEN 'TRUE' ELSE 'FALSE' END SHIP_FROM_MATCH,
CM.SHIP_TO TI_SHIP_TO,FEI.DEST_OF_GOODS FIN_SHIP_TO,
CASE WHEN TRIM(CM.SHIP_TO)=TRIM(FEI.DEST_OF_GOODS) THEN 'TRUE' ELSE 'FALSE' END SHIP_TO_MATCH,
CM.VESSEL TI_VESSEL_NAME,FEI.VESSEL_NAME FIN_VESSEL_NAME,
CASE WHEN NVL(TRIM(CM.VESSEL),' ')=NVL(TRIM(FEI.VESSEL_NAME),' ') THEN 'TRUE' ELSE 'FALSE' END VESSEL_NAME_MATCH,
DRWR.ADDRESS1 TI_DRAWER_NAME,DRAWER.NAME FIN_DRAWER_NAME,
CASE WHEN TRIM(DRWR.ADDRESS1)=TRIM(DRAWER.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWER_NAME_MATCH, 
DRWR.ADDRESS2 TI_DRAWER_ADD1,DRAWER.ADDRESS1 FIN_DRAWER_ADD1,
CASE WHEN TRIM(DRWR.ADDRESS2)=TRIM(DRAWER.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD1_MATCH, 
DRWR.ADDRESS3 TI_DRAWER_ADD2,DRAWER.ADDRESS2 FIN_DRAWER_ADD2,
CASE WHEN TRIM(DRWR.ADDRESS3)=TRIM(DRAWER.ADDRESS2) THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD2_MATCH, 
DRWR.ADDRESS4||DRWR.ADDRESS5 TI_DRAWER_ADD3,DRAWER.ADDRESS3 FIN_DRAWER_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWR.ADDRESS4)||' '||TRIM(DRWR.ADDRESS5)),' ')=NVL(TRIM(DRAWER.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD3_MATCH,  
DRWR.COUNTRY TI_DRAWER_COUNTRY,DRAWER.CNTRY_CODE FIN_DRAWER_COUNTRY,
CASE WHEN NVL(TRIM(DRWR.COUNTRY),' ')=NVL(TRIM(DRAWER.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_COUNTRY_MATCH, 
DRWR.ZIPCODE TI_DRAWER_PINCODE,DRAWER.PIN_CODE FIN_DRAWER_PINCODE,
CASE WHEN NVL(TRIM(DRWR.ZIPCODE),' ')=NVL(TRIM(DRAWER.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_PINCODE_MATCH, 
DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH TI_DRAWER_BICCODE,DRAWER.BIC_CODE FIN_DRAWER_BICCODE,
CASE WHEN NVL(TRIM(DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH),' ')=NVL(TRIM(DRAWER.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_BICCODE_MATCH, 
DRWE.ADDRESS1 TI_DRAWEE_NAME,DRAWEE.NAME FIN_DRAWEE_NAME,
CASE WHEN NVL(TRIM(DRWE.ADDRESS1),' ')=NVL(TRIM(DRAWEE.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_NAME_MATCH,  
DRWE.ADDRESS2 TI_DRAWEE_ADD1,DRAWEE.ADDRESS1 FIN_DRAWEE_ADD1,
CASE WHEN NVL(TRIM(DRWE.ADDRESS2),' ')=NVL(TRIM(DRAWEE.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD1_MATCH,  
DRWE.ADDRESS3 TI_DRAWEE_ADD2,DRAWEE.ADDRESS2 FIN_DRAWEE_ADD2,
CASE WHEN NVL(TRIM(DRWE.ADDRESS3),' ')=NVL(TRIM(DRAWEE.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD2_MATCH,
DRWE.ADDRESS4||DRWE.ADDRESS5 TI_DRAWEE_ADD3,DRAWEE.ADDRESS3 FIN_DRAWEE_ADD3,
CASE WHEN NVL(trim(TRIM(DRWE.ADDRESS4)||' '||TRIM(DRWE.ADDRESS5)),' ')=NVL(TRIM(DRAWEE.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD3_MATCH, 
DRWE.COUNTRY TI_DRAWEE_COUNTRY,DRAWEE.CNTRY_CODE FIN_DRAWEE_COUNTRY,
CASE WHEN NVL(TRIM(DRWE.COUNTRY),' ')=NVL(TRIM(DRAWEE.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_COUNTRY_MATCH, 
DRWE.ZIPCODE TI_DRAWEE_PINCODE,DRAWEE.PIN_CODE FIN_DRAWEE_PINCODE,
CASE WHEN NVL(TRIM(DRWE.ZIPCODE),' ')=NVL(TRIM(DRAWEE.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_PINCODE_MATCH,  
DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH TI_DRAWEE_BICCODE,DRAWEE.BIC_CODE FIN_DRAWEE_BICCODE,
CASE WHEN NVL(TRIM(DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH),' ')=NVL(TRIM(DRAWEE.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_BICCODE_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS1 ELSE PCP.ADDRESS1 END TI_BANK_NAME,COLLBANK.NAME FIN_BANK_NAME,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS1 ELSE PCP.ADDRESS1 END)=TRIM(COLLBANK.NAME) THEN 'TRUE' ELSE 'FALSE' END BANK_NAME_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS2 ELSE PCP.ADDRESS2 END TI_BANK_ADD1,COLLBANK.ADDRESS1 FIN_BANK_ADD1,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS2 ELSE PCP.ADDRESS2 END)=TRIM(COLLBANK.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END BANK_ADD1_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS3 ELSE PCP.ADDRESS3 END TI_BANK_ADD2,COLLBANK.ADDRESS2 FIN_BANK_ADD2,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS3 ELSE PCP.ADDRESS3 END)=TRIM(COLLBANK.ADDRESS2) THEN 'TRUE' ELSE 'FALSE' END BANK_ADD2_MATCH,
CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(SUBSTR(TRIM(NPCP.ADDRESS4)||' '||TRIM(NPCP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,45)) END TI_BANK_ADD3,COLLBANK.ADDRESS3 FIN_BANK_ADD3,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(SUBSTR(TRIM(NPCP.ADDRESS4)||' '||TRIM(NPCP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,45)) END)=TRIM(COLLBANK.ADDRESS3) THEN 'TRUE' ELSE 'FALSE' END BANK_ADD3_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.COUNTRY ELSE PCP.COUNTRY END TI_BANK_COUNTRY,COLLBANK.CNTRY_CODE FIN_BANK_COUNTRY,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.COUNTRY ELSE PCP.COUNTRY END)=TRIM(COLLBANK.CNTRY_CODE) THEN 'TRUE' ELSE 'FALSE' END BANK_COUNTRY_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(NPCP.ZIPCODE) ELSE TRIM(PCP.ZIPCODE) END TI_BANK_PINCODE,COLLBANK.PIN_CODE FIN_BANK_PINCODE,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(NPCP.ZIPCODE) ELSE TRIM(PCP.ZIPCODE) END)=TRIM(COLLBANK.PIN_CODE) THEN 'TRUE' ELSE 'FALSE' END BANK_PINCODE_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.SW_BANK||NPCP.SW_CTR||NPCP.SW_LOC||NPCP.SW_BRANCH ELSE PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH END TI_BANK_BICCODE,COLLBANK.BIC_CODE FIN_BANK_BICCODE,
CASE WHEN TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.SW_BANK||NPCP.SW_CTR||NPCP.SW_LOC||NPCP.SW_BRANCH ELSE PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH END)=TRIM(COLLBANK.BIC_CODE) THEN 'TRUE' ELSE 'FALSE' END BANK_BICCODE_MATCH 
FROM MASTER_ODS MA
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN TIDATAITEM_ODS TI ON TI.MASTER_KEY=MA.KEY97
INNER JOIN COLLDRAFT_ODS CD ON TI.KEY97=CD.KEY97
INNER JOIN COLLMASTER_ODS CM ON MA.KEY97=CM.KEY97
LEFT JOIN PARTYDTLS_ODS DRWE ON DRWE.KEY97=CM.DRAWEE_PTY
LEFT JOIN PARTYDTLS_ODS DRWR ON DRWR.KEY97=CM.DRAWER_PTY 
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY -- BANK BASED ON PCP_ROLE='RBK'
LEFT JOIN PARTYDTLS_ODS NPCP ON NPCP.KEY97=MA.NPCP_PTY -- BANK BASED ON NPCP_ROLE='CBK'
LEFT JOIN TF_OP_ACC OP ON OP.MASTER_REF=MA.MASTER_REF
INNER JOIN BASEEVENT_ODS BE ON BE.MASTER_KEY=MA.KEY97 AND BE.REFNO_PFIX='CRE'
LEFT JOIN BASEEVENT_ODS BA ON BA.MASTER_KEY=MA.KEY97 AND CD.ACC_EV=BA.KEY97
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=FB.PARTY_CODE
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=FB.OPER_ACID
LEFT JOIN TBAADM.FEI ON FEI.BILL_ID=FB.BILL_ID
LEFT JOIN TBAADM.CDTY CDTY ON CDTY.COMMODITY_CODE=FEI.CMMDTY_CODE AND CDTY.BANK_ID='01'
LEFT JOIN TBAADM.TFAT COLLBANK ON COLLBANK.ADDR_B2KID=FB.BILL_B2K_ID AND COLLBANK.ADDR_ID='COLLBANK' AND COLLBANK.ADDR_TYPE='S' 
LEFT JOIN TBAADM.TFAT DRAWEE ON DRAWEE.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWEE.ADDR_ID='DRAWEE' AND DRAWEE.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT DRAWER ON DRAWER.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWER.ADDR_ID='DRAWER' AND DRAWER.ADDR_TYPE='S'
WHERE CD.O_S_AMT!=0 AND MA.TOTLIABAMT!=0 AND MA.STATUS='LIV' AND MA.REFNO_PFIX IN 'COL' AND TRIM(CD.STATUS) NOT IN ('RT','P')
ORDER BY FB.BILL_ID"

5) ELC_POST_MOCK_PARTY_ADD_REPORT

"SELECT 
MA.MASTER_REF,DC.DC_REF_NUM,
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=DC.DC_REF_NUM THEN 'TRUE' ELSE 'FALSE' END DC_NUMBER_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ADDRESS1) ELSE TRIM(RCVDP.ADDRESS1) END TI_APPL_BANK_NAME,DCAPBK.NAME FIN_APPL_BANK_NAME,
CASE WHEN CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ADDRESS1) ELSE TRIM(RCVDP.ADDRESS1) END=TRIM(DCAPBK.NAME) THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_NAME_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN (CASE WHEN TRIM(ISSUP.ADDRESS2) IS NULL THEN ' ' ELSE ISSUP.ADDRESS2 END) ELSE (CASE WHEN TRIM(RCVDP.ADDRESS2) IS NULL THEN ' ' ELSE RCVDP.ADDRESS2 END) END TI_APPL_BANK_ADD1,DCAPBK.ADDRESS1 FIN_APPL_BANK_ADD1,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN (CASE WHEN TRIM(ISSUP.ADDRESS2) IS NULL THEN '' ELSE TRIM(ISSUP.ADDRESS2) END) ELSE (CASE WHEN TRIM(RCVDP.ADDRESS2) IS NULL THEN '' ELSE TRIM(RCVDP.ADDRESS2) END) END),' ')=NVL(TRIM(DCAPBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_ADD1_MATCH, 
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS3 ELSE RCVDP.ADDRESS3 END TI_APPL_BANK_ADD2,DCAPBK.ADDRESS2 FIN_APPL_BANK_ADD2,
CASE WHEN NVL(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ADDRESS3) ELSE TRIM(RCVDP.ADDRESS3) END,' ')=NVL(TRIM(DCAPBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_ADD2_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(SUBSTR(TRIM(ISSUP.ADDRESS4)||' '||TRIM(ISSUP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(RCVDP.ADDRESS4)||' '||TRIM(RCVDP.ADDRESS5),1,45)) END TI_APPL_BANK_ADD3,DCAPBK.ADDRESS3 FIN_APPL_BANK_ADD3,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(SUBSTR(TRIM(ISSUP.ADDRESS4)||' '||TRIM(ISSUP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(RCVDP.ADDRESS4)||' '||TRIM(RCVDP.ADDRESS5),1,45)) END),' ')=NVL(TRIM(DCAPBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_ADD3_MATCH, 
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ZIPCODE) ELSE TRIM(RCVDP.ZIPCODE) END TI_APPL_BANK_PINCODE,DCAPBK.PIN_CODE FIN_APPL_BANK_PINCODE,
CASE WHEN NVL(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ZIPCODE) ELSE TRIM(RCVDP.ZIPCODE) END,' ')=NVL(TRIM(DCAPBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_PINCODE_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.COUNTRY ELSE RCVDP.COUNTRY END TI_APPL_BANK_COUNTRY,DCAPBK.CNTRY_CODE FIN_APPL_BANK_COUNTRY,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.COUNTRY) ELSE TRIM(RCVDP.COUNTRY) END),' ')=NVL(TRIM(DCAPBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_COUNTRY_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.SW_BANK||ISSUP.SW_CTR||ISSUP.SW_LOC||ISSUP.SW_BRANCH ELSE RCVDP.SW_BANK||RCVDP.SW_CTR||RCVDP.SW_LOC||RCVDP.SW_BRANCH END TI_APPL_BANK_BIC,DCAPBK.BIC_CODE FIN_APPL_BANK_BIC,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.SW_BANK||ISSUP.SW_CTR||ISSUP.SW_LOC||ISSUP.SW_BRANCH ELSE RCVDP.SW_BANK||RCVDP.SW_CTR||RCVDP.SW_LOC||RCVDP.SW_BRANCH END),' ')=NVL(TRIM(DCAPBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_BIC_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS1 ELSE RCVDP.ADDRESS1 END TI_ISS_BANK_NAME,DCISBK.NAME FIN_ISS_BANK_NAME,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ADDRESS1) ELSE TRIM(RCVDP.ADDRESS1) END),' ')=NVL(TRIM(DCAPBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_NAME_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN (CASE WHEN TRIM(ISSUP.ADDRESS2) IS NULL THEN ' ' ELSE ISSUP.ADDRESS2 END) ELSE (CASE WHEN TRIM(RCVDP.ADDRESS2) IS NULL THEN ' ' ELSE RCVDP.ADDRESS2 END) END TI_ISS_BANK_ADD1,DCISBK.ADDRESS1 FIN_ISS_BANK_ADD1,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN (CASE WHEN TRIM(ISSUP.ADDRESS2) IS NULL THEN '' ELSE TRIM(ISSUP.ADDRESS2) END) ELSE (CASE WHEN TRIM(RCVDP.ADDRESS2) IS NULL THEN '' ELSE TRIM(RCVDP.ADDRESS2) END) END),' ')=NVL(TRIM(DCAPBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_ADD1_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS3 ELSE RCVDP.ADDRESS3 END TI_ISS_BANK_ADD2,DCISBK.ADDRESS2 FIN_ISS_BANK_ADD2,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ADDRESS3) ELSE TRIM(RCVDP.ADDRESS3) END),' ')=NVL(TRIM(DCAPBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_ADD2_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(SUBSTR(TRIM(ISSUP.ADDRESS4)||' '||TRIM(ISSUP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(RCVDP.ADDRESS4)||' '||TRIM(RCVDP.ADDRESS5),1,45)) END TI_ISS_BANK_ADD3,DCISBK.ADDRESS3 FIN_ISS_BANK_ADD3,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(SUBSTR(TRIM(ISSUP.ADDRESS4)||' '||TRIM(ISSUP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(RCVDP.ADDRESS4)||' '||TRIM(RCVDP.ADDRESS5),1,45)) END),' ')=NVL(TRIM(DCAPBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_ADD3_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ZIPCODE) ELSE TRIM(RCVDP.ZIPCODE) END TI_ISS_BANK_PINCODE,DCISBK.PIN_CODE FIN_ISS_BANK_PINCODE,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ZIPCODE) ELSE TRIM(RCVDP.ZIPCODE) END),' ')=NVL(TRIM(DCAPBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_PINCODE_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.COUNTRY ELSE RCVDP.COUNTRY END TI_ISS_BANK_COUNTRY,DCISBK.CNTRY_CODE FIN_ISS_BANK_COUNTRY,
CASE WHEN NVL(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.COUNTRY) ELSE TRIM(RCVDP.COUNTRY) END,' ')=NVL(TRIM(DCAPBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_COUNTRY_MATCH,
CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.SW_BANK||ISSUP.SW_CTR||ISSUP.SW_LOC||ISSUP.SW_BRANCH ELSE RCVDP.SW_BANK||RCVDP.SW_CTR||RCVDP.SW_LOC||RCVDP.SW_BRANCH END TI_ISS_BANK_BIC,DCISBK.BIC_CODE FIN_ISS_BANK_BIC,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.SW_BANK||ISSUP.SW_CTR||ISSUP.SW_LOC||ISSUP.SW_BRANCH ELSE RCVDP.SW_BANK||RCVDP.SW_CTR||RCVDP.SW_LOC||RCVDP.SW_BRANCH END),' ')=NVL(TRIM(DCAPBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_BIC_MATCH,
TRIM(CABRN) TI_ADV_BANK_NAME,DCADBK.NAME FIN_ADV_BANK_NAME,
CASE WHEN TRIM(CABRN)=DCADBK.NAME THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_NAME_MATCH,
CASE WHEN TRIM(CABAD2) IS NOT NULL THEN TO_CHAR(TRIM(CABAD2)) ELSE ' ' END TI_ADV_BANK_ADD1,DCADBK.ADDRESS1 FIN_ADV_BANK_ADD1,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(CABAD2) IS NOT NULL THEN TO_CHAR(TRIM(CABAD2)) ELSE ' ' END),' ')=NVL(TRIM(DCADBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_ADD1_MATCH, 
TRIM(CABAD3) TI_ADV_BANK_ADD2,DCADBK.ADDRESS2 FIN_ADV_BANK_ADD2,
CASE WHEN NVL(TRIM(CABAD3),' ')=NVL(TRIM(DCADBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_ADD2_MATCH,
TRIM(CABAD4) TI_ADV_BANK_ADD3,DCADBK.ADDRESS3 FIN_ADV_BANK_ADD3,
CASE WHEN NVL(TRIM(CABAD4),' ')=NVL(TRIM(DCADBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_ADD3_MATCH,
' ' TI_ADV_BANK_PINCODE,DCADBK.PIN_CODE FIN_ADV_BANK_PINCODE,
CASE WHEN ' '=NVL(DCADBK.PIN_CODE,' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_PINCODE_MATCH,
'KW' TI_ADV_BANK_COUNTRY,DCADBK.CNTRY_CODE FIN_ADV_BANK_COUNTRY,
CASE WHEN 'KW'=DCADBK.CNTRY_CODE THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_COUNTRY_MATCH,
CASWB||CACNAS||CASWL||CASWBR TI_ADV_BANK_BIC,DCADBK.BIC_CODE FIN_ADV_BANK_BIC,
CASE WHEN CASWB||CACNAS||CASWL||CASWBR=DCADBK.BIC_CODE THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_BICCODE_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABRN))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(THRDP.ADDRESS1)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABRN)) 
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS1 ELSE RCVDP.ADDRESS1 END)
     WHEN TRIM(LC.AVWTH_TYP)='U' THEN 'ANY BANK IN COUNTRY'
     WHEN TRIM(LC.AVWTH_TYP)='W' THEN 'ANY BANK'
     ELSE TRIM(AVW.ADDRESS1) END TI_AVW_BANK_NAME,DCAWBK.NAME FIN_AVW_BANK_NAME,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABRN))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(THRDP.ADDRESS1)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABRN)) 
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS1 ELSE RCVDP.ADDRESS1 END)
     WHEN TRIM(LC.AVWTH_TYP)='U' THEN 'ANY BANK IN COUNTRY'
     WHEN TRIM(LC.AVWTH_TYP)='W' THEN 'ANY BANK'
     ELSE TRIM(AVW.ADDRESS1) END),' ')=NVL(TRIM(DCAWBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_NAME_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABAD2))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(THRDP.ADDRESS2)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABAD2))
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN (CASE WHEN TRIM(ISSUP.ADDRESS2) IS NULL THEN ' ' ELSE ISSUP.ADDRESS2 END) ELSE (CASE WHEN TRIM(RCVDP.ADDRESS2) IS NULL THEN ' ' ELSE RCVDP.ADDRESS2 END) END)
     WHEN TRIM(LC.AVWTH_TYP)='U' THEN ' '
     WHEN TRIM(LC.AVWTH_TYP)='W' THEN ' '
     ELSE TRIM(AVW.ADDRESS2) END TI_AVW_BANK_ADD1,DCAWBK.ADDRESS1 FIN_AVW_BANK_ADD1,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABAD2))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(THRDP.ADDRESS2)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABAD2))
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN (CASE WHEN TRIM(ISSUP.ADDRESS2) IS NULL THEN ' ' ELSE ISSUP.ADDRESS2 END) ELSE (CASE WHEN TRIM(RCVDP.ADDRESS2) IS NULL THEN ' ' ELSE RCVDP.ADDRESS2 END) END)
     WHEN TRIM(LC.AVWTH_TYP)='U' THEN ' '
     WHEN TRIM(LC.AVWTH_TYP)='W' THEN ' '
     ELSE TRIM(AVW.ADDRESS2) END),' ')=NVL(TRIM(DCAWBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_ADD1_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABAD3))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(THRDP.ADDRESS3)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABAD3))
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS3 ELSE RCVDP.ADDRESS3 END)
     ELSE TRIM(AVW.ADDRESS3 )END TI_AVW_BANK_ADD2,DCAWBK.ADDRESS2 FIN_AVW_BANK_ADD2,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABAD3))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(THRDP.ADDRESS3)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABAD3))
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.ADDRESS3 ELSE RCVDP.ADDRESS3 END)
     ELSE TRIM(AVW.ADDRESS3 )END),' ')=NVL(TRIM(DCAWBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_ADD2_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABAD4))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(TRIM(THRDP.ADDRESS4)||' '||TRIM(THRDP.ADDRESS5),1,45)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABAD4))
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(SUBSTR(TRIM(ISSUP.ADDRESS4)||' '||TRIM(ISSUP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(RCVDP.ADDRESS4)||' '||TRIM(RCVDP.ADDRESS5),1,45)) END)
     ELSE SUBSTR(TRIM(AVW.ADDRESS4)||' '||TRIM(AVW.ADDRESS5),1,45) END TI_AVW_BANK_ADD3,DCAWBK.ADDRESS3 FIN_AVW_BANK_ADD3,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TO_CHAR(CA.CABAD4))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(TRIM(THRDP.ADDRESS4)||' '||TRIM(THRDP.ADDRESS5),1,45)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TO_CHAR(CA.CABAD4))
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(SUBSTR(TRIM(ISSUP.ADDRESS4)||' '||TRIM(ISSUP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(RCVDP.ADDRESS4)||' '||TRIM(RCVDP.ADDRESS5),1,45)) END)
     ELSE SUBSTR(TRIM(AVW.ADDRESS4)||' '||TRIM(AVW.ADDRESS5),1,45) END),' ')=NVL(TRIM(DCAWBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_ADD3_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN ''
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(trim(THRDP.ZIPCODE),1,10)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN ''
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ZIPCODE) ELSE TRIM(RCVDP.ZIPCODE) END)
     ELSE SUBSTR(trim(AVW.ZIPCODE),1,10) END TI_AVW_BANK_PINCODE,DCAWBK.PIN_CODE FIN_AVW_BANK_PINCODE,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN ''
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(trim(THRDP.ZIPCODE),1,10)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN ''
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN TRIM(ISSUP.ZIPCODE) ELSE TRIM(RCVDP.ZIPCODE) END)
     ELSE SUBSTR(trim(AVW.ZIPCODE),1,10) END),' ')=NVL(TRIM(DCAWBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_PINCODE_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN 'KW'
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(trim(THRDP.COUNTRY),1,10)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN 'KW'
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.COUNTRY ELSE RCVDP.COUNTRY END)
     ELSE SUBSTR(trim(AVW.COUNTRY),1,10) END TI_AVW_BANK_COUNTRY,DCAWBK.CNTRY_CODE FIN_AVW_BANK_COUNTRY,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN 'KW'
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(trim(THRDP.COUNTRY),1,10)
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN 'KW'
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.COUNTRY ELSE RCVDP.COUNTRY END)
     ELSE SUBSTR(trim(AVW.COUNTRY),1,10) END),' ')=NVL(TRIM(DCAWBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_COUNTRY_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TRIM(CASWB)||TRIM(CACNAS)||TRIM(CASWL)||TRIM(CASWBR))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN (TRIM(THRDP.SW_BANK)||TRIM(THRDP.SW_CTR)||TRIM(THRDP.SW_LOC)||TRIM(THRDP.SW_BRANCH))
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TRIM(CASWB)||TRIM(CACNAS)||TRIM(CASWL)||TRIM(CASWBR)) 
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.SW_BANK||ISSUP.SW_CTR||ISSUP.SW_LOC||ISSUP.SW_BRANCH ELSE RCVDP.SW_BANK||RCVDP.SW_CTR||RCVDP.SW_LOC||RCVDP.SW_BRANCH END)
     ELSE TRIM(AVW.SW_BANK)||TRIM(AVW.SW_CTR)||TRIM(AVW.SW_LOC)||TRIM(AVW.SW_BRANCH) END TI_AVW_BANK_BIC,DCAWBK.BIC_CODE FIN_AVW_BANK_BIC,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' AND TRIM(THRDP.ADDRESS1) IS NULL THEN TRIM(TRIM(CASWB)||TRIM(CACNAS)||TRIM(CASWL)||TRIM(CASWBR))
     WHEN TRIM(LC.AVWTH_TYP)='A' THEN (TRIM(THRDP.SW_BANK)||TRIM(THRDP.SW_CTR)||TRIM(THRDP.SW_LOC)||TRIM(THRDP.SW_BRANCH))
     WHEN TRIM(LC.AVWTH_TYP)='S' THEN TRIM(TRIM(CASWB)||TRIM(CACNAS)||TRIM(CASWL)||TRIM(CASWBR)) 
     WHEN TRIM(LC.AVWTH_TYP)='I' THEN (CASE WHEN TRIM(ISSUP.ADDRESS1) IS NOT NULL THEN ISSUP.SW_BANK||ISSUP.SW_CTR||ISSUP.SW_LOC||ISSUP.SW_BRANCH ELSE RCVDP.SW_BANK||RCVDP.SW_CTR||RCVDP.SW_LOC||RCVDP.SW_BRANCH END)
     ELSE TRIM(AVW.SW_BANK)||TRIM(AVW.SW_CTR)||TRIM(AVW.SW_LOC)||TRIM(AVW.SW_BRANCH) END),' ')=NVL(TRIM(DCAWBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_BICCODE_MATCH,
RMBP.ADDRESS1 TI_RMB_BANK_NAME,DCRBBK.NAME FIN_RMB_BANK_NAME,
CASE WHEN NVL(TRIM(RMBP.ADDRESS1),' ')=NVL(TRIM(DCRBBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_NAME_MATCH,
RMBP.ADDRESS2 TI_RMB_BANK_ADD1,DCRBBK.ADDRESS1 FIN_RMB_BANK_ADD1,
CASE WHEN NVL(TRIM(RMBP.ADDRESS2),' ')=NVL(TRIM(DCRBBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_ADD1_MATCH,
RMBP.ADDRESS3 TI_RMB_BANK_ADD2,DCRBBK.ADDRESS2 FIN_RMB_BANK_ADD2,
CASE WHEN NVL(TRIM(RMBP.ADDRESS3),' ')=NVL(TRIM(DCRBBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_ADD2_MATCH,
TRIM(TRIM(RMBP.ADDRESS4)||' '||TRIM(RMBP.ADDRESS5)) TI_RMB_BANK_ADD3,DCRBBK.ADDRESS3 FIN_RMB_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(RMBP.ADDRESS4)||' '||TRIM(RMBP.ADDRESS5)),' ')=NVL(TRIM(DCRBBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_ADD3_MATCH,
RMBP.ZIPCODE TI_RMB_BANK_PINCODE,DCRBBK.PIN_CODE FIN_RMB_BANK_PINCODE,
CASE WHEN NVL(TRIM(RMBP.ZIPCODE),' ')=NVL(TRIM(DCRBBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_PINCODE_MATCH,
RMBP.COUNTRY TI_RMB_BANK_COUNTRY,DCRBBK.CNTRY_CODE FIN_RMB_BANK_COUNTRY,
CASE WHEN NVL(TRIM(RMBP.COUNTRY),' ')=NVL(TRIM(DCRBBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_COUNTRY_MATCH,
RMBP.SW_BANK||RMBP.SW_CTR||RMBP.SW_LOC||RMBP.SW_BRANCH TI_RMB_BANK_BIC,DCRBBK.BIC_CODE FIN_RMB_BANK_BIC,
CASE WHEN NVL(TRIM(RMBP.SW_BANK||RMBP.SW_CTR||RMBP.SW_LOC||RMBP.SW_BRANCH),' ')=NVL(TRIM(DCRBBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_BICCODE_MATCH,
ADT.ADDRESS1 TI_ADT_BANK_NAME,DCATBK.NAME FIN_ADT_BANK_NAME,
CASE WHEN NVL(TRIM(ADT.ADDRESS1),' ')=NVL(TRIM(DCATBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_NAME_MATCH,
ADT.ADDRESS2 TI_ADT_BANK_ADD1,DCATBK.ADDRESS1 FIN_ADT_BANK_ADD1,
CASE WHEN NVL(TRIM(ADT.ADDRESS2),' ')=NVL(TRIM(DCATBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_ADD1_MATCH,
ADT.ADDRESS3 TI_ADT_BANK_ADD2,DCATBK.ADDRESS2 FIN_ADT_BANK_ADD2,
CASE WHEN NVL(TRIM(ADT.ADDRESS3),' ')=NVL(TRIM(DCATBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_ADD2_MATCH,
TRIM(TRIM(ADT.ADDRESS4)||' '||TRIM(ADT.ADDRESS5)) TI_ADT_BANK_ADD3,DCATBK.ADDRESS3 FIN_ADT_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(ADT.ADDRESS4)||' '||TRIM(ADT.ADDRESS5)),' ')=NVL(TRIM(DCATBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_ADD3_MATCH,
ADT.ZIPCODE TI_ADT_BANK_PINCODE,DCATBK.PIN_CODE FIN_ADT_BANK_PINCODE,
CASE WHEN NVL(TRIM(ADT.ZIPCODE),' ')=NVL(TRIM(DCATBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_PINCODE_MATCH,
ADT.COUNTRY TI_ADT_BANK_COUNTRY,DCATBK.CNTRY_CODE FIN_ADT_BANK_COUNTRY,
CASE WHEN NVL(TRIM(ADT.COUNTRY),' ')=NVL(TRIM(DCATBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_COUNTRY_MATCH,
ADT.SW_BANK||ADT.SW_CTR||ADT.SW_LOC||ADT.SW_BRANCH TI_ADT_BANK_BIC,DCATBK.BIC_CODE FIN_ADT_BANK_BIC,
CASE WHEN NVL(TRIM(ADT.SW_BANK||ADT.SW_CTR||ADT.SW_LOC||ADT.SW_BRANCH),' ')=NVL(TRIM(DCATBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_BICCODE_MATCH
FROM TF_ELC_MASTER TF
LEFT JOIN MASTER_ODS MA ON MA.MASTER_REF=TF.MASTER_REF
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN CAPF CA ON CA.CABBN=CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END 
LEFT JOIN PARTYDTLS_ODS ISSUP ON ISSUP.KEY97=LC.ISSPTY_PTY
LEFT JOIN PARTYDTLS_ODS RCVDP ON RCVDP.KEY97=LC.RCVD_PTY
LEFT JOIN PARTYDTLS_ODS THRDP ON THRDP.KEY97=LC.THIRD_PTY
LEFT JOIN PARTYDTLS_ODS ADT ON ADT.KEY97=LC.ADVTHR_PTY
LEFT JOIN PARTYDTLS_ODS RMBP ON RMBP.KEY97=LC.REIMB_PTY
LEFT JOIN PARTYDTLS_ODS AVW ON AVW.KEY97=LC.AVWBNK_PTY
LEFT JOIN TBAADM.DCMM DC ON DC.DC_REF_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.TFAT DCADBK ON DCADBK.ADDR_B2KID=DC.DC_B2KID AND DCADBK.ADDR_TYPE='S' AND DCADBK.ADDR_ID='DCADBK'
LEFT JOIN TBAADM.TFAT DCAWBK ON DCAWBK.ADDR_B2KID=DC.DC_B2KID AND DCAWBK.ADDR_TYPE='S' AND DCAWBK.ADDR_ID='DCAWBK'
LEFT JOIN TBAADM.TFAT DCATBK ON DCATBK.ADDR_B2KID=DC.DC_B2KID AND DCATBK.ADDR_TYPE='S' AND DCATBK.ADDR_ID='DCATBK'
LEFT JOIN TBAADM.TFAT DCRBBK ON DCRBBK.ADDR_B2KID=DC.DC_B2KID AND DCRBBK.ADDR_TYPE='S' AND DCRBBK.ADDR_ID='DCRBBK'
LEFT JOIN TBAADM.TFAT DCAPBK ON DCAPBK.ADDR_B2KID=DC.DC_B2KID AND DCAPBK.ADDR_TYPE='S' AND DCAPBK.ADDR_ID='DCAPBK'
LEFT JOIN TBAADM.TFAT DCISBK ON DCISBK.ADDR_B2KID=DC.DC_B2KID AND DCISBK.ADDR_TYPE='S' AND DCISBK.ADDR_ID='DCISBK'"

6) ELC_POST_MOCK_REPORT

"SELECT 
MA.MASTER_REF TI_REFERENCE,DC.DC_REF_NUM FIN_REFERENCE,
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=DC.DC_REF_NUM THEN 'TRUE' ELSE 'FALSE' END NUMBER_MATCH,
MA.CCY TI_CURRENCY,DC.CONT_LIAB_CRNCY FIN_CURRENCY,
CASE WHEN MA.CCY=DC.CONT_LIAB_CRNCY THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
ISD.ISSUE_DATE TI_ISSUE_DATE,TO_CHAR(DC.DATE_OPND,'DD-MM-YYYY') FIN_ISSUE_DATE,
CASE WHEN ISD.ISSUE_DATE=TO_CHAR(DC.DATE_OPND,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ISSUE_DATE_MATCH,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,TO_CHAR(DC.EXPIRY_DATE,'DD-MM-YYYY') FIN_EXPIRY_DATE,
CASE WHEN TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY')=TO_CHAR(DC.EXPIRY_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END EXPIRY_DATE_MATCH,
MA.LIAB_AMT/C8PWD TI_OS_AMOUNT,DC.CONT_LIAB_AMT FIN_OS_AMOUNT,(MA.LIAB_AMT/C8PWD)-DC.CONT_LIAB_AMT DIFFERENCE,
MA.EXPIRY_LOC TI_EXPIRY_LOCATION,DC.PLACE_OF_EXPIRY FIN_EXPIRY_LOCATION,
CASE WHEN TRIM(MA.EXPIRY_LOC)=TRIM(DC.PLACE_OF_EXPIRY) THEN 'TRUE' ELSE 'FALSE' END EXPIRY_LOCATION_MATCH, 
PR.CODE TI_PRODUCT,DC.DC_REG_TYPE FIN_PRODUCT,
ACC.FIN_ACC_NUM TI_ACCOUNT,GAM.FORACID FIN_ACCOUNT,
CASE WHEN ACC.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_NUMBER_MATCH,
TO_CHAR(LC.SHIP_DATE,'DD-MM-YYYY') TI_SHIPMENT_DATE,TO_CHAR(DC.LAST_SHIP_DATE,'DD-MM-YYYY') FIN_SHIPMENT_DATE,
CASE WHEN NVL(TO_CHAR(LC.SHIP_DATE,'DD-MM-YYYY'),' ')=NVL(TO_CHAR(DC.LAST_SHIP_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END SHIPMENT_DATE_MATCH, 
LC.INCOTERMS TI_INCOTERM,DC.SHIPMENT_TERMS FIN_SHIPMENT_TERM,
CASE WHEN NVL(LC.INCOTERMS,' ')=NVL(DC.SHIPMENT_TERMS,' ') THEN 'TRUE' ELSE 'FALSE' END SHIPMENT_TERM_MATCH, 
LC.AVAIL_BY TI_AVAILABLE_BY,DC.AVAILABLE_BY FIN_AVAILABLE_BY,
CASE WHEN NVL(TRIM(CASE WHEN LC.AVAIL_BY='S' THEN 'P' ELSE TO_CHAR(LC.AVAIL_BY) END),' ')=NVL(DC.AVAILABLE_BY,' ') THEN 'TRUE' ELSE 'FALSE' END AVAILABLE_BY_MATCH, 
LC.PART_SHIP TI_PART_SHIPMENT,DC.PARTSHIPMENT_FLG FIN_PART_SHIPMENT,
CASE WHEN CASE WHEN SUBSTR(LC.PART_SHIP,1,1)='A' THEN 'Y' ELSE 'N' END=DC.PARTSHIPMENT_FLG THEN 'TRUE' ELSE 'FALSE' END PART_SHIPMENT_MATCH,  
LC.TRANS_SHIP TI_TRANS_SHIPMENT,DC.TRANSHIPMENT_FLG FIN_TRANS_SHIPMENT,
CASE WHEN CASE WHEN SUBSTR(LC.TRANS_SHIP,1,1)='A' THEN 'Y' ELSE 'N' END=DC.TRANSHIPMENT_FLG THEN 'TRUE' ELSE 'FALSE' END TRANS_SHIPMENT_MATCH, 
LC.GOODSCODE TI_GOODS_CODE,DC.COMMODITY_CODE FIN_GOODS_CODE,COMMODITY_DESC FIN_GOODS_DESC,
LC.CONF_INSTR TI_CONF_FLAG,DC.CONFIRMED_FLG FIN_CONF_FLAG,
CASE WHEN CASE WHEN LC.CONF_INSTR='C' THEN 'Y' ELSE 'N' END=DC.CONFIRMED_FLG THEN 'TRUE' ELSE 'FALSE' END DC_CONF_FLAG_MATCH,
MA.CANPRNREF TI_OTHER_BANK_REF,DC.OTHER_BANK_REF_NUM FIN_OTHER_BANK_REF,
CASE WHEN MA.CANPRNREF=DC.OTHER_BANK_REF_NUM THEN 'TRUE' ELSE 'FALSE' END OTHER_BANK_REF_MATCH, 
TRIM(LC.TENOR_FROM) TI_TENOR_FROM,DC.TENOR_IND FIN_TENOR_IND,
CASE WHEN NVL(TRIM(CASE WHEN SUBSTR(TRIM(LC.TENOR_FROM),1,1)='S' AND TRIM(LC.TENOR_NO) IS NULL THEN 'S' ELSE 'U' END),' ')=NVL(TRIM(DC.TENOR_IND),' ') THEN 'TRUE' ELSE 'FALSE' END TENOR_IND_MATCH,
LC.TENOR_NO TI_TENOR_NO,DC.USANCE_TENOR_DAYS FIN_TENOR_NO,
CASE WHEN TRIM(CASE WHEN TRIM(LC.TENOR_NO) IS NULL THEN '0' ELSE TO_CHAR(LC.TENOR_NO) END)=DC.USANCE_TENOR_DAYS THEN 'TRUE' ELSE 'FALSE' END TENOR_NO_MATCH, 
PCP.ADDRESS1 TI_APPL_NAME,DCOTPY.NAME FIN_APPL_NAME,
CASE WHEN TRIM(PCP.ADDRESS1)=DCOTPY.NAME THEN 'TRUE' ELSE 'FALSE' END APPL_NAME_MATCH, 
PCP.ADDRESS2 TI_APPL_ADD1,DCOTPY.ADDRESS1 FIN_APPL_ADD1,
CASE WHEN TRIM(PCP.ADDRESS2)=TRIM(DCOTPY.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END APPL_ADD1_MATCH, 
PCP.ADDRESS3 TI_APPL_ADD2,DCOTPY.ADDRESS2 FIN_APPL_ADD2,
CASE WHEN NVL(TRIM(PCP.ADDRESS3),' ')=NVL(TRIM(DCOTPY.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD2_MATCH, 
TRIM(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5)) TI_APPL_ADD3,DCOTPY.ADDRESS3 FIN_APPL_ADD3,
CASE WHEN NVL(TRIM(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5)),' ')=NVL(TRIM(DCOTPY.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD3_MATCH,
PCP.COUNTRY TI_APPL_COUNTRY,DCOTPY.CNTRY_CODE FIN_APPL_COUNTRY,
CASE WHEN NVL(TRIM(PCP.COUNTRY),' ')=NVL(TRIM(DCOTPY.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_COUNTRY_MATCH, 
PCP.ZIPCODE TI_APPL_PINCODE,DCOTPY.PIN_CODE FIN_APPL_PINCODE,
CASE WHEN NVL(TRIM(PCP.ZIPCODE),' ')=NVL(TRIM(DCOTPY.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_PINCODE_MATCH, 
PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH TI_APPL_BIC,DCOTPY.BIC_CODE FIN_APPL_BIC,
CASE WHEN NVL(TRIM(PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH),' ')=NVL(TRIM(DCOTPY.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BICCODE_MATCH, 
BEN.CUS_MNM TI_CUSTOMER,CMG.CIF_ID FIN_CUSTOMER,
CASE WHEN NVL(TRIM(SUBSTR(TRIM(BEN.CUS_MNM),8,3)||SUBSTR(TRIM(BEN.CUS_MNM),1,6)),' ')=NVL(SUBSTR(TRIM(CMG.CIF_ID),2,9),' ') THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH,  
BEN.ADDRESS1 TI_BEN_NAME,DCOUPY.NAME FIN_BEN_NAME,
CASE WHEN TRIM(BEN.ADDRESS1)=TRIM(DCOUPY.NAME) THEN 'TRUE' ELSE 'FALSE' END BEN_NAME_MATCH,
BEN.ADDRESS2 TI_BEN_ADD1,DCOUPY.ADDRESS1 FIN_BEN_ADD1,
CASE WHEN NVL(TRIM(BEN.ADDRESS2),' ')=NVL(TRIM(DCOUPY.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD1_MATCH, 
BEN.ADDRESS3 TI_BEN_ADD2,DCOUPY.ADDRESS2 FIN_BEN_ADD2,
CASE WHEN NVL(TRIM(BEN.ADDRESS3),' ')=NVL(TRIM(DCOUPY.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD2_MATCH,
TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)) TI_BEN_ADD3,DCOUPY.ADDRESS3 FIN_BEN_ADD3,
CASE WHEN NVL(TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)),' ')=NVL(TRIM(DCOUPY.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD3_MATCH,
BEN.COUNTRY TI_BEN_COUNTRY,DCOUPY.CNTRY_CODE FIN_BEN_COUNTRY,
CASE WHEN NVL(TRIM(BEN.COUNTRY),' ')=NVL(TRIM(DCOUPY.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_COUNTRY_MATCH, 
BEN.ZIPCODE TI_BEN_PINCODE,DCOUPY.PIN_CODE FIN_BEN_PINCODE,
CASE WHEN NVL(TRIM(BEN.ZIPCODE),' ')=NVL(TRIM(DCOTPY.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_PINCODE_MATCH,
BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH TI_BEN_BIC,DCOUPY.BIC_CODE FIN_BEN_BIC,
CASE WHEN NVL(TRIM(BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH),' ')=NVL(TRIM(DCOUPY.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_BICCODE_MATCH 
FROM TF_ELC_MASTER TF
LEFT JOIN MASTER_ODS MA ON TF.MASTER_REF=MA.MASTER_REF
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=LC.APP_PTY
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=LC.BEN_PTY
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE 
LEFT JOIN TF_OP_ACC ACC ON ACC.MASTER_REF=MA.MASTER_REF
LEFT JOIN TBAADM.DCMM DC ON DC.DC_REF_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=DC.BENEF_PARTY_CODE
LEFT JOIN TF_LC_ISSUE_DATE ISD ON ISD.MASTER_REF=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=DC.OUR_PARTY_ACID
LEFT JOIN TF_LC_C_TECT TECT ON TECT.ENTITY_ID=DC.DC_REF_NUM
LEFT JOIN TBAADM.CDTY CDTY ON CDTY.COMMODITY_CODE=DC.COMMODITY_CODE AND CDTY.BANK_ID='01'
LEFT JOIN TBAADM.TFAT DCOUPY ON DCOUPY.ADDR_B2KID=DC.DC_B2KID AND DCOUPY.ADDR_ID='DCOUPY' AND DCOUPY.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT DCOTPY ON DCOTPY.ADDR_B2KID=DC.DC_B2KID AND DCOTPY.ADDR_ID='DCOTPY' AND DCOTPY.ADDR_TYPE='S'"

7) ILC_BILLS_POST_MOCK_REPORT

"SELECT 
CASE WHEN PARTPAY.PP_STAT='M' THEN 'ACCEPTED'
     WHEN PARTPAY.PP_STAT='P' THEN 'PAID'
     WHEN PARTPAY.PP_STAT='O' THEN 'LODGED' 
END STATUS,
MA.MASTER_REF,BE.REFNO_SERL,FB.BILL_ID,
CASE WHEN SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),1,5)||'-'||SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),11,6)||'B'||LPAD(BE.REFNO_SERL,3,0)=FB.BILL_ID THEN 'TRUE' ELSE 'FALSE' END BILL_ID_MATCH,
MA.CCY TI_CCY,FB.BILL_CRNCY_CODE FIN_CCY,
CASE WHEN MA.CCY=FB.BILL_CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
DRWE.CUS_MNM TI_CUSTOMER,CMG.CIF_ID FIN_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(DRWE.CUS_MNM),8,3)||SUBSTR(TRIM(DRWE.CUS_MNM),1,6)=TRIM(CMG.CIF_ID) THEN 'TRUE' ELSE 'FLASE' END CUST_MATCH, 
OP.FIN_ACC_NUM TI_aCCOUNT,GAM.FORACID FIN_ACCOUNT,
CASE WHEN OP.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH,
BE.AMOUNT/C8PWD TI_BILL_AMOUNT,FB.BILL_AMT FIN_BILL_AMOUNT,BE.AMOUNT/C8PWD-FB.BILL_AMT DIFFERENCE, 
case WHEN TRIM(LCPAY.PAYDUEDATE) IS NOT NULL AND PARTPAY.FROMAFTER!='F' THEN TO_CHAR(LCPAY.PAYDUEDATE,'DD-MM-YYYY') ELSE TO_CHAR(PARTPAY.VALUE_DAT,'DD-MM-YYYY') END TI_DUE_DATE,TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') FIN_DUE_DATE,
CASE WHEN case WHEN TRIM(LCPAY.PAYDUEDATE) IS NOT NULL AND PARTPAY.FROMAFTER!='F' THEN TO_CHAR(LCPAY.PAYDUEDATE,'DD-MM-YYYY') ELSE TO_CHAR(PARTPAY.VALUE_DAT,'DD-MM-YYYY') END=TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END DUE_DATE_MATCH,
CASE WHEN TRIM(PARTPAY.START_DATE) IS NOT NULL THEN TO_CHAR(PARTPAY.START_DATE,'DD-MM-YYYY') ELSE TO_CHAR(BE.START_DATE,'DD-MM-YYYY') END TI_ONBOARDDATE, TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') FIN_ONBOARDDATE,
CASE WHEN CASE WHEN TRIM(PARTPAY.START_DATE) IS NOT NULL THEN TO_CHAR(PARTPAY.START_DATE,'DD-MM-YYYY') ELSE TO_CHAR(BE.START_DATE,'DD-MM-YYYY') END=TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ONBOARDDATE_MATCH_NOT_IN_TI, 
BE.AMOUNT/C8PWD TI_INVOICEAMT,FEI.TOTAL_INVOICE_AMT FIN_INVOICEAMT,
CASE WHEN BE.AMOUNT/C8PWD=FEI.TOTAL_INVOICE_AMT THEN 'TRUE' ELSE 'FALSE' END INVOICEAMT_MATCH, 
CASE WHEN LCPAY.CHGADD_AMT IS NULL THEN 0 ELSE LCPAY.CHGADD_AMT/C8PWD END TI_OTHER_BANK_CHARGE, FB.OTHER_BANK_CHRG FIN_OTHER_BANK_CHARGE,
CASE WHEN CASE WHEN LCPAY.CHGADD_AMT IS NULL THEN 0 ELSE LCPAY.CHGADD_AMT/C8PWD END=FB.OTHER_BANK_CHRG THEN 'TRUE' ELSE 'FALSE' END OTHER_BANK_CHARGE_MATCH,
TO_CHAR(BE.START_DATE,'DD-MM-YYYY') TI_LODGEDATE,TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') FIN_LODGEDATE,
CASE WHEN TO_CHAR(BE.START_DATE,'DD-MM-YYYY')=TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END LODGE_DATE_MATCH,
TRIM(LC.TENOR_FROM) TI_TENOR_FROM,--FB.USANCE_DESC FINTENOR_FROM,
LC.TENOR_NO TI_TENOR,FB.USANCE_DAYS FIN_TENOR,
CASE WHEN LC.TENOR_NO=FB.USANCE_DAYS THEN 'TRUE' ELSE 'FALSE' END TENOR_MATCH,
FB.BILL_TENOR,FB.BILL_PARAM_TYPE,
TRIM(Be.THEIR_REF) TI_OTHER_BANK_REF,FB.FB_REF_NUM FIN_OTHER_BANK_REF,
CASE WHEN TRIM(Be.THEIR_REF)=FB.FB_REF_NUM THEN 'TRUE' ELSE 'FALSE' END OTHER_BANK_REF_MATCH, 
LC.GOODSCODE TI_GOODSCODE,FEI.CMMDTY_CODE FIN_GOODSCODE,CDTY.COMMODITY_DESC,
DRWR.ADDRESS1 TI_DRAWER_NAME,DRAWER.NAME FIN_DRAWER_NAME,
CASE WHEN TRIM(DRWR.ADDRESS1)=TRIM(DRAWER.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWER_NAME_MATCH, 
DRWR.ADDRESS2 TI_DRAWER_ADD1,DRAWER.ADDRESS1 FIN_DRAWER_ADD1,
CASE WHEN TRIM(DRWR.ADDRESS2)=TRIM(DRAWER.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD1_MATCH, 
DRWR.ADDRESS3 TI_DRAWER_ADD2,DRAWER.ADDRESS2 FIN_DRAWER_ADD2,
CASE WHEN TRIM(DRWR.ADDRESS3)=TRIM(DRAWER.ADDRESS2) THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD2_MATCH,
TRIM(TRIM(DRWR.ADDRESS4)||' '||TRIM(DRWR.ADDRESS5)) TI_DRAWER_ADD3,DRAWER.ADDRESS3 FIN_DRAWER_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWR.ADDRESS4)||' '||TRIM(DRWR.ADDRESS5)),' ')=NVL(TRIM(DRAWER.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD3_MATCH,
DRWR.COUNTRY TI_DRAWER_COUNTRY,DRAWER.CNTRY_CODE FIN_DRAWER_COUNTRY,
CASE WHEN NVL(TRIM(DRWR.COUNTRY),' ')=NVL(TRIM(DRAWER.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_COUNTRY_MATCH, 
DRWR.ZIPCODE TI_DRAWER_PINCODE,DRAWER.PIN_CODE FIN_DRAWER_PINCODE,
CASE WHEN NVL(TRIM(DRWR.ZIPCODE),' ')=NVL(TRIM(DRAWER.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_PINCODE_MATCH, 
DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH TI_DRAWER_BICCODE,DRAWER.BIC_CODE FIN_DRAWER_BICCODE,
CASE WHEN NVL(TRIM(DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH),' ')=NVL(TRIM(DRAWER.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_BICCODE_MATCH, 
DRWE.ADDRESS1 TI_DRAWEE_NAME,DRAWEE.NAME FIN_DRAWEE_NAME,
CASE WHEN TRIM(DRWE.ADDRESS1)=TRIM(DRAWEE.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWEE_NAME_MATCH,
DRWE.ADDRESS2 TI_DRAWEE_ADD1,DRAWEE.ADDRESS1 FIN_DRAWEE_ADD1,
CASE WHEN TRIM(DRWE.ADDRESS2)=TRIM(DRAWEE.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD1_MATCH,
DRWE.ADDRESS3 TI_DRAWEE_ADD2,DRAWEE.ADDRESS2 FIN_DRAWEE_ADD2,
CASE WHEN NVL(TRIM(DRWE.ADDRESS3),' ')=NVL(TRIM(DRAWEE.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD2_MATCH,
DRWE.ADDRESS4||DRWE.ADDRESS5 TI_DRAWEE_ADD3,DRAWEE.ADDRESS3 FIN_DRAWEE_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWE.ADDRESS4)||' '||TRIM(DRWE.ADDRESS5)),' ')=NVL(TRIM(DRAWEE.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD3_MATCH,
DRWE.COUNTRY TI_DRAWEE_COUNTRY,DRAWEE.CNTRY_CODE FIN_DRAWEE_COUNTRY,
CASE WHEN NVL(TRIM(DRWE.COUNTRY),' ')=NVL(TRIM(DRAWEE.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_COUNTRY_MATCH,
DRWE.ZIPCODE TI_DRAWEE_PINCODE,DRAWEE.PIN_CODE FIN_DRAWEE_PINCODE,
CASE WHEN NVL(TRIM(DRWE.ZIPCODE),' ')=NVL(TRIM(DRAWEE.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_PINCODE_MATCH,
DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH TI_DRAWEE_BICCODE,DRAWEE.BIC_CODE FIN_DRAWEE_BICCODE,
CASE WHEN NVL(TRIM(DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH),' ')=NVL(TRIM(DRAWEE.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_BICCODE_MATCH,
CB.ADDRESS1 TI_BANK_NAME,COLLBANK.NAME FIN_BANK_NAME,
CASE WHEN TRIM(CB.ADDRESS1)=TRIM(COLLBANK.NAME) THEN 'TRUE' ELSE 'FALSE' END BANK_NAME_MATCH,
CB.ADDRESS2 TI_BANK_ADD1,COLLBANK.ADDRESS1 FIN_BANK_ADD1,
CASE WHEN NVL(TRIM(CB.ADDRESS2),' ')=NVL(TRIM(COLLBANK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD1_MATCH,
CB.ADDRESS3 TI_BANK_ADD2,COLLBANK.ADDRESS2 FIN_BANK_ADD2,
CASE WHEN NVL(TRIM(CB.ADDRESS3),' ')=NVL(TRIM(COLLBANK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD2_MATCH,
TRIM(TRIM(CB.ADDRESS4)||' '||TRIM(CB.ADDRESS5)) TI_BANK_ADD3,COLLBANK.ADDRESS3 FIN_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(CB.ADDRESS4)||' '||TRIM(CB.ADDRESS5)),' ')=NVL(TRIM(COLLBANK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD3_MATCH,
CB.COUNTRY TI_BANK_COUNTRY,COLLBANK.CNTRY_CODE FIN_BANK_COUNTRY,
CASE WHEN NVL(TRIM(CB.COUNTRY),' ')=NVL(TRIM(COLLBANK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_COUNTRY_MATCH,
TRIM(CB.ZIPCODE) TI_BANK_PINCODE,COLLBANK.PIN_CODE FIN_BANK_PINCODE,
CASE WHEN NVL(TRIM(CB.ZIPCODE),' ')=NVL(TRIM(COLLBANK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_PINCODE_MATCH,
CB.SW_BANK||CB.SW_CTR||CB.SW_LOC||CB.SW_BRANCH TI_BANK_BICCODE,COLLBANK.BIC_CODE FIN_BANK_BICCODE,
CASE WHEN NVL(TRIM(CB.SW_BANK||CB.SW_CTR||CB.SW_LOC||CB.SW_BRANCH),' ')=NVL(TRIM(COLLBANK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_BICCODE_MATCH
FROM MASTER_ODS MA
INNER JOIN TF_ILC_MASTER TF ON TF.MASTER_REF=MA.MASTER_REF
LEFT JOIN LCMASTER_ODS LC ON MA.KEY97=LC.KEY97
LEFT JOIN BASEEVENT_ODS BE ON BE.MASTER_KEY=MA.KEY97 AND BE.AMOUNT!=0
LEFT JOIN PARTYDTLS_ODS DRWR ON DRWR.KEY97=LC.BEN_PTY
LEFT JOIN PARTYDTLS_ODS DRWE ON DRWE.KEY97=LC.APP_PTY
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN C8PF C8 ON C8.C8CCY=MA.CCY
LEFT JOIN LCPAYMENT_ODS LCPAY ON LCPAY.KEY97=BE.KEY97
LEFT JOIN PARTPAYMNT_ODS PARTPAY ON PARTPAY.OR_PAY_EV=BE.KEY97 AND PARTPAY.PAYEV_KEY IS NULL
LEFT JOIN TIDATAITEM_ODS TIO ON BE.KEY97=TIO.EVENT_KEY AND TIO.TYPEFLAG='27713'
INNER JOIN PARTYDTLS_ODS CB ON CB.KEY97=TIO.KEY97 AND LCPAY.PRSPTY_PTY=CB.ROLE
LEFT JOIN TF_OP_ACC OP ON OP.MASTER_REF=MA.MASTER_REF
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),1,5)||'-'||SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),11,6)||'B'||LPAD(BE.REFNO_SERL,3,0)
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=FB.PARTY_CODE
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=FB.OPER_ACID
LEFT JOIN TBAADM.FEI ON FEI.BILL_ID=FB.BILL_ID
LEFT JOIN TBAADM.CDTY CDTY ON CDTY.COMMODITY_CODE=FEI.CMMDTY_CODE AND CDTY.BANK_ID='01'
LEFT JOIN TBAADM.TFAT COLLBANK ON COLLBANK.ADDR_B2KID=FB.BILL_B2K_ID AND COLLBANK.ADDR_ID='COLLBANK' AND COLLBANK.ADDR_TYPE='S' 
LEFT JOIN TBAADM.TFAT DRAWEE ON DRAWEE.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWEE.ADDR_ID='DRAWEE' AND DRAWEE.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT DRAWER ON DRAWER.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWER.ADDR_ID='DRAWER' AND DRAWER.ADDR_TYPE='S'
LEFT JOIN TF_LC_BILL_APPL APPL ON APPL.BILLID=FB.BILL_ID
WHERE  BE.STATUS='c' AND TRIM(BE.REFNO_PFIX) = 'CLM'
AND MA.REFNO_PFIX='ILC'
AND PARTPAY.PP_STAT NOT IN ('R','P')"

8) ILC_LQ_BILLS_POST_MOCK_REPORT

"SELECT 
CASE WHEN PARTPAY.PP_STAT='M' THEN 'ACCEPTED'
     WHEN PARTPAY.PP_STAT='P' THEN 'PAID'
     WHEN PARTPAY.PP_STAT='O' THEN 'LODGED' 
END STATUS,
MA.MASTER_REF,BE.REFNO_SERL,FB.BILL_ID,
CASE WHEN SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),1,5)||'-'||SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),11,6)||'B'||LPAD(BE.REFNO_SERL,3,0)=FB.BILL_ID THEN 'TRUE' ELSE 'FALSE' END BILL_ID_MATCH,
MA.CCY TI_CCY,FB.BILL_CRNCY_CODE FIN_CCY,
CASE WHEN MA.CCY=FB.BILL_CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
DRWE.CUS_MNM TI_CUSTOMER,CMG.CIF_ID FIN_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(DRWE.CUS_MNM),8,3)||SUBSTR(TRIM(DRWE.CUS_MNM),1,6)=TRIM(CMG.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH, 
OP.FIN_ACC_NUM TI_aCCOUNT,GAM.FORACID FIN_ACCOUNT,
CASE WHEN OP.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH,
BE.AMOUNT/C8PWD TI_BILL_AMOUNT,FB.BILL_AMT FIN_BILL_AMOUNT,BE.AMOUNT/C8PWD-FB.BILL_AMT DIFFERENCE, 
case WHEN TRIM(LCPAY.PAYDUEDATE) IS NOT NULL AND PARTPAY.FROMAFTER!='F' THEN TO_CHAR(LCPAY.PAYDUEDATE,'DD-MM-YYYY') ELSE TO_CHAR(PARTPAY.VALUE_DAT,'DD-MM-YYYY') END TI_DUE_DATE,TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') FIN_DUE_DATE,
CASE WHEN case WHEN TRIM(LCPAY.PAYDUEDATE) IS NOT NULL AND PARTPAY.FROMAFTER!='F' THEN TO_CHAR(LCPAY.PAYDUEDATE,'DD-MM-YYYY') ELSE TO_CHAR(PARTPAY.VALUE_DAT,'DD-MM-YYYY') END=TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END DUE_DATE_MATCH,
CASE WHEN TRIM(PARTPAY.START_DATE) IS NOT NULL THEN TO_CHAR(PARTPAY.START_DATE,'DD-MM-YYYY') ELSE TO_CHAR(BE.START_DATE,'DD-MM-YYYY') END TI_ONBOARDDATE, TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') FIN_ONBOARDDATE,
CASE WHEN CASE WHEN TRIM(PARTPAY.START_DATE) IS NOT NULL THEN TO_CHAR(PARTPAY.START_DATE,'DD-MM-YYYY') ELSE TO_CHAR(BE.START_DATE,'DD-MM-YYYY') END=TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ONBOARDDATE_MATCH_NOT_IN_TI, 
BE.AMOUNT/C8PWD TI_INVOICEAMT,FEI.TOTAL_INVOICE_AMT FIN_INVOICEAMT,
CASE WHEN BE.AMOUNT/C8PWD=FEI.TOTAL_INVOICE_AMT THEN 'TRUE' ELSE 'FALSE' END INVOICEAMT_MATCH, 
CASE WHEN LCPAY.CHGADD_AMT IS NULL THEN 0 ELSE LCPAY.CHGADD_AMT/C8PWD END TI_OTHER_BANK_CHARGE, FB.OTHER_BANK_CHRG FIN_OTHER_BANK_CHARGE,
CASE WHEN CASE WHEN LCPAY.CHGADD_AMT IS NULL THEN 0 ELSE LCPAY.CHGADD_AMT/C8PWD END=FB.OTHER_BANK_CHRG THEN 'TRUE' ELSE 'FALSE' END OTHER_BANK_CHARGE_MATCH,
TO_CHAR(BE.START_DATE,'DD-MM-YYYY') TI_LODGEDATE,TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') FIN_LODGEDATE,
CASE WHEN TO_CHAR(BE.START_DATE,'DD-MM-YYYY')=TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END LODGE_DATE_MATCH,
TRIM(LC.TENOR_FROM) TI_TENOR_FROM,--FB.USANCE_DESC FINTENOR_FROM,
LC.TENOR_NO TI_TENOR,FB.USANCE_DAYS FIN_TENOR,
CASE WHEN LC.TENOR_NO=FB.USANCE_DAYS THEN 'TRUE' ELSE 'FALSE' END TENOR_MATCH,
FB.BILL_TENOR,FB.BILL_PARAM_TYPE,
TRIM(Be.THEIR_REF) TI_OTHER_BANK_REF,FB.FB_REF_NUM FIN_OTHER_BANK_REF,
CASE WHEN TRIM(Be.THEIR_REF)=FB.FB_REF_NUM THEN 'TRUE' ELSE 'FALSE' END OTHER_BANK_REF_MATCH, 
LC.GOODSCODE TI_GOODSCODE,FEI.CMMDTY_CODE FIN_GOODSCODE,CDTY.COMMODITY_DESC,
DRWR.ADDRESS1 TI_DRAWER_NAME,DRAWER.NAME FIN_DRAWER_NAME,
CASE WHEN TRIM(DRWR.ADDRESS1)=TRIM(DRAWER.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWER_NAME_MATCH, 
DRWR.ADDRESS2 TI_DRAWER_ADD1,DRAWER.ADDRESS1 FIN_DRAWER_ADD1,
CASE WHEN TRIM(DRWR.ADDRESS2)=TRIM(DRAWER.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD1_MATCH, 
DRWR.ADDRESS3 TI_DRAWER_ADD2,DRAWER.ADDRESS2 FIN_DRAWER_ADD2,
CASE WHEN TRIM(DRWR.ADDRESS3)=TRIM(DRAWER.ADDRESS2) THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD2_MATCH,
TRIM(TRIM(DRWR.ADDRESS4)||' '||TRIM(DRWR.ADDRESS5)) TI_DRAWER_ADD3,DRAWER.ADDRESS3 FIN_DRAWER_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWR.ADDRESS4)||' '||TRIM(DRWR.ADDRESS5)),' ')=NVL(TRIM(DRAWER.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD3_MATCH,
DRWR.COUNTRY TI_DRAWER_COUNTRY,DRAWER.CNTRY_CODE FIN_DRAWER_COUNTRY,
CASE WHEN NVL(TRIM(DRWR.COUNTRY),' ')=NVL(TRIM(DRAWER.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_COUNTRY_MATCH, 
DRWR.ZIPCODE TI_DRAWER_PINCODE,DRAWER.PIN_CODE FIN_DRAWER_PINCODE,
CASE WHEN NVL(TRIM(DRWR.ZIPCODE),' ')=NVL(TRIM(DRAWER.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_PINCODE_MATCH, 
DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH TI_DRAWER_BICCODE,DRAWER.BIC_CODE FIN_DRAWER_BICCODE,
CASE WHEN NVL(TRIM(DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH),' ')=NVL(TRIM(DRAWER.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_BICCODE_MATCH, 
DRWE.ADDRESS1 TI_DRAWEE_NAME,DRAWEE.NAME FIN_DRAWEE_NAME,
CASE WHEN TRIM(DRWE.ADDRESS1)=TRIM(DRAWEE.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWEE_NAME_MATCH,
DRWE.ADDRESS2 TI_DRAWEE_ADD1,DRAWEE.ADDRESS1 FIN_DRAWEE_ADD1,
CASE WHEN TRIM(DRWE.ADDRESS2)=TRIM(DRAWEE.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD1_MATCH,
DRWE.ADDRESS3 TI_DRAWEE_ADD2,DRAWEE.ADDRESS2 FIN_DRAWEE_ADD2,
CASE WHEN NVL(TRIM(DRWE.ADDRESS3),' ')=NVL(TRIM(DRAWEE.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD2_MATCH,
DRWE.ADDRESS4||DRWE.ADDRESS5 TI_DRAWEE_ADD3,DRAWEE.ADDRESS3 FIN_DRAWEE_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWE.ADDRESS4)||' '||TRIM(DRWE.ADDRESS5)),' ')=NVL(TRIM(DRAWEE.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD3_MATCH,
DRWE.COUNTRY TI_DRAWEE_COUNTRY,DRAWEE.CNTRY_CODE FIN_DRAWEE_COUNTRY,
CASE WHEN NVL(TRIM(DRWE.COUNTRY),' ')=NVL(TRIM(DRAWEE.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_COUNTRY_MATCH,
DRWE.ZIPCODE TI_DRAWEE_PINCODE,DRAWEE.PIN_CODE FIN_DRAWEE_PINCODE,
CASE WHEN NVL(TRIM(DRWE.ZIPCODE),' ')=NVL(TRIM(DRAWEE.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_PINCODE_MATCH,
DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH TI_DRAWEE_BICCODE,DRAWEE.BIC_CODE FIN_DRAWEE_BICCODE,
CASE WHEN NVL(TRIM(DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH),' ')=NVL(TRIM(DRAWEE.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_BICCODE_MATCH,
CB.ADDRESS1 TI_BANK_NAME,COLLBANK.NAME FIN_BANK_NAME,
CASE WHEN TRIM(CB.ADDRESS1)=TRIM(COLLBANK.NAME) THEN 'TRUE' ELSE 'FALSE' END BANK_NAME_MATCH,
CB.ADDRESS2 TI_BANK_ADD1,COLLBANK.ADDRESS1 FIN_BANK_ADD1,
CASE WHEN NVL(TRIM(CB.ADDRESS2),' ')=NVL(TRIM(COLLBANK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD1_MATCH,
CB.ADDRESS3 TI_BANK_ADD2,COLLBANK.ADDRESS2 FIN_BANK_ADD2,
CASE WHEN NVL(TRIM(CB.ADDRESS3),' ')=NVL(TRIM(COLLBANK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD2_MATCH,
TRIM(TRIM(CB.ADDRESS4)||' '||TRIM(CB.ADDRESS5)) TI_BANK_ADD3,COLLBANK.ADDRESS3 FIN_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(CB.ADDRESS4)||' '||TRIM(CB.ADDRESS5)),' ')=NVL(TRIM(COLLBANK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD3_MATCH,
CB.COUNTRY TI_BANK_COUNTRY,COLLBANK.CNTRY_CODE FIN_BANK_COUNTRY,
CASE WHEN NVL(TRIM(CB.COUNTRY),' ')=NVL(TRIM(COLLBANK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_COUNTRY_MATCH,
TRIM(CB.ZIPCODE) TI_BANK_PINCODE,COLLBANK.PIN_CODE FIN_BANK_PINCODE,
CASE WHEN NVL(TRIM(CB.ZIPCODE),' ')=NVL(TRIM(COLLBANK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_PINCODE_MATCH,
CB.SW_BANK||CB.SW_CTR||CB.SW_LOC||CB.SW_BRANCH TI_BANK_BICCODE,COLLBANK.BIC_CODE FIN_BANK_BICCODE,
CASE WHEN NVL(TRIM(CB.SW_BANK||CB.SW_CTR||CB.SW_LOC||CB.SW_BRANCH),' ')=NVL(TRIM(COLLBANK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_BICCODE_MATCH
FROM MASTER_ODS MA
INNER JOIN TF_ILC_MASTER TF ON TF.MASTER_REF=MA.MASTER_REF
LEFT JOIN LCMASTER_ODS LC ON MA.KEY97=LC.KEY97
LEFT JOIN BASEEVENT_ODS BE ON BE.MASTER_KEY=MA.KEY97 AND BE.AMOUNT!=0
LEFT JOIN PARTYDTLS_ODS DRWR ON DRWR.KEY97=LC.BEN_PTY
LEFT JOIN PARTYDTLS_ODS DRWE ON DRWE.KEY97=LC.APP_PTY
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN C8PF C8 ON C8.C8CCY=MA.CCY
LEFT JOIN LCPAYMENT_ODS LCPAY ON LCPAY.KEY97=BE.KEY97
LEFT JOIN PARTPAYMNT_ODS PARTPAY ON PARTPAY.OR_PAY_EV=BE.KEY97 AND PARTPAY.PAYEV_KEY IS NULL
LEFT JOIN TIDATAITEM_ODS TIO ON BE.KEY97=TIO.EVENT_KEY AND TIO.TYPEFLAG='27713'
INNER JOIN PARTYDTLS_ODS CB ON CB.KEY97=TIO.KEY97 AND LCPAY.PRSPTY_PTY=CB.ROLE
LEFT JOIN TF_OP_ACC OP ON OP.MASTER_REF=MA.MASTER_REF
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),1,5)||'-'||SUBSTR(REPLACE((MA.MASTER_REF),'/','-'),11,6)||'B'||LPAD(BE.REFNO_SERL,3,0)
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=FB.PARTY_CODE
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=FB.OPER_ACID
LEFT JOIN TBAADM.FEI ON FEI.BILL_ID=FB.BILL_ID
LEFT JOIN TBAADM.CDTY CDTY ON CDTY.COMMODITY_CODE=FEI.CMMDTY_CODE AND CDTY.BANK_ID='01'
LEFT JOIN TBAADM.TFAT COLLBANK ON COLLBANK.ADDR_B2KID=FB.BILL_B2K_ID AND COLLBANK.ADDR_ID='COLLBANK' AND COLLBANK.ADDR_TYPE='S' 
LEFT JOIN TBAADM.TFAT DRAWEE ON DRAWEE.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWEE.ADDR_ID='DRAWEE' AND DRAWEE.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT DRAWER ON DRAWER.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWER.ADDR_ID='DRAWER' AND DRAWER.ADDR_TYPE='S'
LEFT JOIN TF_LC_BILL_APPL APPL ON APPL.BILLID=FB.BILL_ID
WHERE  BE.STATUS='c' AND TRIM(BE.REFNO_PFIX) = 'CLM'
AND MA.REFNO_PFIX='ILC'
AND PARTPAY.PP_STAT NOT IN ('P','R','M','A')
AND LCPAY.PMT_STATUS='R'"

9) ILC_POST_MOCK_PARTY_ADD_REPORT

"SELECT 
MA.MASTER_REF,DC.DC_REF_NUM,
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=DC.DC_REF_NUM THEN 'TRUE' ELSE 'FALSE' END NUMBER_MATCH, 
TRIM(CA.CABRN) TI_APPL_BANK_NAME,DCAPBK.NAME FIN_APPL_BANK_NAME,
CASE WHEN TRIM(CA.CABRN)=TRIM(DCAPBK.NAME) THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_NAME_MATCH,
TRIM(CA.CABAD2) TI_APPL_BANK_ADD1,DCAPBK.ADDRESS1 FIN_APPL_BANK_ADD1,
CASE WHEN NVL(TRIM(CA.CABAD2),' ')=NVL(TRIM(DCAPBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_ADD1_MATCH, 
CA.CABAD3 TI_APPL_BANK_ADD2,DCAPBK.ADDRESS2 FIN_APPL_BANK_ADD2,
CASE WHEN NVL(TRIM(CA.CABAD3),' ')=NVL(TRIM(DCAPBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_ADD2_MATCH,
CA.CABAD4 TI_APPL_BANK_ADD3,DCAPBK.ADDRESS3 FIN_APPL_BANK_ADD3,
CASE WHEN NVL(TRIM(CA.CABAD4),' ')=NVL(TRIM(DCAPBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_ADD3_MATCH, 
'' TI_APPL_BANK_PINCODE,DCAPBK.PIN_CODE FIN_APPL_BANK_PINCODE,
CASE WHEN ' '=NVL(TRIM(DCAPBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_PINCODE_MATCH, 
'KW' TI_APPL_BANK_COUNTRY,DCAPBK.CNTRY_CODE FIN_APPL_BANK_COUNTRY,
CASE WHEN 'KW'=TRIM(DCAPBK.CNTRY_CODE) THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_COUNTRY_MATCH, 
CA.CASWB||CA.CACNAS||CA.CASWL||CA.CASWBR TI_APPL_BANK_BIC,DCAPBK.BIC_CODE FIN_APPL_BANK_BIC,
CASE WHEN NVL(TRIM(CA.CASWB||CA.CACNAS||CA.CASWL||CA.CASWBR),' ')=NVL(TRIM(DCAPBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BANK_BICCODE_MATCH,
TRIM(CA.CABRN) TI_ISS_BANK_NAME,DCISBK.NAME FIN_ISS_BANK_NAME,
CASE WHEN TRIM(CA.CABRN)=TRIM(DCISBK.NAME) THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_NAME_MATCH,
TRIM(CA.CABAD2) TI_ISS_BANK_ADD1,DCISBK.ADDRESS1 FIN_ISS_BANK_ADD1,
CASE WHEN TRIM(CA.CABAD2)=TRIM(DCISBK.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_ADD1_MATCH,
CA.CABAD3 TI_ISS_BANK_ADD2,DCISBK.ADDRESS2 FIN_ISS_BANK_ADD2,
CASE WHEN NVL(TRIM(CA.CABAD3),' ')=NVL(TRIM(DCISBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_ADD2_MATCH,
CA.CABAD4 TI_ISS_BANK_ADD3,DCISBK.ADDRESS3 FIN_ISS_BANK_ADD3,
CASE WHEN NVL(TRIM(CA.CABAD4),' ')=NVL(TRIM(DCISBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_ADD3_MATCH,
'' TI_ISS_BANK_PINCODE,DCISBK.PIN_CODE FIN_ISS_BANK_PINCODE,
CASE WHEN ' '=NVL(TRIM(DCISBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_PINCODE_MATCH,
'KW' TI_ISS_BANK_COUNTRY,DCISBK.CNTRY_CODE FIN_ISS_BANK_COUNTRY,
CASE WHEN 'KW'=TRIM(DCISBK.CNTRY_CODE) THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_COUNTRY_MATCH,
CA.CASWB||CA.CACNAS||CA.CASWL||CA.CASWBR TI_ISS_BANK_BIC,DCISBK.BIC_CODE FIN_ISS_BANK_BIC,
CASE WHEN NVL(TRIM(CA.CASWB||CA.CACNAS||CA.CASWL||CA.CASWBR),' ')=NVL(TRIM(DCISBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ISSUE_BANK_BICCODE_MATCH,
ADV.ADDRESS1 TI_ADV_BANK_NAME,DCADBK.NAME FIN_ADV_BANK_NAME,
CASE WHEN TRIM(ADV.ADDRESS1)=TRIM(DCADBK.NAME) THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_NAME_MATCH, 
ADV.ADDRESS2 TI_ADV_BANK_ADD1,DCADBK.ADDRESS1 FIN_ADV_BANK_ADD1,
CASE WHEN NVL(TRIM(ADV.ADDRESS2),' ')=NVL(TRIM(DCADBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_ADD1_MATCH,
ADV.ADDRESS3 TI_ADV_BANK_ADD2,DCADBK.ADDRESS2 FIN_ADV_BANK_ADD2,
CASE WHEN NVL(TRIM(ADV.ADDRESS3),' ')=NVL(TRIM(DCADBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_ADD2_MATCH,
TRIM(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5)) TI_ADV_BANK_ADD3,DCADBK.ADDRESS3 FIN_ADV_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5)),' ')=NVL(TRIM(DCADBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_ADD3_MATCH,
ADV.ZIPCODE TI_ADV_BANK_PINCODE,DCADBK.PIN_CODE FIN_ADV_BANK_PINCODE,
CASE WHEN NVL(TRIM(ADV.ZIPCODE),' ')=NVL(TRIM(DCADBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_PINCODE_MATCH,
ADV.COUNTRY TI_ADV_BANK_COUNTRY,DCADBK.CNTRY_CODE FIN_ADV_BANK_COUNTRY,
CASE WHEN NVL(TRIM(ADV.COUNTRY),' ')=NVL(TRIM(DCADBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_COUNTRY_MATCH,
ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH TI_ADV_BANK_BIC,DCADBK.BIC_CODE FIN_ADV_BANK_BIC,
CASE WHEN NVL(TRIM(ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH),' ')=NVL(TRIM(DCADBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADV_BANK_BIC_MATCH, 
CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS1)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABRN))
     WHEN TRIM(LC.AVWTH_TYP)='U' THEN 'ANY BANK IN COUNTRY'
     WHEN TRIM(LC.AVWTH_TYP)='W' THEN 'ANY BANK'
     ELSE TRIM(AVW.ADDRESS1) END TI_AVW_BANK_NAME,DCAWBK.NAME FIN_AVW_BANK_NAME,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS1)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABRN))
     WHEN TRIM(LC.AVWTH_TYP)='U' THEN 'ANY BANK IN COUNTRY'
     WHEN TRIM(LC.AVWTH_TYP)='W' THEN 'ANY BANK'
     ELSE TRIM(AVW.ADDRESS1) END),' ')=NVL(TRIM(DCAWBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_NAME_MATCH,
case when trim(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS2)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD2))
     ELSE TRIM(AVW.ADDRESS2) END) is not null then 
     (CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS2)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD2))
     ELSE TRIM(AVW.ADDRESS2) END)
     else ' ' end TI_AVW_BANK_ADD1,DCAWBK.ADDRESS1 FIN_AVW_BANK_ADD1,
CASE WHEN NVL(TRIM(case when trim(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS2)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD2))
     ELSE TRIM(AVW.ADDRESS2) END) is not null then 
     (CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS2)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD2))
     ELSE TRIM(AVW.ADDRESS2) END)
     else ' ' end),' ')=NVL(TRIM(DCAWBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_ADD1_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS3)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD3))
     ELSE TRIM(AVW.ADDRESS3 )END TI_AVW_BANK_ADD2,DCAWBK.ADDRESS2 FIN_AVW_BANK_ADD2,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ADDRESS3)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD3))
     ELSE TRIM(AVW.ADDRESS3 )END),' ')=NVL(TRIM(DCAWBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_ADD2_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,45)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD4))
     ELSE SUBSTR(TRIM(AVW.ADDRESS4)||' '||TRIM(AVW.ADDRESS5),1,45) END TI_AVW_BANK_ADD3,DCAWBK.ADDRESS3 FIN_AVW_BANK_ADD3,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN SUBSTR(TRIM(ADV.ADDRESS4)||' '||TRIM(ADV.ADDRESS5),1,45)
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN TRIM(TO_CHAR(CA.CABAD4))
     ELSE SUBSTR(TRIM(AVW.ADDRESS4)||' '||TRIM(AVW.ADDRESS5),1,45) END),' ')=NVL(TRIM(DCAWBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_ADD3_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ZIPCODE) 
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN ''
     ELSE TRIM(AVW.ZIPCODE) END TI_AVW_BANK_PINCODE,DCAWBK.PIN_CODE FIN_AVW_BANK_PINCODE,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN TRIM(ADV.ZIPCODE) 
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN ''
     ELSE TRIM(AVW.ZIPCODE) END),' ')=NVL(TRIM(DCAWBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_PINCODE_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN ADV.COUNTRY 
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN 'KW'
     ELSE AVW.COUNTRY END TI_AVW_BANK_COUNTRY,DCAWBK.CNTRY_CODE FIN_AVW_BANK_COUNTRY,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN ADV.COUNTRY 
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN 'KW'
     ELSE AVW.COUNTRY END),' ')=NVL(TRIM(DCAWBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_COUNTRY_MATCH,
CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN CA.CASWB||CA.CACNAS||CA.CASWL||CA.CASWBR
     ELSE AVW.SW_BANK||AVW.SW_CTR||AVW.SW_LOC||AVW.SW_BRANCH END TI_AVW_BANK_BIC,DCAWBK.BIC_CODE FIN_AVW_BANK_BIC,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(LC.AVWTH_TYP)='A' THEN ADV.SW_BANK||ADV.SW_CTR||ADV.SW_LOC||ADV.SW_BRANCH
     WHEN TRIM(LC.AVWTH_TYP) IN ('I','S') THEN CA.CASWB||CA.CACNAS||CA.CASWL||CA.CASWBR
     ELSE AVW.SW_BANK||AVW.SW_CTR||AVW.SW_LOC||AVW.SW_BRANCH END),' ')=NVL(TRIM(DCAWBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END AVW_BANK_BICCODE_MATCH,
RMBP.ADDRESS1 TI_RMB_BANK_NAME,DCRBBK.NAME FIN_RMB_BANK_NAME,
CASE WHEN NVL(TRIM(RMBP.ADDRESS1),' ')=NVL(TRIM(DCRBBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_NAME_MATCH, 
RMBP.ADDRESS2 TI_RMB_BANK_ADD1,DCRBBK.ADDRESS1 FIN_RMB_BANK_ADD1,
CASE WHEN NVL(TRIM(RMBP.ADDRESS2),' ')=NVL(TRIM(DCRBBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_ADD1_MATCH,
RMBP.ADDRESS3 TI_RMB_BANK_ADD2,DCRBBK.ADDRESS2 FIN_RMB_BANK_ADD2,
CASE WHEN NVL(TRIM(RMBP.ADDRESS3),' ')=NVL(TRIM(DCRBBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_ADD2_MATCH,
TRIM(TRIM(RMBP.ADDRESS4)||' '||TRIM(RMBP.ADDRESS5)) TI_RMB_BANK_ADD3,DCRBBK.ADDRESS3 FIN_RMB_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(RMBP.ADDRESS4)||' '||TRIM(RMBP.ADDRESS5)),' ')=NVL(TRIM(DCRBBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_ADD3_MATCH,
RMBP.ZIPCODE TI_RMB_BANK_PINCODE,DCRBBK.PIN_CODE FIN_RMB_BANK_PINCODE,
CASE WHEN NVL(TRIM(RMBP.ZIPCODE),' ')=NVL(TRIM(DCRBBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_PINCODE_MATCH,
RMBP.COUNTRY TI_RMB_BANK_COUNTRY,DCRBBK.CNTRY_CODE FIN_RMB_BANK_COUNTRY,
CASE WHEN NVL(TRIM(RMBP.COUNTRY),' ')=NVL(TRIM(DCRBBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_COUNTRY_MATCH,
RMBP.SW_BANK||RMBP.SW_CTR||RMBP.SW_LOC||RMBP.SW_BRANCH TI_RMB_BANK_BIC,DCRBBK.BIC_CODE FIN_RMB_BANK_BIC,
CASE WHEN NVL(TRIM(RMBP.SW_BANK||RMBP.SW_CTR||RMBP.SW_LOC||RMBP.SW_BRANCH),' ')=NVL(TRIM(DCRBBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END RMB_BANK_BICCODE_MATCH,
ADT.ADDRESS1 TI_ADT_BANK_NAME,DCATBK.NAME FIN_ADT_BANK_NAME,
CASE WHEN NVL(TRIM(ADT.ADDRESS1),' ')=NVL(TRIM(DCATBK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_NAME_MATCH, 
ADT.ADDRESS2 TI_ADT_BANK_ADD1,DCATBK.ADDRESS1 FIN_ADT_BANK_ADD1,
CASE WHEN NVL(TRIM(ADT.ADDRESS2),' ')=NVL(TRIM(DCATBK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_ADD1_MATCH,
ADT.ADDRESS3 TI_ADT_BANK_ADD2,DCATBK.ADDRESS2 FIN_ADT_BANK_ADD2,
CASE WHEN NVL(TRIM(ADT.ADDRESS3),' ')=NVL(TRIM(DCATBK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_ADD2_MATCH,
TRIM(TRIM(ADT.ADDRESS4)||' '||TRIM(ADT.ADDRESS5)) TI_ADT_BANK_ADD3,DCATBK.ADDRESS3 FIN_ADT_BANK_ADD3,
CASE WHEN NVL(TRIM(TRIM(ADT.ADDRESS4)||' '||TRIM(ADT.ADDRESS5)),' ')=NVL(TRIM(DCATBK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_ADD3_MATCH,
ADT.ZIPCODE TI_ADT_BANK_PINCODE,DCATBK.PIN_CODE FIN_ADT_BANK_PINCODE,
CASE WHEN NVL(TRIM(ADT.ZIPCODE),' ')=NVL(TRIM(DCATBK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_PINCODE_MATCH,
ADT.COUNTRY TI_ADT_BANK_COUNTRY,DCATBK.CNTRY_CODE FIN_ADT_BANK_COUNTRY,
CASE WHEN NVL(TRIM(ADT.COUNTRY),' ')=NVL(TRIM(DCATBK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_COUNTRY_MATCH,
ADT.SW_BANK||ADT.SW_CTR||ADT.SW_LOC||ADT.SW_BRANCH TI_ADT_BANK_BIC,DCATBK.BIC_CODE FIN_ADT_BANK_BIC,
CASE WHEN NVL(TRIM(ADT.SW_BANK||ADT.SW_CTR||ADT.SW_LOC||ADT.SW_BRANCH),' ')=NVL(TRIM(DCATBK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END ADT_BANK_BIC_MATCH
FROM TF_ILC_MASTER TF
LEFT JOIN MASTER_ODS MA ON MA.MASTER_REF=TF.MASTER_REF
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN CAPF CA ON CA.CABBN=CASE WHEN TRIM(MA.BHALF_BRN) IS NOT NULL THEN MA.BHALF_BRN ELSE MA.INPUT_BRN END 
LEFT JOIN PARTYDTLS_ODS ADV ON ADV.KEY97=LC.ADVBNK_PTY
LEFT JOIN PARTYDTLS_ODS ADT ON ADT.KEY97=LC.ADVTHR_PTY
LEFT JOIN PARTYDTLS_ODS RMBP ON RMBP.KEY97=LC.REIMB_PTY
LEFT JOIN PARTYDTLS_ODS AVW ON AVW.KEY97=LC.AVWBNK_PTY
LEFT JOIN TBAADM.DCMM DC ON DC.DC_REF_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.TFAT DCADBK ON DCADBK.ADDR_B2KID=DC.DC_B2KID AND DCADBK.ADDR_TYPE='S' AND DCADBK.ADDR_ID='DCADBK'
LEFT JOIN TBAADM.TFAT DCAWBK ON DCAWBK.ADDR_B2KID=DC.DC_B2KID AND DCAWBK.ADDR_TYPE='S' AND DCAWBK.ADDR_ID='DCAWBK'
LEFT JOIN TBAADM.TFAT DCATBK ON DCATBK.ADDR_B2KID=DC.DC_B2KID AND DCATBK.ADDR_TYPE='S' AND DCATBK.ADDR_ID='DCATBK'
LEFT JOIN TBAADM.TFAT DCRBBK ON DCRBBK.ADDR_B2KID=DC.DC_B2KID AND DCRBBK.ADDR_TYPE='S' AND DCRBBK.ADDR_ID='DCRBBK'
LEFT JOIN TBAADM.TFAT DCAPBK ON DCAPBK.ADDR_B2KID=DC.DC_B2KID AND DCAPBK.ADDR_TYPE='S' AND DCAPBK.ADDR_ID='DCAPBK'
LEFT JOIN TBAADM.TFAT DCISBK ON DCISBK.ADDR_B2KID=DC.DC_B2KID AND DCISBK.ADDR_TYPE='S' AND DCISBK.ADDR_ID='DCISBK'"

10) ILC_POST_MOCK_REPORT

"SELECT 
MA.MASTER_REF TI_REFERENCE,DC.DC_REF_NUM FIN_REFERENCE,
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=DC.DC_REF_NUM THEN 'TRUE' ELSE 'FALSE' END NUMBER_MATCH, 
PCP.CUS_MNM TI_CUSTOMER,CMG.CIF_ID FIN_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(PCP.CUS_MNM),8,3)||SUBSTR(TRIM(PCP.CUS_MNM),1,6)=TRIM(CMG.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH, 
MA.CCY TI_CURRENCY,DC.CONT_LIAB_CRNCY FIN_CURRENCY,
CASE WHEN MA.CCY=DC.CONT_LIAB_CRNCY THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
ISD.ISSUE_DATE TI_ISSUE_DATE,TO_CHAR(DC.DATE_OPND,'DD-MM-YYYY') FIN_ISSUE_DATE,
CASE WHEN TO_DATE(ISD.ISSUE_DATE,'DD-MM-YYYY')=DC.DATE_OPND THEN 'TRUE' ELSE 'FALSE' END ISSUE_DATE_MATCH,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,TO_CHAR(DC.EXPIRY_DATE,'DD-MM-YYYY') FIN_EXPIRY_DATE,
CASE WHEN MA.EXPIRY_DAT=DC.EXPIRY_DATE THEN 'TRUE' ELSE 'FALSE' END EXPIRY_DATE_MATCH,
MA.LIAB_AMT/C8PWD TI_OS_AMOUNT,DC.CONT_LIAB_AMT FIN_OS_AMOUNT,(MA.LIAB_AMT/C8PWD)-DC.CONT_LIAB_AMT DIFFERENCE,
MA.EXPIRY_LOC TI_EXPIRY_LOCATION,DC.PLACE_OF_EXPIRY FIN_EXPIRY_LOCATION,
CASE WHEN TRIM(MA.EXPIRY_LOC)=TRIM(DC.PLACE_OF_EXPIRY) THEN 'TRUE' ELSE 'FALSE' END EXPIRY_LOC_MATCH,
PR.CODE TI_PRODUCT,DC.DC_REG_TYPE FIN_PRODUCT,
ACC.FIN_ACC_NUM TI_ACCOUNT,GAM.FORACID FIN_ACCOUNT,
CASE WHEN ACC.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH,
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
TO_CHAR(LC.SHIP_DATE,'DD-MM-YYYY') TI_SHIPMENT_DATE,TO_CHAR(DC.LAST_SHIP_DATE,'DD-MM-YYYY') FIN_SHIPMENT_DATE,
CASE WHEN NVL(TO_CHAR(LC.SHIP_DATE,'DD-MM-YYYY'),' ')=NVL(TO_CHAR(DC.LAST_SHIP_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END SHIPMENT_DATE_MATCH,
LC.INCOTERMS TI_INCOTERM,DC.SHIPMENT_TERMS FIN_SHIPMENT_TERM,
CASE WHEN NVL(LC.INCOTERMS,' ')=NVL(DC.SHIPMENT_TERMS,' ') THEN 'TRUE' ELSE 'FALSE' END SHIPMENT_TERMS_MATCH,
LC.AVAIL_BY TI_AVAILABLE_BY,DC.AVAILABLE_BY FIN_AVAILABLE_BY,
LC.PART_SHIP TI_PART_SHIPMENT,DC.PARTSHIPMENT_FLG FIN_PART_SHIPMENT,
LC.TRANS_SHIP TI_TRANS_SHIPMENT,DC.TRANSHIPMENT_FLG FIN_TRANS_SHIPMENT,
LC.GOODSCODE TI_GOODS_CODE,DC.COMMODITY_CODE FIN_GOODS_CODE,COMMODITY_DESC FIN_GOODS_DESC,
TRIM(REPLACE(REPLACE(LC.TENOR_FROM,CHR(10),' '),CHR(13),' ')) TI_TENOR_FROM,TRIM(DBMS_LOB.SUBSTR(TTE.TEXT,200)) FIN_TENOR_FROM_TEXT,
LC.TENOR_NO TI_TENOR_NO,TENOR_IND FIN_TENOR_IND,USANCE_TENOR_DAYS FIN_TENOR_DAYS,
TRIM(PCP.ADDRESS1) TI_APPL_NAME,TRIM(DCOUPY.NAME) FIN_APPL_NAME,
CASE WHEN TRIM(PCP.ADDRESS1)=TRIM(DCOUPY.NAME) THEN 'TRUE' ELSE 'FALSE' END APPL_NAME_MATCH,
PCP.ADDRESS2 TI_APPL_ADD1,DCOUPY.ADDRESS1 FIN_APPL_ADD1,
CASE WHEN TRIM(PCP.ADDRESS2)=TRIM(DCOUPY.ADDRESS1) THEN 'TRUE' ELSE 'FALSE' END APPL_ADD1_MATCH,
PCP.ADDRESS3 TI_APPL_ADD2,DCOUPY.ADDRESS2 FIN_APPL_ADD2,
CASE WHEN NVL(TRIM(PCP.ADDRESS3),' ')=NVL(TRIM(DCOUPY.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD2_MATCH,
TRIM(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5)) TI_APPL_ADD3,DCOUPY.ADDRESS3 FIN_APPL_ADD3,
CASE WHEN NVL(TRIM(SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35)),' ')=NVL(TRIM(DCOUPY.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD3_MATCH,
PCP.COUNTRY TI_APPL_COUNTRY,DCOUPY.CNTRY_CODE FIN_APPL_COUNTRY,
CASE WHEN NVL(TRIM(PCP.COUNTRY),' ')=NVL(TRIM(DCOUPY.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_COUNTRY_MATCH,
PCP.ZIPCODE TI_APPL_PINCODE,DCOUPY.PIN_CODE FIN_APPL_PINCODE,
CASE WHEN NVL(TRIM(PCP.ZIPCODE),' ')=NVL(TRIM(DCOUPY.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_PINCODE_MATCH,
PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH TI_APPL_BIC,DCOUPY.BIC_CODE FIN_APPL_BIC,
CASE WHEN NVL(PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH,' ')=NVL(DCOUPY.BIC_CODE,' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BIC_MATCH,
BEN.ADDRESS1 TI_BEN_NAME,DCOTPY.NAME FIN_BEN_NAME,
CASE WHEN TRIM(BEN.ADDRESS1)=TRIM(DCOTPY.NAME) THEN 'TRUE' ELSE 'FALSE' END BEN_NAME_MATCH,
BEN.ADDRESS2 TI_BEN_ADD1,DCOTPY.ADDRESS1 FIN_BEN_ADD1,
CASE WHEN NVL(TRIM(BEN.ADDRESS2),' ')=NVL(TRIM(DCOTPY.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD1_MATCH, 
BEN.ADDRESS3 TI_BEN_ADD2,DCOTPY.ADDRESS2 FIN_BEN_ADD2,
CASE WHEN NVL(TRIM(BEN.ADDRESS3),' ')=NVL(TRIM(DCOTPY.ADDRESS2),' ') THEN  'TRUE' ELSE 'FALSE' END BEN_ADD2_MATCH, 
TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)) TI_BEN_ADD3,DCOTPY.ADDRESS3 FIN_BEN_ADD3,
CASE WHEN NVL(TRIM(SUBSTR(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5),1,35)),' ')=NVL(TRIM(DCOTPY.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD3_MATCH,
BEN.COUNTRY TI_BEN_COUNTRY,DCOTPY.CNTRY_CODE FIN_BEN_COUNTRY,
CASE WHEN NVL(TRIM(BEN.COUNTRY),' ')=NVL(TRIM(DCOTPY.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_COUNTRY_MATCH,
BEN.ZIPCODE TI_BEN_PINCODE,DCOTPY.PIN_CODE FIN_BEN_PINCODE,
CASE WHEN NVL(TRIM(BEN.ZIPCODE),' ')=NVL(TRIM(DCOTPY.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_PINCODE_MATCH,
BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH TI_BEN_BIC,DCOTPY.BIC_CODE FIN_BEN_BIC,
CASE WHEN NVL(TRIM(BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH),' ')=NVL(TRIM(DCOTPY.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_BIC_MATCH
FROM TF_ILC_MASTER TF
LEFT JOIN MASTER_ODS MA ON TF.MASTER_REF=MA.MASTER_REF
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=LC.BEN_PTY
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN TF_OP_ACC ACC ON ACC.MASTER_REF=MA.MASTER_REF
LEFT JOIN TBAADM.DCMM DC ON DC.DC_REF_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=DC.ISSU_PARTY_CODE
LEFT JOIN TF_LC_ISSUE_DATE ISD ON ISD.MASTER_REF=DC.DC_REF_NUM
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=DC.OUR_PARTY_ACID
LEFT JOIN TF_LC_C_TECT TECT ON TECT.ENTITY_ID=DC.DC_REF_NUM
LEFT JOIN TBAADM.CDTY CDTY ON CDTY.COMMODITY_CODE=DC.COMMODITY_CODE AND CDTY.BANK_ID='01'
LEFT JOIN TBAADM.TFAT DCOUPY ON DCOUPY.ADDR_B2KID=DC.DC_B2KID AND DCOUPY.ADDR_ID='DCOUPY' AND DCOUPY.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT DCOTPY ON DCOTPY.ADDR_B2KID=DC.DC_B2KID AND DCOTPY.ADDR_ID='DCOTPY' AND DCOTPY.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFTT TTE ON TTE.TEXT_ID=DC_B2KID AND TTE.TEXT_TYPE='E'"

11) LC_FREE_TEXT_POST_MOCK_REPORT

"select 
'CONDITIONS' TEXT_TYPE,
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END TEXT_MATCH
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='C' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='C' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'REQ_DOCS',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='D' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='D' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'TENOR_FROM',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='E' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='E' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'GOODS_DESC',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='G' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='G' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'CHG_TXT',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='H' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='H' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'INSURANCE',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='N' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='N' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'SHIP_PRD',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='O' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='O' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'PRES_PRD',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='P' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='P' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'TEXT15',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='PN' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='PN' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL 
UNION ALL
select 
'PMT_DTLS',
tf.text_id,
DBMS_LOB.SUBSTR(tf.TEXT,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from tf_tftt tf
LEFT JOIN TBAADM.DCMM DC ON tf.text_id=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='S' AND tt.MODULE_ID='DOCCR'
WHERE tF.TEXT_TYPE='S' AND tF.MODULE_ID='DOCCR' AND TRIM(DBMS_LOB.SUBSTR(tf.TEXT,100)) IS NOT NULL
UNION ALL
select 
'NARRATIVE',
tf.MASTER_REF,
SUBSTR(tf.NARRATIVE,1,100) TI_LC_FREE_FORMAT,
DBMS_LOB.SUBSTR(tt.TEXT,100) FIN_LC_FREE_FORMAT,
CASE WHEN TRIM(SUBSTR(tf.NARRATIVE,1,100))=TRIM(DBMS_LOB.SUBSTR(tt.TEXT,100)) THEN 'TRUE' ELSE 'FALSE' END
from TF_FREE_TEXT_ELC_NARRATIVE tf
LEFT JOIN TBAADM.DCMM DC ON tf.MASTER_REF=DC_REF_NUM 
LEFT JOIN TBAADM.TFTT TT ON DC.DC_B2KID=tt.TEXT_ID AND tt.TEXT_TYPE='M' AND tt.MODULE_ID='DOCCR'
WHERE TRIM(SUBSTR(tf.NARRATIVE,1,100)) IS NOT NULL"

12) OBC_POST_MOCK_REPORT

"SELECT 
MA.MASTER_REF,FB.BILL_ID,
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=FB.BILL_ID THEN 'TRUE' ELSE 'FALSE' END NUMBER_MATCH,
MA.CCY TI_CCY,FB.BILL_CRNCY_CODE FIN_CCY,
CASE WHEN MA.CCY=FB.BILL_CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
DRWR.CUS_MNM TI_CUSTOMER,CMG.CIF_ID FIN_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(DRWR.CUS_MNM),8,3)||SUBSTR(TRIM(DRWR.CUS_MNM),1,6)=TRIM(CMG.CIF_ID) THEN 'TRUE' ELSE 'FALSE' END CUST_MATCH,
OP.FIN_ACC_NUM TI_aCCOUNT,GAM.FORACID FIN_ACCOUNT,
CASE WHEN OP.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH,
CD.PAY_AMT/C8PWD TI_BILL_AMOUNT,FB.BILL_AMT FIN_BIULL_AMOUNT,
CD.PAY_AMT/C8PWD-FB.BILL_AMT DIFFERENCE,
CASE WHEN TRIM(CD.TENOR_DATE) IS NOT NULL THEN TO_CHAR(CD.TENOR_DATE,'DD-MM-YYYY') ELSE TO_CHAR(CM.RCVD_DATE,'DD-MM-YYYY') END TI_DUE_DATE,TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY') FIN_DUE_DATE,
CASE WHEN NVL(TRIM(CASE WHEN TRIM(CD.TENOR_DATE) IS NOT NULL THEN TO_CHAR(CD.TENOR_DATE,'DD-MM-YYYY') ELSE TO_CHAR(CM.RCVD_DATE,'DD-MM-YYYY') END),' ')=NVL(TRIM(TO_CHAR(FB.DUE_DATE,'DD-MM-YYYY')),' ') THEN 'TRUE' ELSE 'FALSE' END DUE_DATE_MATCH,
CASE WHEN TRIM(CD.BASEDATE) IS NOT NULL THEN TO_CHAR(CD.BASEDATE,'DD-MM-YYYY') ELSE TO_CHAR((CM.RCVD_DATE),'DD-MM-YYYY') END TI_ONBOARDDATE, TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') FIN_ONBOARDDATE,
CASE WHEN CASE WHEN TRIM(CD.BASEDATE) IS NOT NULL THEN TO_CHAR(CD.BASEDATE,'DD-MM-YYYY') ELSE TO_CHAR((CM.RCVD_DATE),'DD-MM-YYYY') END=TO_CHAR(FEI.SHPMNT_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ONBOARDDATE_MATCH,
CD.PAY_AMT/C8PWD TI_INVOICEAMT,FEI.TOTAL_INVOICE_AMT FIN_INVOICEAMT,
TO_CHAR(BE.START_DATE,'DD-MM-YYYY') TI_LODGEDATE,TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') FIN_LODGEDATE,
CASE WHEN TO_CHAR(BE.START_DATE,'DD-MM-YYYY')=TO_CHAR(FB.LODG_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END LODGEDATE_MATCH,
TRIM(CD.TENOR_FROM) TI_TENOR_FROM,FB.USANCE_DESC FINTENOR_FROM,
CD.TENOR_NO TI_TENOR,FB.USANCE_DAYS FIN_TENOR,
CASE WHEN CASE WHEN TRIM(CD.TENOR_NO) IS NULL THEN 0 ELSE CD.TENOR_NO END=FB.USANCE_DAYS THEN 'TRUE' ELSE 'FALSE' END TENOR_DAYS_MATCH, 
FB.BILL_TENOR,FB.BILL_PARAM_TYPE,
TO_CHAR(BA.FINISHED,'DD-MM-YYYY') TI_ACCEPT_DATE,TO_CHAR(FB.ACCEPT_DATE,'DD-MM-YYYY') FIN_ACCEPT_DATE,
TRIM(Be.THEIR_REF) TI_OTHER_BANK_REF,FB.FB_REF_NUM FIN_OTHER_BANK_REF,
CM.GOODSCODE TI_GOODSCODE,FEI.CMMDTY_CODE FIN_GOODSCODE,CDTY.COMMODITY_DESC,
CM.SHIP_FROM TI_SHIP_FROM,FEI.ORIGIN_OF_GOODS FIN_SHIP_FROM,
CASE WHEN NVL(TRIM(CM.SHIP_FROM),' ')=NVL(TRIM(FEI.ORIGIN_OF_GOODS),' ') THEN 'TRUE' ELSE 'FALSE' END SHIPMENT_FROM_MATCH,
CM.SHIP_TO TI_SHIP_TO,FEI.DEST_OF_GOODS FIN_SHIP_TO,
CASE WHEN NVL(TRIM(CM.SHIP_TO),' ')=NVL(TRIM(FEI.DEST_OF_GOODS),' ') THEN 'TRUE' ELSE 'FALSE' END SHIPMENT_TO_MATCH,
CM.VESSEL TI_VESSEL_NAME,FEI.VESSEL_NAME FIN_VESSEL_NAME,
CASE WHEN NVL(TRIM(CM.VESSEL),' ')=NVL(TRIM(FEI.VESSEL_NAME),' ') THEN 'TRUE' ELSE 'FALSE' END VESSEL_NAME_MATCH, 
DRWR.ADDRESS1 TI_DRAWER_NAME,DRAWER.NAME FIN_DRAWER_NAME,
CASE WHEN TRIM(DRWR.ADDRESS1)=TRIM(DRAWER.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWER_NAME_MATCH,
DRWR.ADDRESS2 TI_DRAWER_ADD1,DRAWER.ADDRESS1 FIN_DRAWER_ADD1,
CASE WHEN NVL(TRIM(DRWR.ADDRESS2),' ')=NVL(TRIM(DRAWER.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD1_MATCH,
DRWR.ADDRESS3 TI_DRAWER_ADD2,DRAWER.ADDRESS2 FIN_DRAWER_ADD2,
CASE WHEN NVL(TRIM(DRWR.ADDRESS3),' ')=NVL(TRIM(DRAWER.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD2_MATCH,
DRWR.ADDRESS4||' '||DRWR.ADDRESS5 TI_DRAWER_ADD3,DRAWER.ADDRESS3 FIN_DRAWER_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWR.ADDRESS4)||' '||TRIM(DRWR.ADDRESS5)),' ')=NVL(TRIM(DRAWER.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_ADD3_MATCH,
DRWR.COUNTRY TI_DRAWER_COUNTRY,DRAWER.CNTRY_CODE FIN_DRAWER_COUNTRY,
CASE WHEN NVL(TRIM(DRWR.COUNTRY),' ')=NVL(TRIM(DRAWER.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_COUNTRY_MATCH,
DRWR.ZIPCODE TI_DRAWER_PINCODE,DRAWER.PIN_CODE FIN_DRAWER_PINCODE,
CASE WHEN NVL(TRIM(DRWR.ZIPCODE),' ')=NVL(TRIM(DRAWER.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_PINCODE_MATCH,
DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH TI_DRAWER_BICCODE,DRAWER.BIC_CODE FIN_DRAWER_BICCODE,
CASE WHEN NVL(TRIM(DRWR.SW_BANK||DRWR.SW_CTR||DRWR.SW_LOC||DRWR.SW_BRANCH),' ')=NVL(TRIM(DRAWER.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWER_BICCODE_MATCH,
DRWE.ADDRESS1 TI_DRAWER_NAME,DRAWEE.NAME FIN_DRAWEE_NAME,
CASE WHEN TRIM(DRWE.ADDRESS1)=TRIM(DRAWEE.NAME) THEN 'TRUE' ELSE 'FALSE' END DRAWEE_NAME_MATCH,
DRWE.ADDRESS2 TI_DRAWEE_ADD1,DRAWEE.ADDRESS1 FIN_DRAWEE_ADD1,
CASE WHEN NVL(TRIM(DRWE.ADDRESS2),' ')=NVL(TRIM(DRAWEE.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD1_MATCH,
DRWE.ADDRESS3 TI_DRAWEE_ADD2,DRAWEE.ADDRESS2 FIN_DRAWEE_ADD2,
CASE WHEN NVL(TRIM(DRWE.ADDRESS3),' ')=NVL(TRIM(DRAWEE.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD2_MATCH,
DRWE.ADDRESS4||' '||DRWE.ADDRESS5 TI_DRAWEE_ADD3,DRAWEE.ADDRESS3 FIN_DRAWEE_ADD3,
CASE WHEN NVL(TRIM(TRIM(DRWE.ADDRESS4)||' '||TRIM(DRWE.ADDRESS5)),' ')=NVL(TRIM(DRAWEE.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_ADD3_MATCH,
DRWE.COUNTRY TI_DRAWEE_COUNTRY,DRAWEE.CNTRY_CODE FIN_DRAWEE_COUNTRY,
CASE WHEN NVL(TRIM(DRWE.COUNTRY),' ')=NVL(TRIM(DRAWEE.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_COUNTRY_MATCH,
DRWE.ZIPCODE TI_DRAWEE_PINCODE,DRAWEE.PIN_CODE FIN_DRAWEE_PINCODE,
CASE WHEN NVL(TRIM(DRWE.ZIPCODE),' ')=NVL(TRIM(DRAWEE.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_PINCODE_MATCH,
DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH TI_DRAWEE_BICCODE,DRAWEE.BIC_CODE FIN_DRAWEE_BICCODE,
CASE WHEN NVL(TRIM(DRWE.SW_BANK||DRWE.SW_CTR||DRWE.SW_LOC||DRWE.SW_BRANCH),' ')=NVL(TRIM(DRAWEE.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END DRAWEE_BICCODE_MATCH,
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS1 ELSE PCP.ADDRESS1 END TI_BANK_NAME,COLLBANK.NAME FIN_BANK_NAME,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS1 ELSE PCP.ADDRESS1 END),' ')=NVL(TRIM(COLLBANK.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_NAME_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS2 ELSE PCP.ADDRESS2 END TI_BANK_ADD1,COLLBANK.ADDRESS1 FIN_BANK_ADD1,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS2 ELSE PCP.ADDRESS2 END),' ')=NVL(TRIM(COLLBANK.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD1_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS3 ELSE PCP.ADDRESS3 END TI_BANK_ADD2,COLLBANK.ADDRESS2 FIN_BANK_ADD2,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.ADDRESS3 ELSE PCP.ADDRESS3 END),' ')=NVL(TRIM(COLLBANK.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD2_MATCH, 
CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(SUBSTR(TRIM(NPCP.ADDRESS4)||' '||TRIM(NPCP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,45)) END TI_BANK_ADD3,COLLBANK.ADDRESS3 FIN_BANK_ADD3,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(SUBSTR(TRIM(NPCP.ADDRESS4)||' '||TRIM(NPCP.ADDRESS5),1,45)) ELSE TRIM(SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,45)) END),' ')=NVL(TRIM(COLLBANK.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_ADD3_MATCH,
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.COUNTRY ELSE PCP.COUNTRY END TI_BANK_COUNTRY,COLLBANK.CNTRY_CODE FIN_BANK_COUNTRY,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.COUNTRY ELSE PCP.COUNTRY END),' ')=NVL(TRIM(COLLBANK.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_COUNTRY_MATCH,
CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(NPCP.ZIPCODE) ELSE TRIM(PCP.ZIPCODE) END TI_BANK_PINCODE,COLLBANK.PIN_CODE FIN_BANK_PINCODE,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN TRIM(NPCP.ZIPCODE) ELSE TRIM(PCP.ZIPCODE) END),' ')=NVL(TRIM(COLLBANK.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_PINCODE_MATCH,
CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.SW_BANK||NPCP.SW_CTR||NPCP.SW_LOC||NPCP.SW_BRANCH ELSE PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH END TI_BANK_BICCODE,COLLBANK.BIC_CODE FIN_BANK_BICCODE,
CASE WHEN NVL(TRIM(CASE WHEN CM.NPCP_ROLE='CBK' THEN NPCP.SW_BANK||NPCP.SW_CTR||NPCP.SW_LOC||NPCP.SW_BRANCH ELSE PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH END),' ')=NVL(TRIM(COLLBANK.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BANK_BICCODE_MATCH
FROM MASTER_ODS MA
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN TIDATAITEM_ODS TI ON TI.MASTER_KEY=MA.KEY97
INNER JOIN COLLDRAFT_ODS CD ON TI.KEY97=CD.KEY97
INNER JOIN COLLMASTER_ODS CM ON MA.KEY97=CM.KEY97
LEFT JOIN PARTYDTLS_ODS DRWE ON DRWE.KEY97=CM.DRAWEE_PTY
LEFT JOIN PARTYDTLS_ODS DRWR ON DRWR.KEY97=CM.DRAWER_PTY 
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY -- BANK BASED ON PCP_ROLE='RBK'
LEFT JOIN PARTYDTLS_ODS NPCP ON NPCP.KEY97=MA.NPCP_PTY -- BANK BASED ON NPCP_ROLE='CBK'
LEFT JOIN TF_OP_ACC OP ON OP.MASTER_REF=MA.MASTER_REF
INNER JOIN BASEEVENT_ODS BE ON BE.MASTER_KEY=MA.KEY97 AND BE.REFNO_PFIX='CRE'
LEFT JOIN BASEEVENT_ODS BA ON BA.MASTER_KEY=MA.KEY97 AND CD.ACC_EV=BA.KEY97
LEFT JOIN TBAADM.FBM FB ON FB.MTENOR_BILL_ID=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CMG ON CMG.CUST_ID=FB.PARTY_CODE
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=FB.OPER_ACID
LEFT JOIN TBAADM.FEI ON FEI.BILL_ID=FB.BILL_ID
LEFT JOIN TBAADM.CDTY CDTY ON CDTY.COMMODITY_CODE=FEI.CMMDTY_CODE AND CDTY.BANK_ID='01'
LEFT JOIN TBAADM.TFAT COLLBANK ON COLLBANK.ADDR_B2KID=FB.BILL_B2K_ID AND COLLBANK.ADDR_ID='COLLBANK' AND COLLBANK.ADDR_TYPE='S' 
LEFT JOIN TBAADM.TFAT DRAWEE ON DRAWEE.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWEE.ADDR_ID='DRAWEE' AND DRAWEE.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT DRAWER ON DRAWER.ADDR_B2KID=FB.BILL_B2K_ID AND DRAWER.ADDR_ID='DRAWER' AND DRAWER.ADDR_TYPE='S'
WHERE MA.STATUS='LIV' AND MA.REFNO_PFIX='OUD' AND MA.AMT_O_S!=0 AND TI.TYPEFLAG IN ('336','7490','2051','9389') AND CD.O_S_AMT!=0 AND TRIM(CD.STATUS) NOT IN ('RT','P')
ORDER BY FB.BILL_ID"

13) RISK_PARTICIPATION_POST_MOCK_REPORT

"SELECT 
MA.MASTER_REF TI_MASTER_REF,BG.BG_SRL_NUM FINACLE_BG_SRL_NUM, 
CASE WHEN REPLACE(MA.MASTER_REF,'/','-')=BG.BG_SRL_NUM THEN 'TRUE' ELSE 'FLASE' END REF_MATCH,
PCP.CUS_MNM TI_CUSTOMER,CM.CIF_ID FINACLE_CUSTOMER,
CASE WHEN '0'||SUBSTR(TRIM(PCP.CUS_MNM),8,3)||SUBSTR(TRIM(PCP.CUS_MNM),1,6)=TRIM(CM.CIF_ID) THEN 'TRUE' ELSE 'FLASE' END CUST_MATCH, 
MA.CCY TI_CCY,BG.CRNCY_CODE FINACLE_CCY,
CASE WHEN MA.CCY=BG.CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END CCY_MATCH,
ID.EFFECTIVE_DATE TI_ISSUE_DATE,TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') FINACLE_ISSUE_DATE,
CASE WHEN ID.EFFECTIVE_DATE=TO_CHAR(BG.EFFECTIVE_DATE,'DD-MM-YYYY') THEN 'TRUE' ELSE 'FALSE' END ISSUE_DATE_MATCH,
TO_CHAR(MA.EXPIRY_DAT,'DD-MM-YYYY') TI_EXPIRY_DATE,TO_CHAR(BG.BG_EXPIRY_DATE,'DD-MM-YYYY') FINACLE_EXPIRY_DATE,
CASE WHEN MA.EXPIRY_DAT=BG.BG_EXPIRY_DATE THEN 'TRUE' ELSE 'FLASE' END EXPIRY_DATE_MATCH,
MA.LIAB_AMT/C8PWD TI_LIABILITY,BG.BG_AMT FINACLE_LIABILITY,MA.LIAB_AMT/C8PWD-BG.BG_AMT DIFFERENCE,
MA.EXPIRY_LOC TI_EXPIRY_LOCATION,BG.PLACE_LODGEMNT_CLAIM FINACLE_EXPIRY_LOCATION,
CASE WHEN MA.EXPIRY_LOC=BG.PLACE_LODGEMNT_CLAIM THEN 'TRUE' ELSE 'FALSE' END EXPIRY_PLACE_MATCH,
PR.CODE TI_PROD_CODE,BG.BG_TYPE FIN_BG_TYPE,BG.BG_CLASS FIN_BG_CLASS,
ACC.FIN_ACC_NUM,GAM.FORACID,
CASE WHEN ACC.FIN_ACC_NUM=GAM.FORACID THEN 'TRUE' ELSE 'FALSE' END ACCOUNT_MATCH, 
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
TECT.CHARGE_TYPE,TECT.TENOR_PERIOD,TECT.FIXED_TENOR_PCNT,
MA.WORKGROUP TI_WORKGROUP,BG.FREE_CODE1 FIN_WORKGROUP,
CASE WHEN nvl(TRIM(MA.WORKGROUP),' ')=nvl(TRIM(BG.FREE_CODE1),' ') THEN 'TRUE' ELSE 'FALSE' END WORKGROUP_MATCH, 
APP.ADDRESS1 TI_APP_NAME,OUP.NAME FIN_APP_NAME,
CASE WHEN nvl(TRIM(APP.ADDRESS1),' ')=nvl(TRIM(OUP.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_NAME_MATCH, 
APP.ADDRESS2 TI_APP_ADD2,OUP.ADDRESS1 FIN_APP_ADD1,
CASE WHEN nvl(TRIM(APP.ADDRESS2),' ')=nvl(TRIM(OUP.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD1_MATCH,
APP.ADDRESS3 TI_APP_ADD3,OUP.ADDRESS2 FIN_APP_ADD2,
CASE WHEN nvl(TRIM(APP.ADDRESS3),' ')=nvl(TRIM(OUP.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD2_MATCH,
TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)) TI_APP_ADD_4_5,OUP.ADDRESS3 FIN_APP_ADD3,
CASE WHEN nvl(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),' ')=nvl(TRIM(OUP.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_ADD3_MATCH,
APP.ZIPCODE TI_ZIPCODE,OUP.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(APP.ZIPCODE),' ')=nvl(TRIM(OUP.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_PIN_CODE_MATCH,
APP.COUNTRY TI_COUNTRY_CODE,OUP.CNTRY_CODE FIN_COUNTRY_CODE,
CASE WHEN nvl(TRIM(APP.COUNTRY),' ')=nvl(TRIM(OUP.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_COUNTRY_MATCH,
APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH TI_BIC_CODE,OUP.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(APP.SW_BANK||APP.SW_CTR||APP.SW_LOC||APP.SW_BRANCH),' ')=nvl(TRIM(OUP.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END APPL_BIC_MATCH,
BEN.ADDRESS1 TI_BEN_NAME,OUT.NAME FIN_BEN_NAME,
CASE WHEN nvl(TRIM(BEN.ADDRESS1),' ')=nvl(TRIM(OUT.NAME),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_NAME_MATCH, 
BEN.ADDRESS2 TI_BEN_ADD2,OUT.ADDRESS1 FIN_BEN_ADD1,
CASE WHEN nvl(TRIM(BEN.ADDRESS2),' ')=nvl(TRIM(OUT.ADDRESS1),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD1_MATCH,
BEN.ADDRESS3 TI_BEN_ADD3,OUT.ADDRESS2 FIN_BEN_ADD2,
CASE WHEN nvl(TRIM(BEN.ADDRESS3),' ')=nvl(TRIM(OUT.ADDRESS2),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD2_MATCH,
TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)) TI_BEN_ADD_4_5,OUT.ADDRESS3 FIN_BEN_ADD3,
CASE WHEN nvl(TRIM(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5)),' ')=nvl(TRIM(OUT.ADDRESS3),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_ADD3_MATCH,
BEN.ZIPCODE TI_ZIPCODE,OUT.PIN_CODE FIN_PIN_CODE,
CASE WHEN nvl(TRIM(BEN.ZIPCODE),' ')=nvl(TRIM(OUT.PIN_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_PINCODE_MATCH, 
BEN.COUNTRY TI_COUNTRY,OUT.CNTRY_CODE FIN_COUNTRY,
CASE WHEN nvl(TRIM(BEN.COUNTRY),' ')=nvl(TRIM(OUT.CNTRY_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_COUNTRY_MATCH,
BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH TI_BIC_CODE,OUT.BIC_CODE FIN_BIC_CODE,
CASE WHEN nvl(TRIM(BEN.SW_BANK||BEN.SW_CTR||BEN.SW_LOC||BEN.SW_BRANCH),' ')=nvl(TRIM(OUT.BIC_CODE),' ') THEN 'TRUE' ELSE 'FALSE' END BEN_BIC_CODE
FROM MASTER_ODS MA
LEFT JOIN C8PF ON C8CCY=MA.CCY
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=MA.PCP_PTY
LEFT JOIN TF_RISK_EFFECT_DATE ID ON ID.MASTER_REF=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN PRODTYPE_ODS PR ON PR.KEY97=MA.PRODTYPE
LEFT JOIN LCMASTER_ODS LC ON LC.KEY97=MA.KEY97
LEFT JOIN PARTYDTLS_ODS APP ON APP.KEY97=MA.PCP_PTY
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=MA.NPCP_PTY
LEFT JOIN TF_OP_ACC ACC ON ACC.MASTER_REF=MA.MASTER_REF
LEFT JOIN TBAADM.BGM BG ON BG.BG_SRL_NUM=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TBAADM.CMG CM ON CM.CUST_ID=BG.CUST_ID
LEFT JOIN TBAADM.TFAT OUP ON OUP.ADDR_B2KID=BG.BG_B2KID AND OUP.ADDR_ID='BGOUPY' AND OUP.ADDR_TYPE='S'
LEFT JOIN TBAADM.TFAT OUT ON OUT.ADDR_B2KID=BG.BG_B2KID AND OUT.ADDR_ID='BGOTPY' AND OUT.ADDR_TYPE='S'
LEFT JOIN TBAADM.GAM GAM ON GAM.ACID=BG.OPER_ACID
LEFT JOIN TF_BG_C_TECT TECT ON TECT.ENTITY_ID=BG.BG_SRL_NUM
WHERE MA.REFNO_PFIX='PTN' AND MA.STATUS='LIV' AND MA.LIAB_AMT!=0"
