 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
asset_classification.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
asset_classification.sql 
select 
fin_acc_num,
map_acc.schm_type,
scc3r LEG_CODE,
MAIN_CLASSIFICATION_USER,
SUB_CLASSIFICATION_USER
from map_acc 
inner join scpf on leg_branch_id||leg_Scan||leg_scas= scab||Scan||Scas
left join (select * from tbaadm.gam where bank_id='01') gam on foracid=fin_acc_num
left join (select * from tbaadm.acd where bank_id='01')acd on gam.acid=acd.B2K_ID
where map_acc.schm_type <> 'OOO' and trim(acc_closed) is null 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
BO.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
BO.sql 
Select 
'TYPE_OF_SI' ||'|'||
'FINACLE_SI_SRL_NUM'  ||'|'||
'EQUATION_BRANCH_ID'||'|'||
'FINACLE_BRANCH_ID'||'|'||
'EQUATION_CLIENT_NO' ||'|'||
'FINACLE_CIF_ID' ||'|'||
--'EQUATION_SI_SRL_NUM'||'|'||
--'FINACLE_SI_SRL_NUM'||'|'||
'EQUATION_FREQ_TYPE'||'|'||
---'EQUATION_EXTRACTED_FREQ_TYPE'||'|'||
'FINACLE_SI_FREQ_TYPE'||'|'||
'SI_FREQ_TYPE_MATCH' ||'|'||
'EQUATION_FREQ_START_DD'||'|'||
'FINACLE_FREQ_START_DD'||'|'||
'FREQ_START_DD_MATCH' ||'|'||
'EQUATION_SI_END_DATE'||'|'||
'FINACLE_SI_END_DATE'||'|'||
'SI_END_DATE_MATCH'||'|'||
'EQUATION_SI_NEXT_EXEC_DT'||'|'||
'FINACLE_SI_NEXT_EXEC_DT'||'|'||
'NEXT_EXECUTION_DT_MATCH'||'|'||
--'LEG_BALANCE_INDICATOR' ||'|'||
--'FINACLE_BALANCE_INDICATOR' ||'|'||
--'BALANCE_INDICATOR_MATCH' ||'|'||
--'LEG_EXCESS_SHORT_INDICATOR' ||'|'||
--'FINACLE_EXCESS_SHORT_INDICATOR' ||'|'||
--'EXCESS_SHORT_INDICATOR_MATCH' ||'|'||
'EQUATION_CURRENCY'||'|'||
'FINACLE_CURRENCY'||'|'||
'CURRENCY_MATCH'||'|'||
'EQUATION_SI_AMT'||'|'||
'FINACLE_SI_AMT'||'|'||
'SI_AMT_MATCH'||'|'||
'EQUATION_DR_ACC_NO'||'|'||
'FINACLE_DR_ACC_NO'||'|'||
'EQUATION_CR_ACC_NO'||'|'||
'FINACLE_CR_ACC_NO'||'|'||
'EQUATION_SI_FREQ_DAYS_NUM' ||'|'||
'LEGACY_RATE_CODE' ||'|'||
'FINACLE_RATE_CODE' ||'|'||
'LEGACY_CR_RATE_CODE' ||'|'||
'FINACLE_CR_RATE_CODE'||'|'||
'LEG_SI_REFERENCE_NUMBER'||'|'||
'ROBOT'||'|'||
'R0FRC'||'|'||
'LEG_AMOUNT_INDICATOR'||'|'||
'FIN_AMOUNT_INDICATOR'
from dual
union all
Select distinct 
'SAME CURRENCY BO' ||'|'||
to_char(si_srl_num) ||'|'||
to_char(r0ab)||'|'||
to_char(to_number(r0ab)) ||'|'||
to_char(r0an) ||'|'||
to_char(map_acc.fin_cif_id) ||'|'||
to_char(trim(mapfrequency(substr(r7frq,1,1))))||'|'||
to_char(si_rpt.SI_FREQ_TYPE) ||'|'||
case when to_char(trim(mapfrequency(substr(r7frq,1,1)))) = to_char(si_rpt.SI_FREQ_TYPE) then 'TRUE' else 'FALSE' end ||'|'||
case when trim(mapfrequency(substr(r7frq,1,1))) in('W','F','D') 
then '' else to_char(substr(r7frq,2,2)) end  ||'|'||
to_char(si_rpt.si_freq_start_dd) ||'|'||
case when (case when trim(mapfrequency(substr(r7frq,1,1))) in('W','F','D') 
then '' else to_char(substr(r7frq,2,2)) end) = lpad(to_char(si_rpt.si_freq_start_dd),2,0)  then 'TRUE' else 'FALSE' end  ||'|'||
case when r7fld = 9999999 then '' when get_date_fm_btrv(r7fld) <> 'ERROR' 
then to_char(to_date(get_date_fm_btrv(r7fld),'YYYYMMDD'),'DD-MM-YYYY') 
     end ||'|'||
case when to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY')='31-12-2099' then ' ' else to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY') end ||'|'||
case when (case when r7fld = 9999999 then ' ' when get_date_fm_btrv(r7fld) <> 'ERROR' 
then to_char(to_date(get_date_fm_btrv(r7fld),'YYYYMMDD'),'DD-MM-YYYY') 
     end) = (case when to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY')='31-12-2099' then ' ' else to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY') end) then 'TRUE' else 'FALSE' end ||'|'||
case when trim(mapfrequency(substr(r7frq,1,1))) ='M' then
    to_char(substr(r7frq,2,2))||substr(to_char(to_date(get_date_fm_btrv(r7npr),'YYYYMMDD'),'DD-MM-YYYY'),3,10)
    else to_char(to_date(get_date_fm_btrv(r7npr),'YYYYMMDD'),'DD-MM-YYYY')  end ||'|'||
to_char(si_rpt.NEXT_EXEC_DaTe,'DD-MM-YYYY') ||'|'||
case when (case when trim(mapfrequency(substr(r7frq,1,1))) ='M' then
    to_char(substr(r7frq,2,2))||substr(to_char(to_date(get_date_fm_btrv(r7npr),'YYYYMMDD'),'DD-MM-YYYY'),3,10)
    else to_char(to_date(get_date_fm_btrv(r7npr),'YYYYMMDD'),'DD-MM-YYYY')  end) = to_char(si_rpt.NEXT_EXEC_DaTe,'DD-MM-YYYY') then 'TRUE' else 'FALSE' end ||'|'||
case when trim(C8CCY)='DH' then  'AED'
else trim(c8ccy) end ||'|'||
to_char(si_rpt.crncy_code) ||'|'||
case when (case when trim(C8CCY)='DH' then  'AED'
else trim(c8ccy) end) = to_char(si_rpt.crncy_code) then 'TRUE' ELSE 'FALSE' end ||'|'||
case 
when r0FRC = 'F' then to_char(r7min/power(10,c8ced))
when r0FRC = 'R' then to_char(r7max/power(10,c8ced))
end
 ||'|'||
to_char(si_rpt.fixed_amt) ||'|'||
case when (case 
when r0FRC = 'F' then to_char(r7min/power(10,c8ced))
when r0FRC = 'R' then to_char(r7max/power(10,c8ced))
end) = to_char(si_rpt.fixed_amt)  then 'TRUE' else 'FALSE' end ||'|'||
--case when r7bot <> 'D' then to_char(LEG_BO_ACCOUNT) else TO_CHAR(map_acc1.LEG_BRANCH_ID||MAP_ACC1.LEG_SCAN||MAP_ACC1.LEG_SCAS) end ||'|'||
case when r7bot <> 'D' then to_char(LEG_BO_ACCOUNT) else TO_CHAR(nvl(map_acc1.LEG_BRANCH_ID||MAP_ACC1.LEG_SCAN||MAP_ACC1.LEG_SCAS,map_off_acc1.leg_acc_num)) end ||'|'||
to_char(si_rpt.dr_acct_number) ||'|'||
TO_CHAR(map_acc2.LEG_BRANCH_ID||MAP_ACC2.LEG_SCAN||MAP_ACC2.LEG_SCAS) ||'|'||
to_char(si_rpt.cr_acct_number)||'|'||
' '  ||'|'||
''   ||'|'||
''   ||'|'||
''   ||'|'||
''   ||'|'||
R0SEQ||'|'||
R0BOT||'|'||
r0frc||'|'||
case 
when r7bot = 'D' and r7min/power(10,c8ced) = '0' then 'C'
when r7bot = 'D' and (r7min/power(10,c8ced) <> '0' or r7min is not null) then 'C'
when r7bot = 'D' then 'C'
when r7bot = 'S' then 'C'
when r7bot = 'L' and r0frc = 'R' then 'C'
when r7bot = 'L' and r0frc = 'F' then 'D'
when r0frc = 'F' and r7min < 0 then 'D'
when r0frc = 'F' and r7min >= 0 then 'C'
when r0frc = 'R' and r7min < 0 then 'D'
when r0frc = 'R' and r7min >= 0 then 'C'
end ||'|'||
BALANCE_IND
--select 
--trim(FIN_BO_cR_ACCT),trim(cR_ACCT_NUMBER),case 
--when r7bot <> 'D' then trim(FIN_BO_ACCOUNT)
--else trim(FIN_BO_DR_ACCT) end , trim(DR_ACCT_NUMBER)
from BALANCE_ORDER
left join map_acc on FIN_DR_ACCT=fin_Acc_num
left join c8pf on trim(c8ccy) = trim(currency)
left join scpf a on scab||scan||scas=r0ab||r0an||r0as
left JOIN (SELECT * FROM MAP_ACC) MAP_ACC1 ON trim(MAP_ACC1.FIN_ACC_NUM) = case when trim(r7bot) <> 'D' then FIN_BO_ACCOUNT 
else trim(FIN_BO_DR_ACCT) end
left JOIN (SELECT * FROM MAP_off_ACC) MAP_off_ACC1 ON trim(MAP_off_ACC1.FIN_ACC_NUM) = case when trim(r7bot) <> 'D' then FIN_BO_ACCOUNT 
else FIN_BO_DR_ACCT end
LEFT JOIN (SELECT * FROM MAP_ACC) MAP_ACC2 ON trim(MAP_ACC2.FIN_ACC_NUM) = trim(BALANCE_ORDER.FIN_BO_CR_ACCT)
left join crmuser.accounts b on b.ORGKEY = map_ACC.fin_cif_id
left join (select distinct gfcpnc, fin_cif_id, individual from map_cif where del_flg<>'Y')map_cif on map_cif.fin_cif_id = map_acc.fin_cif_id
LEFT join si_rpt on 
trim(FIN_DR_ACCT) = trim(DR_ACCT_NUMBER) and FIN_CR_ACCT = trim(CR_ACCT_NUMBER) and (case 
when r0FRC = 'F' then to_char(r7min/power(10,c8ced))
when r0FRC = 'R' then to_char(r7max/power(10,c8ced))
end) = to_char(si_rpt.fixed_amt)
where trim(FIN_DR_CURRENCY) = trim(FIN_CR_CURRENCY)
AND r7npr >get_param('EODCYYMMDD') AND r7fld>get_param('EODCYYMMDD')
and r0an not in ('855100','855000') and a.scact not in ('YL','YP')
and ((R0BOT in ('D','L','S') and R0frc ='F')or (R0BOT in ('S') and R0frc ='R'));

--where  to_date(get_date_fm_btrv(r7npr),'YYYYMMDD') > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--and
--(CASE
--             WHEN r7fld = 9999999
--                THEN TO_DATE ('20991231', 'YYYYMMDD')
--             WHEN get_date_fm_btrv (r7fld) <> 'ERROR'
--                THEN TO_DATE (get_date_fm_btrv (r7fld), 'YYYYMMDD')
--          END > TO_DATE (get_param ('EOD_DATE'), 'DD-MM-YYYY')) 
--and trim(FUND_CCY) = trim(RECV_CCY) AND r7npr >get_param('EODCYYMMDD') AND r7fld>get_param('EODCYYMMDD')
--and r0an not in ('855100','855000') and a.scact not in ('YL','YP') 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
chequebookmaster.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
chequebookmaster.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_CHEQUEBOOK.dat
drop table cbt_rep;
create table cbt_rep as
select * from tbaadm.cbt where bank_id=get_param('BANK_ID');
CREATE INDEX IDX_CBT_DATE ON CBT_REP(TO_NUMBER("BEGIN_CHQ_NUM"), CHQ_ISSU_DATE);
select 
'LEG_BRANCH_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CUST_ID'||'|'||
'LEG_CURRENCY'||'|'||
'FIN_CURRENCY'||'|'||
'CURRENCY_MATCH'||'|'||
'FINACLE_ACC_NUM'||'|'||
'LEG_CUSTOMER_NAME' ||'|'||
'FINACLE_CUSTOMER_NAME' ||'|'||
'CUSTOMER_NAME_MATCH' ||'|'||
'LEG_CUST_TYPE' ||'|'||
'LEG_ACCOUNT_TYPE' ||'|'||
'ACCOUNT_STATUS' ||'|'||
'LEG_CHEQ_NUMBER'||'|'||
'FINACLE_CHEQ_NUMBER'||'|'||
'CHEQ_NUMBER_MATCH'||'|'||
'LEG_NO_CHEQ_LEAVES'||'|'||
'FINACLE_NO_CHEQ_LEAVES'||'|'||
'NO_CHEQ_LEAVES_MATCH'||'|'||
'LEG_CHEQ_ISS_DATE'||'|'||
'FINACLE_CHEQ_ISS_DATE'||'|'||
'CHEQ_ISS_DATE_MATCH'||'|'||
'LEG_CHQUE_LEAF_STATUS'||'|'||
'FINACLE_CHQUE_LEAF_STATUS' ||'|'||
'CHQUE_LEAF_STATUS_MATCH' ||'|'||
'INDIVIDUAL/CORPORATE'
from dual
union all
select
to_char(map_acc.leg_branch_id)||'|'||
to_char(map_acc.leg_scan)||'|'||
to_char(map_acc.LEG_SCAS)||'|'||
to_char(map_acc.leg_cust_id)||'|'||
to_char(map_acc.CURRENCY)||'|'||
to_char(ACCT_CRNCY_CODE)||'|'||
case when (to_char(map_acc.CURRENCY)) = (to_char(ACCT_CRNCY_CODE)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(g.foracid)||'|'||
to_char(g.acct_name) ||'|'||
to_char(g.acct_name) ||'|'||
'TRUE' ||'|'||
TO_CHAR(MAP_ACC.LEG_CUST_TYPE) ||'|'||
TO_CHAR(MAP_ACC.LEG_ACCT_TYPE) ||'|'||
--CASE WHEN MAP_ACC.SCHM_TYPE ='ODA' THEN to_char(cam.ACCT_STATUS)
--WHEN  MAP_ACC.SCHM_TYPE = 'SBA' THEN TO_CHAR(SMT.ACCT_STATUS) END ||'|'||
case when to_number(BEGIN_CHEQUE_NUMBER)=0 then '1' else to_char(BEGIN_CHEQUE_NUMBER) end ||'|'||
to_char(trim(b.begin_chq_num))||'|'||
CASE WHEN trim((case when to_number(BEGIN_CHEQUE_NUMBER)=0 then '1' else to_char(BEGIN_CHEQUE_NUMBER) end )) = to_char(trim(b.begin_chq_num)) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(NUMBER_OF_CHEQUE_LEAVES)||'|'||
to_char(b.chq_num_of_lvs)||'|'||
CASE WHEN to_number(NUMBER_OF_CHEQUE_LEAVES) = to_number(b.chq_num_of_lvs) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when to_date(rpad(DATE_OF_ISSUE,10,' '),'DD-MM-YYYY')< to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
        then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MM-YYYY')
        else to_char(to_date(rpad(DATE_OF_ISSUE,10,' '),'DD-MM-YYYY'),'DD-MM-YYYY') end ||'|'||
to_char(Chq_issu_date,'DD-MM-YYYY') ||'|'||
CASE WHEN (case when to_date(rpad(DATE_OF_ISSUE,10,' '),'DD-MM-YYYY')< to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
        then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MM-YYYY')
        else to_char(to_date(rpad(DATE_OF_ISSUE,10,' '),'DD-MM-YYYY'),'DD-MM-YYYY') end) = to_char(Chq_issu_date,'DD-MM-YYYY')  THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(CHEQUE_LEAF_STATUS)||'|'||
to_char(b.chq_lvs_stat) ||'|'||
CASE WHEN trim(to_char(CHEQUE_LEAF_STATUS)) = trim(to_char(b.chq_lvs_stat)) THEN 'TRUE' ELSE 'FALSE' END ||'|'|| 
case when individual = 'Y' then 'RETAIL' else 'CORPORATE' end
from cbs_o_table
inner join map_acc on map_acc.fin_acc_num=trim(account_number)
inner join scpf on map_acc.leg_branch_id =scab and leg_scan=scan and leg_scas=scas
INNER join map_cif on MAP_CIF.FIN_CIF_ID=MAP_ACC.FIN_CIF_ID 
INNER JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in('CAA','SBA','ODA')) g ON g.foracid = map_acc.fin_acc_num
--LEFT JOIN (select * from tbaadm.cam where bank_id=get_param('BANK_ID'))cam ON cam.acid = g.acid
--LEFT JOIN (select * from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = g.acid
left JOIN (select * from cbt_rep where bank_id=get_param('BANK_ID')) b ON b.acid = g.acid and to_number(cbs_o_table.BEGIN_CHEQUE_NUMBER)=to_number(b.begin_chq_num) and to_date(cbs_o_table.DATE_OF_ISSUE,'DD-MM-YYYY')=b.CHQ_ISSU_DATE
where map_acc.schm_type in('CAA','SBA','ODA');
exit;
--from cbs_o_table
--inner join map_acc on map_acc.fin_acc_num=trim(account_number)
--inner join scpf on map_acc.leg_branch_id =scab and leg_scan=scan and leg_scas=scas
--INNER join map_cif on MAP_CIF.FIN_CIF_ID=MAP_ACC.FIN_CIF_ID 
--INNER JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in('CAA','SBA','ODA')) g ON g.foracid = map_acc.fin_acc_num
----LEFT JOIN (select * from tbaadm.cam where bank_id=get_param('BANK_ID'))cam ON cam.acid = g.acid
----LEFT JOIN (select * from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = g.acid
--left JOIN (select * from cbt_rep where bank_id=get_param('BANK_ID')) b ON b.acid = g.acid and to_number(cbs_o_table.BEGIN_CHEQUE_NUMBER)=to_number(b.begin_chq_num) and to_date(cbs_o_table.DATE_OF_ISSUE,'DD-MM-YYYY')=b.CHQ_ISSU_DATE
--where map_acc.schm_type in('CAA','SBA','ODA');
 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
cla.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
cla.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_CLA.dat
drop table cla_acc_fin_int_rate_report;
create table cla_acc_fin_int_rate_report
as
SELECT a.*,csp.int_tbl_code tbl_code,base_pcnt_dr,base_pcnt_cr,nvl(c.nrml_int_pcnt,0) cr_nrml_int_pcnt, nvl(d.nrml_int_pcnt,0) dr_nrml_int_pcnt,
acc_pref_rate - (nvl(base_pcnt_dr,0) + nvl(d.nrml_int_pcnt,0))actual_pref_rate
from
cla_int_tbl a
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on
a.schm_code = csp.schm_code and a.v5ccy = csp.crncy_code
left join (select c.* from tbaadm.icv c
inner join ( 
select a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM,min(a.INT_VERSION) INT_VERSION 
from tbaadm.icv a
inner join ( 
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.icv where del_flg = 'N' and bank_id = get_param('BANK_ID') 
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID')
group by a.int_tbl_code,a.crncy_code, a.INT_TBL_VER_NUM) d 
on d.int_tbl_code=c.int_tbl_code and d.crncy_code=c.crncy_code and d.INT_TBL_VER_NUM=c.INT_TBL_VER_NUM 
and c.INT_VERSION=d.INT_VERSION
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and  c.START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))b on  csp.int_tbl_code =b.int_tbl_code  and  csp.CRNCY_CODE = b.CRNCY_CODE
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'C'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on csp.int_tbl_code =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )d  on csp.int_tbl_code =d.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
where trim(csp.int_tbl_code)<>'CORTE';
--WHERE A.SCHM_TYPE IN ('LAA','CLA')
create index int_tbl_idxrrr on cla_acc_fin_int_rate_report(int_acc_num);
drop table cla_account_finacle_int_rate1;
create table  cla_account_finacle_int_rate1 as
select cl.*, itc.ID_DR_PREF_PCNT  from cla_acc_fin_int_rate_report cl
inner join map_acc on leg_acc_num= INT_ACC_NUM
left join (select * from tbaadm.gam where bank_id='01' and schm_type='CLA')gam on gam.foracid=fin_acc_num
LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table cla_ac_fin_int_rate_les12_rep;
create table cla_ac_fin_int_rate_les12_rep as
SELECT a.*,csp.int_tbl_code tbl_code,base_pcnt_dr,base_pcnt_cr,nvl(trim(c.nrml_int_pcnt),0) cr_nrml_int_pcnt, nvl(trim(d.nrml_int_pcnt),0) dr_nrml_int_pcnt,
nvl(trim(acc_pref_rate),0) - (nvl(trim(base_pcnt_dr),0) + nvl(trim(d.nrml_int_pcnt),0))actual_pref_rate,d.LOAN_TENOR_MTHS LOAN_TENOR_MTHS_dr,c.LOAN_TENOR_MTHS LOAN_TENOR_MTHS_cr
from
cla_int_tbl a
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on
a.schm_code = csp.schm_code and a.v5ccy = csp.crncy_code
left join (select c.* from tbaadm.icv c
inner join ( 
select a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM,min(a.INT_VERSION) INT_VERSION 
from tbaadm.icv a
inner join ( 
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.icv where del_flg = 'N' and bank_id = get_param('BANK_ID') 
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID')
group by a.int_tbl_code,a.crncy_code, a.INT_TBL_VER_NUM) d 
on d.int_tbl_code=c.int_tbl_code and d.crncy_code=c.crncy_code and d.INT_TBL_VER_NUM=c.INT_TBL_VER_NUM 
and c.INT_VERSION=d.INT_VERSION
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and  c.START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))b on  csp.int_tbl_code =b.int_tbl_code  and  csp.CRNCY_CODE = b.CRNCY_CODE
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'C'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on csp.int_tbl_code =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D' and LOAN_TENOR_MTHS<=12
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D' and LOAN_TENOR_MTHS<=12
where del_flg = 'N' and bank_id = get_param('BANK_ID') )d  on csp.int_tbl_code =d.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = trim(INT_ACC_NUM)
where trim(csp.int_tbl_code)='CORTE' AND 1=2 --Prashant
and (case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
     else 0 end)<=12;
create index int_tbl_idx_3_rep on cla_ac_fin_int_rate_les12_rep(int_acc_num);
drop table cla_acct_fin_int_rate_les121;
create table  cla_acct_fin_int_rate_les121 as
select cl.*, itc.ID_DR_PREF_PCNT  from cla_ac_fin_int_rate_les12_rep cl
inner join map_acc on leg_acc_num= INT_ACC_NUM
left join (select * from tbaadm.gam where bank_id='01' and schm_type='CLA')gam on gam.foracid=fin_acc_num
LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table cla_acc_fin_int_rt_more12_rep;
create table cla_acc_fin_int_rt_more12_rep as
SELECT a.*,csp.int_tbl_code tbl_code,base_pcnt_dr,base_pcnt_cr,nvl(trim(c.nrml_int_pcnt),0) cr_nrml_int_pcnt, nvl(trim(d.nrml_int_pcnt),0) dr_nrml_int_pcnt,
nvl(trim(acc_pref_rate),0) - (nvl(trim(base_pcnt_dr),0) + nvl(trim(d.nrml_int_pcnt),0))actual_pref_rate,d.LOAN_TENOR_MTHS LOAN_TENOR_MTHS_dr,c.LOAN_TENOR_MTHS LOAN_TENOR_MTHS_cr
from
cla_int_tbl a
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on
a.schm_code = csp.schm_code and a.v5ccy = csp.crncy_code
left join (select c.* from tbaadm.icv c
inner join ( 
select a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM,min(a.INT_VERSION) INT_VERSION 
from tbaadm.icv a
inner join ( 
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.icv where del_flg = 'N' and bank_id = get_param('BANK_ID') 
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID')
group by a.int_tbl_code,a.crncy_code, a.INT_TBL_VER_NUM) d 
on d.int_tbl_code=c.int_tbl_code and d.crncy_code=c.crncy_code and d.INT_TBL_VER_NUM=c.INT_TBL_VER_NUM 
and c.INT_VERSION=d.INT_VERSION
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and  c.START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))b on  csp.int_tbl_code =b.int_tbl_code  and  csp.CRNCY_CODE = b.CRNCY_CODE
--and (acct_open_date between b.start_date and b.MODIFY_END_DATE) 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'C'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on csp.int_tbl_code =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D' --and LOAN_TENOR_MTHS>12 prashant
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D'
where del_flg = 'N' and bank_id = get_param('BANK_ID') --and LOAN_TENOR_MTHS>12 prashant
)d  on csp.int_tbl_code =d.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = trim(INT_ACC_NUM)
where trim(csp.int_tbl_code)='CORTE';
create index int_tbl_idx_4_rep on cla_acc_fin_int_rt_more12_rep(int_acc_num);
drop table cla_acct_fin_int_rate_more121;
create table  cla_acct_fin_int_rate_more121 as
select cl.*, itc.ID_DR_PREF_PCNT  from cla_acc_fin_int_rt_more12_rep cl
inner join map_acc on leg_acc_num= INT_ACC_NUM
left join (select * from tbaadm.gam where bank_id='01' and schm_type='CLA')gam on gam.foracid=fin_acc_num
LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table cla_lac_fin_int_rt_mr12_rep;
create table cla_lac_fin_int_rt_mr12_rep as
select a.*,csp.int_tbl_code,base_pcnt_dr,base_pcnt_cr,
case 
when trim(s5trcc) like 'C%' then csp.int_tbl_code
when trim(s5trcd) is not null then s5trcd
when trim(s5trcc) is not null then s5trcc
when trim(s5trcd) is not null and trim(s5trcc) is not null then 'ZERO'
when trim(s5brrd) is not null and trim(s5brrc)  is not null then 'ZERO'
else csp.int_tbl_code end TBL_CODE_MIGR
,
case 
when trim(s5trcd) is not null then 0
when nvl(trim(s5ratd),0) <> 0 then (nvl(trim(s5ratd),0) - (nvl(base_pcnt_dr,0)+nvl(d.nrml_int_pcnt,0)))
when (nvl(dr_base_rate,0) + nvl(diff_dr_rate,0) + nvl(dr_margin_rate,0)) <> nvl(base_pcnt_dr,0) + nvl(d.nrml_int_pcnt,0)
 then ((nvl(dr_base_rate,0) + nvl(diff_dr_rate,0) + nvl(dr_margin_rate,0)) - (nvl(base_pcnt_dr,0)+nvl(d.nrml_int_pcnt,0)))
else 0 end dr_pref_rate
,
case 
when trim(s5trcc) is not null then 0
when nvl(trim(s5ratc),0) <> 0 then (nvl(trim(s5ratc),0) - (nvl(base_pcnt_cr,0)+nvl(c.nrml_int_pcnt,0)))
when (nvl(cr_base_rate,0) + nvl(diff_cr_rate,0) - nvl(cr_margin_rate,0)) <> nvl(base_pcnt_cr,0) + nvl(c.nrml_int_pcnt,0) then 
((nvl(cr_base_rate,0) + nvl(diff_cr_rate,0) - nvl(cr_margin_rate,0))-(nvl(base_pcnt_cr,0)+nvl(c.nrml_int_pcnt,0)))
else 0 end cr_pref_rate,
nvl(c.nrml_int_pcnt,0)cr_nrml_int_pcnt,
nvl(d.nrml_int_pcnt,0)dr_nrml_int_pcnt
from
ACCT_INTEREST_TEMP a
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on
a.schm_code = csp.schm_code and a.s5ccy = csp.crncy_code
left join (select c.* from tbaadm.icv c
inner join ( 
select a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM,min(a.INT_VERSION) INT_VERSION 
from tbaadm.icv a
inner join ( 
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.icv where del_flg = 'N' and bank_id = get_param('BANK_ID') 
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID')
group by a.int_tbl_code,a.crncy_code, a.INT_TBL_VER_NUM) d 
on d.int_tbl_code=c.int_tbl_code and d.crncy_code=c.crncy_code and d.INT_TBL_VER_NUM=c.INT_TBL_VER_NUM 
and c.INT_VERSION=d.INT_VERSION
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID'))b  on csp.int_tbl_code =b.int_tbl_code  and   csp.CRNCY_CODE = b.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'C'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on csp.int_tbl_code =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D' --and LOAN_TENOR_MTHS>12 Prashant
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D'
where del_flg = 'N' and bank_id = get_param('BANK_ID') --and LOAN_TENOR_MTHS>12 Prashant
 )d  on d.int_tbl_code =csp.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
 inner join scpf on scab=s5ab and scan=s5an and scas=s5as
where csp.INT_TBL_CODE='CORTE';
create index cla_lac_idx_rep on cla_lac_fin_int_rt_mr12_rep(s5ab||s5an||s5as);
drop table cla_lac_fin_int_rate_more121;
create table  cla_lac_fin_int_rate_more121 as
select cl.*, itc.ID_DR_PREF_PCNT  from cla_lac_fin_int_rt_mr12_rep cl
inner join map_acc on leg_branch_id||leg_scan||leg_scas= s5ab||s5an||s5as
left join (select * from tbaadm.gam where bank_id='01' and schm_type='CLA')gam on gam.foracid=fin_acc_num
LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table cla_lac_fin_int_rate_les12_rep;
create table cla_lac_fin_int_rate_les12_rep as
select a.*,csp.int_tbl_code,base_pcnt_dr,base_pcnt_cr,
case 
when trim(s5trcc) like 'C%' then csp.int_tbl_code
when trim(s5trcd) is not null then s5trcd
when trim(s5trcc) is not null then s5trcc
when trim(s5trcd) is not null and trim(s5trcc) is not null then 'ZERO'
when trim(s5brrd) is not null and trim(s5brrc)  is not null then 'ZERO'
else csp.int_tbl_code end TBL_CODE_MIGR
,
case 
when trim(s5trcd) is not null then 0
when nvl(trim(s5ratd),0) <> 0 then (nvl(trim(s5ratd),0) - (nvl(base_pcnt_dr,0)+nvl(d.nrml_int_pcnt,0)))
when (nvl(dr_base_rate,0) + nvl(diff_dr_rate,0) + nvl(dr_margin_rate,0)) <> nvl(base_pcnt_dr,0) + nvl(d.nrml_int_pcnt,0)
 then ((nvl(dr_base_rate,0) + nvl(diff_dr_rate,0) + nvl(dr_margin_rate,0)) - (nvl(base_pcnt_dr,0)+nvl(d.nrml_int_pcnt,0)))
else 0 end dr_pref_rate
,
case 
when trim(s5trcc) is not null then 0
when nvl(trim(s5ratc),0) <> 0 then (nvl(trim(s5ratc),0) - (nvl(base_pcnt_cr,0)+nvl(c.nrml_int_pcnt,0)))
when (nvl(cr_base_rate,0) + nvl(diff_cr_rate,0) - nvl(cr_margin_rate,0)) <> nvl(base_pcnt_cr,0) + nvl(c.nrml_int_pcnt,0) then 
((nvl(cr_base_rate,0) + nvl(diff_cr_rate,0) - nvl(cr_margin_rate,0))-(nvl(base_pcnt_cr,0)+nvl(c.nrml_int_pcnt,0)))
else 0 end cr_pref_rate,
nvl(c.nrml_int_pcnt,0)cr_nrml_int_pcnt,
nvl(d.nrml_int_pcnt,0)dr_nrml_int_pcnt
from
ACCT_INTEREST_TEMP a
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on
a.schm_code = csp.schm_code and a.s5ccy = csp.crncy_code
left join (select c.* from tbaadm.icv c
inner join ( 
select a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM,min(a.INT_VERSION) INT_VERSION 
from tbaadm.icv a
inner join ( 
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.icv where del_flg = 'N' and bank_id = get_param('BANK_ID') 
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID')
group by a.int_tbl_code,a.crncy_code, a.INT_TBL_VER_NUM) d 
on d.int_tbl_code=c.int_tbl_code and d.crncy_code=c.crncy_code and d.INT_TBL_VER_NUM=c.INT_TBL_VER_NUM 
and c.INT_VERSION=d.INT_VERSION
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID'))b  on csp.int_tbl_code =b.int_tbl_code  and   csp.CRNCY_CODE = b.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'C'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on csp.int_tbl_code =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
left join (select a.* from tbaadm.LAVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.LAVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D' and LOAN_TENOR_MTHS<=12
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D'
where del_flg = 'N' and bank_id = get_param('BANK_ID') and LOAN_TENOR_MTHS<=12 
 )d  on d.int_tbl_code =csp.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
 inner join scpf on scab=s5ab and scan=s5an and scas=s5as
where csp.INT_TBL_CODE='CORTE' and 1=2 -- prashant to not get any records
and (case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
     else 0 end)<=12;     
create index cla_lac_idx1_rep on cla_lac_fin_int_rate_les12_rep(s5ab||s5an||s5as);
drop table cla_lac_fin_int_rate_les121;
create table  cla_lac_fin_int_rate_les121 as
select cl.*, itc.ID_DR_PREF_PCNT  from cla_lac_fin_int_rate_les12_rep cl
inner join map_acc on leg_branch_id||leg_scan||leg_scas= s5ab||s5an||s5as
left join (select * from tbaadm.gam where bank_id='01' and schm_type='CLA')gam on gam.foracid=fin_acc_num
LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid;
update  cla_operacc set OMPF_LEG_NUM=trim(OMPF_LEG_NUM);
create index newww11 on cla_operacc(OMPF_LEG_NUM);     
update cla_account_finacle_int_rate1 set int_acc_num=trim(int_acc_num);
update cla_acct_fin_int_rate_les121 set int_acc_num=trim(int_acc_num);
update cla_acct_fin_int_rate_more121 set int_acc_num=trim(int_acc_num
Select    
'EXTERNAL_ACC_NO'||'|'||
'LEG_BRCH_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
'SCHEME_DESCRIPTION'||'|'||
'LEGACY_CUST_NAME' ||'|'||
'FINACLE_CUST_NAME' ||'|'||
'LEGACY_NET_RATE'||'|'||
'FINACLE_NET_RATE'||'|'||
'NET_RATE_MATCH'||'|'||
'FINACLE_DEBIT_PREF_PERCENT'||'|'||
'BASE_DEBIT_PERCENT'||'|'||
'FINACLE_REPRICING_PLAN'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_SANCTION_LIMIT'||'|'||
'FINACLE_SANCTION_LIMIT'||'|'||
'SANCTION_LIMIT_MATCH'||'|'||
'LEG_LIMIT_SANCTION_DATE'||'|'||
'FINACLE_LIMIT_SANCTION_DATE'||'|'||
'LIMIT_SANCTION_DATE_MATCH'||'|'||
'LEG_LIMIT_EXPIRY_DATE'||'|'||
'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
'LIMIT_EXPIRY_DATE_MATCH'||'|'||
'FINACLE_INT_TBL_CODE'||'|'||
'LEG_REPY_PRD_IN_MONS'||'|'||
'FINACLE_REPY_PRD_IN_MON'||'|'||
'REPY_PRD_IN_MON_MATCH'||'|'||
'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
--'LEG_UPFRONT_INSTALLMENT_COLL'||'|'||
'FINACLE_UPFRONT_INSTALLMENT_COLL'||'|'||
--'UPFRONT_INSTLMNT_COLL_MATCH'||'|'||
'LEG_SUM_OF_THE_PRINC_DMD_AMT'||'|'||
'FINACLE_SUM_OF_THE_PRN_DMD_AMT'||'|'||
'SUM_OF_THE_PRN_DMD_AMT_MATCH'||'|'||
'LEG_DMD_SATISFY_MTHD'||'|'||
'FINACLE_DMD_SATISFY_MTHD'||'|'||
'DMD_SATISFY_MTHD_MATCH'||'|'||
'LEG_INT_RATE_ON_SANC_LMT'||'|'||
'FINACLE_INT_RATE_ON_SANC_LMT'||'|'||
'INT_RATE_ON_SANC_LMT_MATCH'||'|'||
'LEG_PI_BASED_ON_OUTSTANDING'||'|'||
'FIN_PI_BASED_ON_OUTSTANDING'||'|'||
'LEG_REPAY_SCHEDULE_DATE'||'|'||
'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
'REPAY_SCHEDULE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_BRANCH'||'|'||
'LEG_OPERATIVE_CLIENT_NO'||'|'||
'LEG_OPERATIVE_ORDINAL'||'|'||
'LEG_OPERATIVE_CCY'||'|'||
'LEG_OPERATIVE_ACC'||'|'||
'FIN_OPERATIVE_ACC'||'|'||
'OPERATIVE_ACC_MATCH'||'|'||
'LEG_TENOR_IN_MONTHS'||'|'||
'FINACLE_TENOR_IN_MONTHS'||'|'||
'TENOR_IN_MONTHS_MATCH'||'|'||
'LEG_TENOR_IN_DAYS'||'|'||
'FINACLE_TENOR_IN_DAYS'||'|'||
'TENOR_IN_DAYS_MATCH'||'|'||
'LEG_PURPOSE_OF_LOAN'||'|'||
'FIN_PURPOSE_OF_LOAN'||'|'||
'PURPOSE_OF_LOAN_MATCH'||'|'||
'FIN_DUE_AMT'||'|'||
'LEG_DUE_AMT'||'|'||
'DUE_AMT_MATCH'||'|'||
'FIN_DUE_DAYS'||'|'||
'FIN_DUE_DAYS'||'|'||
'DUE_DAYS_MATCH'||'|'||
'MANAGER'||'|'||
'LEG_INT_FREQ'||'|'||
'FIN_INT_FREQ'||'|'||
'FREQ_DESC' 
from dual
union all
select distinct
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
TO_CHAR(otccy) ||'|'||
to_char(gam.acct_crncy_code) ||'|'||
CASE WHEN TO_CHAR(otccy) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(gam.cif_id) ||'|'||
to_char(map_acc.leg_acc_num) ||'|'||
TO_CHAR(V5PF.V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
to_char(map_acc.leg_cust_type) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(map_acc.schm_code) ||'|'||
to_char(gsp.SCHM_DESC)||'|'||
to_char(c_name.acct_name) ||'|'||
to_char(gam.ACCT_NAME) ||'|'||
to_char(nvl(nvl(c.ACC_PREF_RATE,nvl(e.ACC_PREF_RATE,d.ACC_PREF_RATE )),0))||'|'||
to_char(nvl((c.BASE_PCNT_DR+c.ACTUAL_PREF_RATE),nvl(nvl(e.BASE_PCNT_DR,0)+e.ACTUAL_PREF_RATE+e.DR_NRML_INT_PCNT,nvl(d.BASE_PCNT_DR,0)+d.ACTUAL_PREF_RATE+d.DR_NRML_INT_PCNT )))||'|'||
case when (to_number(nvl(c.ACC_PREF_RATE,nvl(e.ACC_PREF_RATE,d.ACC_PREF_RATE )))) =(to_number(to_char(nvl((c.BASE_PCNT_DR+c.ACTUAL_PREF_RATE),nvl(nvl(e.BASE_PCNT_DR,0)+e.ACTUAL_PREF_RATE+e.DR_NRML_INT_PCNT,nvl(d.BASE_PCNT_DR,0)+d.ACTUAL_PREF_RATE+d.DR_NRML_INT_PCNT ))))) then 'TRUE' ELSE 'FALSE' End||'|'||
to_char(nvl(c.ACTUAL_PREF_RATE,nvl(e.ACTUAL_PREF_RATE,d.ACTUAL_PREF_RATE )))||'|'||
to_char(nvl((c.BASE_PCNT_DR),nvl((d.BASE_PCNT_DR),(nvl(e.BASE_PCNT_DR,0)))))||'|'||
to_char(TRIM (lrp.repricing_plan)) ||'|'|| 
to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else ' ' end)  ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else ' ' end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
to_char(abs(to_number(otdla/POWER(10,c8pf.C8CED))))||'|'||
to_char(gam.sanct_lim) ||'|'||
CASE WHEN (abs(to_number(otdla/POWER(10,c8pf.C8CED))))  = TRIM(gam.sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')
else ' ' end,10,' ')) ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when trim(to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')
else ' ' end,10,' ')))=trim(TO_CHAR(lht.lim_sanct_date,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(rpad(case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')
     else '' end,11,' ')) ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN (rpad(case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')
     else '' end,11,' ')) = TO_CHAR (lht.lim_exp_date, 'DD-MON-YYYY') THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(cla_account_finacle_int_rate.INT_TBL_CODE) ||'|'||
to_char(TRIM (itc.int_tbl_code)) ||'|'||
to_char(rpad(
     --case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
     --else 0 end
     ,3,' '))||'|'||
to_char(TRIM (lam.rep_perd_mths)) ||'|'||
case when (trim(to_char(
     --case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
     --else 0 end
     )))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
to_char(rpad(to_number(otdla)/POWER(10,c8pf.C8CED),17,' '))||'|'||
to_char(TRIM (lam.liab_as_on_xfer_eff_date))||'|'||
case when trim(to_char(rpad(to_number(otdla)/POWER(10,c8pf.C8CED),17,' '))) = trim(to_char( (lam.liab_as_on_xfer_eff_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(TRIM (lsp.upfront_instlmnt_coll)) ||'|'||
to_char(lpad(abs(to_number(nvl(sum_overdue,0)))/POWER(10,c8pf.C8CED),17,' '))||'|'||
to_char(TRIM(lam.sum_principal_dmd_amt))||'|'||
case when TRIM(to_char(lpad(abs(to_number(nvl(sum_overdue,0)))/POWER(10,c8pf.C8CED),17,' ')))=(to_char(TRIM(lam.sum_principal_dmd_amt))) then 'TRUE' else 'FALSE' END ||'|'||
to_char(TRIM (rpad(case when trim(oper.fin_acc_num) is not null then  'T' else 'N' end,1,' '))) ||'|'|| 
to_char(TRIM (lam.dmd_satisfy_mthd)) ||'|'|| 
CASE WHEN TRIM(case when trim(oper.fin_acc_num) is not null then  'T' else 'N' end) = TRIM(lam.dmd_satisfy_mthd) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(TRIM (lsp.int_rate_based_on_sanct_lim)) ||'|'|| 
to_char(TRIM (lam.int_rate_based_on_sanct_lim)) ||'|'|| 
CASE WHEN TRIM (lsp.int_rate_based_on_sanct_lim) = TRIM (lam.int_rate_based_on_sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(TRIM(lsp.pi_based_on_outstanding)) ||'|'||
to_char(TRIM(lam.pi_based_on_outstanding)) ||'|'|| 
to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end,11,' '))||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when (to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end,11,' ')))=(TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(oper.oper_leg_acc,1,4))||'|'||
to_char(substr(oper.oper_leg_acc,5,6))||'|'||
to_char(substr(oper.oper_leg_acc,11,3))||'|'||
to_char(oper.currency) ||'|'||
to_char(oper.fin_acc_num)||'|'||
to_char(gam_oper.foracid)||'|'||
case when nvl(to_char(oper.fin_acc_num),' ') = nvl(to_char(gam_oper.foracid),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(rpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
     --else 0 end
     ,3,' '))||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when (trim(to_char(rpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
     --else 0 end
     ,3,' '))))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
to_char(lpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
          to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
--else 0 end
,3,' '))||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when to_char( 
case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
          to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
) =to_char(lam.rep_perd_days) then 'TRUE' else 'FALSE' end||'|'||
TO_CHAR(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
CASE WHEN nvl(trim(TO_CHAR(SCC2R)),' ') = nvl(TO_CHAR(GAC.PURPOSE_OF_ADVN),' ') THEN 'TRUE' ELSE 'FALSE' END||'|'||
 LDT.DMD_AMT1||'|'||
(ls.sp/c8pwd)||'|'||
case when to_number(nvl(LDT.DMD_AMT1,0)) = nvl(to_number(ls.sp/c8pwd),0) then 'TRUE' else 'FALSE' end||'|'||
gac.DPD_CNTr||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170905','YYYYMMDD')) else 0 end||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170905','YYYYMMDD')) else 0 end),0) = nvl(to_number(gac.DPD_CNTr),0) then 'TRUE' else 'FALSE' end||'|'||
to_char(SCACO)||'|'||
S5IFQD||'|'||
to_char(eit.INT_FREQ_TYPE_DR)||'|'||
to_char(map_freq.value)
from map_acc map_acc
inner join v5pf on trim(v5brnm)||trim(v5dlp)||trim(v5dlr) = map_acc.leg_acc_num
left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
LEFT JOIN (select sanct_lim,foracid,acid,acct_opn_date,ACCT_NAME,cif_id,sol_id,acct_crncy_code from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
INNER JOIN (select * from tbaadm.lam where bank_id=get_param('BANK_ID'))lam ON lam.acid = gam.acid
left join (select upfront_instlmnt_coll,schm_code,crncy_code,del_flg,pi_based_on_outstanding,int_rate_based_on_sanct_lim from tbaadm.lsp where bank_id=get_param('BANK_ID'))lsp on lsp.schm_code = map_acc.schm_code and map_acc.currency=lsp.crncy_code and lsp.del_flg <> 'Y' 
left join (select schm_code,del_flg,SCHM_DESC from tbaadm.gsp where bank_id=get_param('BANK_ID'))gsp on gsp.schm_code = map_acc.schm_code and gsp.del_flg <> 'Y' 
left join (select schm_code,del_flg from tbaadm.gss where bank_id=get_param('BANK_ID'))gss on gss.schm_code = map_acc.schm_code and gss.del_flg <> 'Y' 
LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid
LEFT JOIN (select lim_sanct_date,lim_exp_date,acid from tbaadm.lht where bank_id=get_param('BANK_ID'))lht ON lht.acid = gam.acid
LEFT JOIN (select DPD_CNTr,acid,PURPOSE_OF_ADVN from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
LEFT JOIN (select repricing_plan,acid from tbaadm.lrp where bank_id=get_param('BANK_ID'))lrp ON lrp.acid = gam.acid
inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = map_acc.leg_acc_num
inner join ompf_cla ON OMPF_LEG_NUM=LEG_ACC_NUM
inner join obpf on obdlp=v5dlp
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join iompf on iompf.ombrnm||trim(iompf.omdlp)||trim(iompf.omdlr)=LEG_ACC_NUM
left join (select lsbrnm,lsdlp,lsdlr,sum(lsamtd - lsamtp) sum_overdue from lspf where lsmvt='P' and (LSAMTD - LSAMTP) <> 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)lspf on lspf.lsbrnm||trim(lspf.lsdlp)||trim(lspf.lsdlr)=leg_acc_num
left join cla_operacc oper on oper.ompf_leg_num=MAP_ACC.leg_acc_num
left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on gam_oper.acid=lam.OP_ACID
left join demand_count dmd_cnt on  dmd_cnt.lsbrnm||trim(dmd_cnt.lsdlp)||trim(dmd_cnt.lsdlr)=leg_acc_num
inner join c8pf on c8ccy = otccy
left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and lsdte<=1170131 and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
left join cla_account_finacle_int_rate1 c on trim(int_acc_num)=leg_acc_num
left join cla_acct_fin_int_rate_les121 d on trim(d.int_acc_num)=leg_acc_num
left join cla_acct_fin_int_rate_more121 e on trim(e.int_acc_num)=leg_acc_num
left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
left join map_freq on substr(trim(S5IFQD),1,1)=map_freq.code
left join custom_account_name c_name on c_name.fin_acc_num=map_acc.fin_acc_num  
where map_acc.schm_type='CLA' and  v5pf.v5tdt='L' and v5pf.v5bal<>'0'
union
select distinct
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
TO_CHAR(scccy) ||'|'||
to_char(gam.acct_crncy_code) ||'|'||
CASE WHEN TO_CHAR(scccy) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(gam.cif_id) ||'|'||
to_char(map_acc.leg_acc_num) ||'|'||
TO_CHAR(scab||scan||scas) ||'|'||
to_char(gam.foracid) ||'|'|| 
to_char(map_acc.leg_cust_type) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(map_acc.schm_code) ||'|'||
to_char(gsp.SCHM_DESC)||'|'||
to_char(c_name.acct_name) ||'|'||
to_char(gam.ACCT_NAME) ||'|'||
to_char(nvl(nvl(nvl(a.DR_BASE_RATE,0)+a.DR_MARGIN_RATE+a.S5RATD,b.DR_BASE_RATE+b.DR_MARGIN_RATE+a.S5RATD),0)) ||'|'||
to_char(nvl(nvl(nvl(a.BASE_PCNT_DR,0)+a.DR_PREF_RATE+a.DR_NRML_INT_PCNT,nvl(b.BASE_PCNT_DR,0)+b.DR_PREF_RATE+b.DR_NRML_INT_PCNT),0))||'|'||
--a.BASE_PCNT_DR,a.DR_PREF_RATE,a.DR_NRML_INT_PCNT,b.BASE_PCNT_DR,b.DR_PREF_RATE,b.DR_NRML_INT_PCNT||'|'||
case when (to_char(nvl(nvl(nvl(a.DR_BASE_RATE,0)+a.DR_MARGIN_RATE+a.S5RATD,b.DR_BASE_RATE+b.DR_MARGIN_RATE+a.S5RATD),0))) = (to_char(nvl(nvl(nvl(a.BASE_PCNT_DR,0)+a.DR_PREF_RATE+a.DR_NRML_INT_PCNT,nvl(b.BASE_PCNT_DR,0)+b.DR_PREF_RATE+b.DR_NRML_INT_PCNT),0))) then 'TRUE' ELSE 'FALSE' End ||'|'||
to_char(nvl(a.DR_PREF_RATE,nvl(b.DR_PREF_RATE,0)))||'|'||
to_char(nvl(a.BASE_PCNT_DR,nvl(b.BASE_PCNT_DR,0)))||'|'||
to_char(TRIM (lrp.repricing_plan)) ||'|'|| 
to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')          
         else lpad(' ',8,' ')  end)  ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else lpad(' ',8,' ')  end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
to_char(abs(to_number(scbal)/POWER(10,c8pf.C8CED))) ||'|'||
to_char(gam.sanct_lim) ||'|'||
CASE WHEN (abs(to_number(scbal)/POWER(10,c8pf.C8CED)))  = TRIM(gam.sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MM-YYYY')          
         else lpad(' ',8,' ')  end) ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MM-YYYY')          
         else lpad(' ',8,' ')  end)=trim(TO_CHAR(lht.lim_sanct_date,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(SCLED ),'YYYYMMDD'),'DD-MON-YYYY')          
         else lpad(' ',8,' ')  end) ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN (case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(SCLED ),'YYYYMMDD'),'DD-MON-YYYY')          
         else lpad(' ',8,' ')  end) = TO_CHAR (lht.lim_exp_date, 'DD-MON-YYYY') THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(TRIM (itc.int_tbl_code)) ||'|'||
to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
     else 0 end)||'|'||
to_char(TRIM (lam.rep_perd_mths)) ||'|'||
case when (trim(to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
     else 0 end)))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
to_char(abs(to_number(scbal))/POWER(10,c8pf.C8CED))||'|'||
to_char(TRIM (lam.liab_as_on_xfer_eff_date))||'|'||
case when trim(to_char(abs(to_number(scbal))/POWER(10,c8pf.C8CED))) = trim(to_char( (lam.liab_as_on_xfer_eff_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(TRIM (lsp.upfront_instlmnt_coll)) ||'|'||
to_char(lpad(case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' and to_date(get_date_fm_btrv(SCLED),'YYYYMMDD') <  to_date(get_param('EOD_DATE'),'DD-MM-YYYY') then abs(to_number(scbal)/POWER(10,c8pf.C8CED)) else 0 end,17,' '))||'|'||
to_char(TRIM(lam.sum_principal_dmd_amt))||'|'||
case when TRIM(to_char(lpad(case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' and to_date(get_date_fm_btrv(SCLED),'YYYYMMDD') <  to_date(get_param('EOD_DATE'),'DD-MM-YYYY') then abs(to_number(scbal)/POWER(10,c8pf.C8CED)) else 0 end,17,' ')))=(to_char(TRIM(lam.sum_principal_dmd_amt))) then 'TRUE' else 'FALSE' END ||'|'||
to_char(rpad(case when oper_fin_num is not null then  'T' when op_num  is not null then 'T' else 'N' end,1,' ')) ||'|'|| 
to_char(TRIM (lam.dmd_satisfy_mthd)) ||'|'|| 
CASE WHEN (case when trim(oper_fin_num) is not null then  'E' else 'N' end) = TRIM(lam.dmd_satisfy_mthd) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(TRIM (lsp.int_rate_based_on_sanct_lim)) ||'|'|| 
to_char(TRIM (lam.int_rate_based_on_sanct_lim)) ||'|'|| 
CASE WHEN TRIM (lsp.int_rate_based_on_sanct_lim) = TRIM (lam.int_rate_based_on_sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(TRIM(lsp.pi_based_on_outstanding)) ||'|'||
to_char(TRIM(lam.pi_based_on_outstanding)) ||'|'|| 
to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')          
         else lpad(' ',8,' ')  end)||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when (to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')          
         else lpad(' ',8,' ')  end))=(TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(oper_fin_num,1,4))||'|'||
to_char(substr(oper_fin_num,5,6))||'|'||
to_char(substr(oper_fin_num,11,3))||'|'||
to_char(oper.oper_currency) ||'|'||
to_char(oper_fin_num)||'|'||
to_char(gam_oper.foracid)||'|'||
case when nvl(to_char(oper_fin_num),' ') = nvl(to_char(gam_oper.foracid),' ') then 'TRUE' else 'FALSE' end ||'|'||
    to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
     else 0 end)||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when (trim(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
     else 0 end))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then 
          to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD') ))) end
else 0 end)||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then 
          to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD') ))) end
else 0 end) =to_char(lam.rep_perd_days) then 'TRUE' else 'FALSE' end||'|'||
TO_CHAR(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
CASE WHEN nvl(trim(TO_CHAR(SCC2R)),' ') = nvl(TO_CHAR(GAC.PURPOSE_OF_ADVN),' ') THEN 'TRUE' ELSE 'FALSE' END||'|'||
 LDT.DMD_AMT1||'|'||
(ls.sp/c8pwd)||'|'||
case when to_number(nvl(LDT.DMD_AMT1,0)) = nvl(to_number(ls.sp/c8pwd),0) then 'TRUE' else 'FALSE' end||'|'||
gac.DPD_CNTr||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170206','YYYYMMDD')) else 0 end||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170206','YYYYMMDD')) else 0 end),0) = nvl(to_number(gac.DPD_CNTr),0) then 'TRUE' else 'FALSE' end||'|'||
TO_char(scaco)||'|'||
S5IFQD||'|'||
to_char(eit.INT_FREQ_TYPE_DR)||'|'||
to_char(map_freq.value)
from map_acc map_acc 
inner join scpf on scab||scan||scas=leg_branch_id||leg_scan||leg_scas
left join (select a.fin_acc_num main_num,b.fin_acc_num op_num,b.currency op_ccy,b.fin_sol_id op_sol from ubpf 
inner join map_acc a on ubab||uban||ubas =a.leg_branch_id||a.leg_Scan||a.leg_Scas
inner join map_acc b on ubnab||ubnan||ubnas =b.leg_branch_id||b.leg_Scan||b.leg_Scas
where a.schm_code='LAC')op on op.main_num=map_acc.fin_acc_num
left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
left join tbaadm.lsp lsp on lsp.schm_code = map_acc.schm_code and map_acc.currency=lsp.crncy_code and lsp.del_flg <> 'Y' and lsp.bank_id=get_param('BANK_ID')
left join tbaadm.gsp gsp on gsp.schm_code = map_acc.schm_code and gsp.del_flg <> 'Y' and gsp.bank_id=get_param('BANK_ID')
left join tbaadm.gss gss on gss.schm_code = map_acc.schm_code and gss.del_flg <> 'Y' and   gss.DEFAULT_FLG ='Y' and gss.bank_id=get_param('BANK_ID')
LEFT JOIN (select sanct_lim,foracid,acid,acct_opn_date,ACCT_NAME,cif_id,sol_id,acct_crncy_code from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
INNER JOIN (select * from tbaadm.lam where bank_id=get_param('BANK_ID'))lam ON lam.acid = gam.acid
LEFT JOIN (select itc1.* from tbaadm.itc itc1 
 inner join
(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid
LEFT JOIN (select * from tbaadm.lht where bank_id=get_param('BANK_ID'))lht ON lht.acid = gam.acid
left join (select distinct trim(LAC_ACC_NO) LAC_ACC_NO,map_acc.fin_acc_num,trim(BILLING_ACCOUNT) BILLING_ACCOUNT,oper.fin_acc_num oper_fin_num,oper.fin_sol_id oper_fin_sol,oper.currency oper_currency from map_acc 
inner join lac_operative_account a on lac_acc_no=fin_acc_num inner  join map_acc oper on billing_account=oper.fin_acc_num where map_acc.schm_code in ('LAC','CLM')) oper on oper.fin_acc_num=map_acc.fin_acc_num
--left join (select distinct trim(LAC_ACC_NO) LAC_ACC_NO,map_acc.fin_acc_num,trim(BILLING_ACCOUNT) BILLING_ACCOUNT,oper.fin_acc_num oper_fin_num,oper.fin_sol_id oper_fin_sol,oper.currency oper_currency from map_acc 
--inner join lac_operative_account a on lac_acc_no=fin_acc_num inner  join map_acc oper on billing_account=oper.fin_acc_num where map_acc.schm_code in ('LAC','CLM')) oper on oper.fin_acc_num=map_acc.fin_acc_num
LEFT JOIN (select * from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
LEFT JOIN (select * from tbaadm.lrp where bank_id=get_param('BANK_ID'))lrp ON lrp.acid = gam.acid
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join tbaadm.lsp on tbaadm.lsp.schm_code = map_acc.schm_code and map_acc.currency=lsp.crncy_code and lsp.del_flg <> 'Y' and lsp.bank_id=get_param('BANK_ID')
left join tbaadm.gsp on tbaadm.gsp.schm_code = map_acc.schm_code and gsp.del_flg <> 'Y' and gsp.bank_id=get_param('BANK_ID')
left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on gam_oper.acid=lam.OP_ACID
left join tbaadm.gss on tbaadm.gss.schm_code = map_acc.schm_code and gss.del_flg <> 'Y' and   gss.DEFAULT_FLG ='Y' and gss.bank_id=get_param('BANK_ID')
left join (select lsbrnm,lsdlp,lsdlr,sum(lsamtd - lsamtp) sum_overdue from lspf where lsmvt='P' and (LSAMTD - LSAMTP) <> 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)lspf on lspf.lsbrnm||trim(lspf.lsdlp)||trim(lspf.lsdlr)=leg_acc_num
left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and lsdte<=1170131 and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
left join cla_lac_fin_int_rate_more121 a on  a.s5ab||a.s5an||a.s5as=leg_branch_id||leg_scan||leg_scas
left join cla_lac_fin_int_rate_les121 b on  b.s5ab||b.s5an||b.s5as=leg_branch_id||leg_scan||leg_scas
inner join c8pf on c8ccy = currency
left join (select * from map_cif where del_flg<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
left join gfpf gf on trim(gf.gfclc)=trim(map_cif.gfclc) and  trim(gf.gfcus)=trim(map_cif.gfcus)  and gf.gfcpnc=MAP_CIF.GFCPNC 
left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
left join map_freq on substr(trim(S5IFQD),1,1)=map_freq.code
left join custom_account_name c_name on c_name.fin_acc_num=map_acc.fin_acc_num
where map_acc.schm_type='CLA'  and map_acc.schm_code in ('LAC','CLM')
and scbal <> 0;
--Select    
--'LEG_BRCH_ID'||'|'||
--'LEG_CLIENT_NO'||'|'||
--'LEG_SUFFIX'||'|'||
--'LEG_CCY'||'|'||
--'FINACLE_CCY'||'|'||
--'CCY_MATCH'||'|'||
--'FINACLE_SOL_ID'||'|'||
--'FINACLE_CIF_ID'||'|'||
--'LEG_CONTRACT'||'|'||
--'LEG_DEAL_REF_NUMBER' ||'|'||
--'FINACLE_ACCT_NUM'||'|'||
--'LEG_CUST_TYPE'||'|'||
--'LEG_ACCT_TYPE'||'|'||
--'FINACLE_SCHEME_CODE'||'|'||
--'SCHEME_DESCRIPTION'||'|'||
--'LEGACY_CUST_NAME' ||'|'||
--'FINACLE_CUST_NAME' ||'|'||
--'LEGACY_NET_RATE'||'|'||
--'FINACLE_NET_RATE'||'|'||
--'NET_RATE_MATCH'||'|'||
--'FINACLE_DEBIT_PREF_PERCENT'||'|'||
--'BASE_DEBIT_PERCENT'||'|'||
--'FINACLE_REPRICING_PLAN'||'|'||
--'LEG_ACCT_OPN_DATE'||'|'||
--'FINACLE_ACCT_OPN_DATE'||'|'||
--'ACCT_OPN_DATE_MATCH'||'|'||
--'LEG_SANCTION_LIMIT'||'|'||
--'FINACLE_SANCTION_LIMIT'||'|'||
--'SANCTION_LIMIT_MATCH'||'|'||
--'LEG_LIMIT_SANCTION_DATE'||'|'||
--'FINACLE_LIMIT_SANCTION_DATE'||'|'||
--'LIMIT_SANCTION_DATE_MATCH'||'|'||
--'LEG_LIMIT_EXPIRY_DATE'||'|'||
--'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
--'LIMIT_EXPIRY_DATE_MATCH'||'|'||
--'FINACLE_INT_TBL_CODE'||'|'||
--'LEG_REPY_PRD_IN_MONS'||'|'||
--'FINACLE_REPY_PRD_IN_MON'||'|'||
--'REPY_PRD_IN_MON_MATCH'||'|'||
--'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
--'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
--'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
----'LEG_UPFRONT_INSTALLMENT_COLL'||'|'||
--'FINACLE_UPFRONT_INSTALLMENT_COLL'||'|'||
----'UPFRONT_INSTLMNT_COLL_MATCH'||'|'||
--'LEG_SUM_OF_THE_PRINC_DMD_AMT'||'|'||
--'FINACLE_SUM_OF_THE_PRN_DMD_AMT'||'|'||
--'SUM_OF_THE_PRN_DMD_AMT_MATCH'||'|'||
--'LEG_DMD_SATISFY_MTHD'||'|'||
--'FINACLE_DMD_SATISFY_MTHD'||'|'||
--'DMD_SATISFY_MTHD_MATCH'||'|'||
--'LEG_INT_RATE_ON_SANC_LMT'||'|'||
--'FINACLE_INT_RATE_ON_SANC_LMT'||'|'||
--'INT_RATE_ON_SANC_LMT_MATCH'||'|'||
--'LEG_PI_BASED_ON_OUTSTANDING'||'|'||
--'FIN_PI_BASED_ON_OUTSTANDING'||'|'||
--'LEG_REPAY_SCHEDULE_DATE'||'|'||
--'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
--'REPAY_SCHEDULE_DATE_MATCH'||'|'||
--'LEG_OPERATIVE_BRANCH'||'|'||
--'LEG_OPERATIVE_CLIENT_NO'||'|'||
--'LEG_OPERATIVE_ORDINAL'||'|'||
--'LEG_OPERATIVE_CCY'||'|'||
--'LEG_OPERATIVE_ACC'||'|'||
--'FIN_OPERATIVE_ACC'||'|'||
--'OPERATIVE_ACC_MATCH'||'|'||
--'LEG_TENOR_IN_MONTHS'||'|'||
--'FINACLE_TENOR_IN_MONTHS'||'|'||
--'TENOR_IN_MONTHS_MATCH'||'|'||
--'LEG_TENOR_IN_DAYS'||'|'||
--'FINACLE_TENOR_IN_DAYS'||'|'||
--'TENOR_IN_DAYS_MATCH'||'|'||
--'LEG_PURPOSE_OF_LOAN'||'|'||
--'FIN_PURPOSE_OF_LOAN'||'|'||
--'PURPOSE_OF_LOAN_MATCH'||'|'||
--'FIN_DUE_AMT'||'|'||
--'LEG_DUE_AMT'||'|'||
--'DUE_AMT_MATCH'||'|'||
--'FIN_DUE_DAYS'||'|'||
--'FIN_DUE_DAYS'||'|'||
--'DUE_DAYS_MATCH'||'|'||
--'MANAGER'||'|'||
--'LEG_INT_FREQ'||'|'||
--'FIN_INT_FREQ'||'|'||
--'FREQ_DESC' 
--from dual
--union all
--select distinct
--to_char(map_acc.leg_branch_id) ||'|'||
--to_char(map_acc.leg_scan) ||'|'||
--to_char(map_acc.LEG_SCAS) ||'|'||
--TO_CHAR(otccy) ||'|'||
--to_char(gam.acct_crncy_code) ||'|'||
--CASE WHEN TO_CHAR(otccy) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(gam.sol_id) ||'|'||
--to_char(gam.cif_id) ||'|'||
--to_char(map_acc.leg_acc_num) ||'|'||
--TO_CHAR(V5PF.V5DLR) ||'|'||
--to_char(gam.foracid) ||'|'|| 
--to_char(map_acc.leg_cust_type) ||'|'||
--to_char(map_acc.leg_acct_type) ||'|'|| 
--to_char(map_acc.schm_code) ||'|'||
--to_char(gsp.SCHM_DESC)||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
--to_char(nvl(nvl(c.ACC_PREF_RATE,nvl(e.ACC_PREF_RATE,d.ACC_PREF_RATE )),0))||'|'||
--to_char(nvl((c.BASE_PCNT_DR+c.ACTUAL_PREF_RATE),nvl(e.BASE_PCNT_DR+e.ACTUAL_PREF_RATE+e.DR_NRML_INT_PCNT,d.BASE_PCNT_DR+d.ACTUAL_PREF_RATE+d.DR_NRML_INT_PCNT )))||'|'||
--case when (to_number(nvl(c.ACC_PREF_RATE,nvl(e.ACC_PREF_RATE,d.ACC_PREF_RATE )))) = (to_number(nvl((c.BASE_PCNT_DR+c.ACTUAL_PREF_RATE),nvl(e.BASE_PCNT_DR+e.ACTUAL_PREF_RATE+e.DR_NRML_INT_PCNT,d.BASE_PCNT_DR+d.ACTUAL_PREF_RATE+d.DR_NRML_INT_PCNT )))) then 'TRUE' ELSE 'FALSE' End||'|'||
--to_char(nvl(c.ACTUAL_PREF_RATE,nvl(e.ACTUAL_PREF_RATE,d.ACTUAL_PREF_RATE )))||'|'||
--to_char(nvl((c.BASE_PCNT_DR),nvl((d.BASE_PCNT_DR),(e.BASE_PCNT_DR))))||'|'||
--to_char(TRIM (lrp.repricing_plan)) ||'|'|| 
--to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
--            else ' ' end)  ||'|'||
--TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
--case when  to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
--            else ' ' end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
--to_char(case when obcrcl='Y' then lpad(abs(ompf_cla.omnwp/POWER(10,c8pf.C8CED)-nvl(iomnwr,0)/POWER(10,c8pf.C8CED)),17,' ')
--    else lpad(abs(to_number(ompf_cla.omnwp/POWER(10,c8pf.C8CED))),17,' ') end)||'|'||
--to_char(gam.sanct_lim) ||'|'||
--CASE WHEN (case when obcrcl='Y' then ompf_cla.omnwp/POWER(10,c8pf.C8CED)-nvl(iomnwr,0)/POWER(10,c8pf.C8CED)
--    else to_number(ompf_cla.omnwp/POWER(10,c8pf.C8CED)) end)  = TRIM(gam.sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')
--else ' ' end,10,' ')) ||'|'||
--TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
--case when trim(to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')
--else ' ' end,10,' ')))=trim(TO_CHAR(lht.lim_sanct_date,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(rpad(case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')
--     else '' end,11,' ')) ||'|'||
--TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
--CASE WHEN (rpad(case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')
--     else '' end,11,' ')) = TO_CHAR (lht.lim_exp_date, 'DD-MON-YYYY') THEN 'TRUE' ELSE 'FALSE' END ||'|'||
----to_char(cla_account_finacle_int_rate.INT_TBL_CODE) ||'|'||
--to_char(TRIM (itc.int_tbl_code)) ||'|'||
--to_char(rpad(
--     --case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
--     --else 0 end
--     ,3,' '))||'|'||
--to_char(TRIM (lam.rep_perd_mths)) ||'|'||
--case when (trim(to_char(
--     --case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
--     --else 0 end
--     )))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(rpad(to_number(otdla)/POWER(10,c8pf.C8CED),17,' '))||'|'||
--to_char(TRIM (lam.liab_as_on_xfer_eff_date))||'|'||
--case when trim(to_char(rpad(to_number(otdla)/POWER(10,c8pf.C8CED),17,' '))) = trim(to_char( (lam.liab_as_on_xfer_eff_date))) then 'TRUE' else 'FALSE' end||'|'||
--to_char(TRIM (lsp.upfront_instlmnt_coll)) ||'|'||
--to_char(lpad(abs(to_number(nvl(sum_overdue,0)))/POWER(10,c8pf.C8CED),17,' '))||'|'||
--to_char(TRIM(lam.sum_principal_dmd_amt))||'|'||
--case when TRIM(to_char(lpad(abs(to_number(nvl(sum_overdue,0)))/POWER(10,c8pf.C8CED),17,' ')))=(to_char(TRIM(lam.sum_principal_dmd_amt))) then 'TRUE' else 'FALSE' END ||'|'||
--to_char(TRIM (rpad(case when trim(oper.fin_acc_num) is not null then  'E' else 'N' end,1,' '))) ||'|'|| 
--to_char(TRIM (lam.dmd_satisfy_mthd)) ||'|'|| 
--CASE WHEN TRIM(case when trim(oper.fin_acc_num) is not null then  'E' else 'N' end) = TRIM(lam.dmd_satisfy_mthd) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(TRIM (lsp.int_rate_based_on_sanct_lim)) ||'|'|| 
--to_char(TRIM (lam.int_rate_based_on_sanct_lim)) ||'|'|| 
--CASE WHEN TRIM (lsp.int_rate_based_on_sanct_lim) = TRIM (lam.int_rate_based_on_sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(TRIM(lsp.pi_based_on_outstanding)) ||'|'||
--to_char(TRIM(lam.pi_based_on_outstanding)) ||'|'|| 
--to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end,11,' '))||'|'||
--TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
--case when (to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end,11,' ')))=(TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(substr(oper.oper_leg_acc,1,4))||'|'||
--to_char(substr(oper.oper_leg_acc,5,6))||'|'||
--to_char(substr(oper.oper_leg_acc,11,3))||'|'||
--to_char(oper.currency) ||'|'||
--to_char(oper.fin_acc_num)||'|'||
--to_char(gam_oper.foracid)||'|'||
--case when nvl(to_char(oper.fin_acc_num),' ') = nvl(to_char(gam_oper.foracid),' ') then 'TRUE' else 'FALSE' end ||'|'||
--to_char(rpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
--     --else 0 end
--     ,3,' '))||'|'||
--to_char(lam.rep_perd_mths) ||'|'|| 
--case when (trim(to_char(rpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
--     --else 0 end
--     ,3,' '))))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(lpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
--case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
--          to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
--     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
----else 0 end
--,3,' '))||'|'||
--to_char(lam.rep_perd_days) ||'|'||
--case when to_char( 
--case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
--          to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
--     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
--) =to_char(lam.rep_perd_days) then 'TRUE' else 'FALSE' end||'|'||
--TO_CHAR(SCC2R)||'|'||
--TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
--CASE WHEN nvl(trim(TO_CHAR(SCC2R)),' ') = nvl(TO_CHAR(GAC.PURPOSE_OF_ADVN),' ') THEN 'TRUE' ELSE 'FALSE' END||'|'||
-- LDT.DMD_AMT1||'|'||
--(ls.sp/c8pwd)||'|'||
--case when to_number(nvl(LDT.DMD_AMT1,0)) = nvl(to_number(ls.sp/c8pwd),0) then 'TRUE' else 'FALSE' end||'|'||
--gac.DPD_CNTr||'|'||
--case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170206','YYYYMMDD')) else 0 end||'|'||
--case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170206','YYYYMMDD')) else 0 end),0) = nvl(to_number(gac.DPD_CNTr),0) then 'TRUE' else 'FALSE' end||'|'||
--to_char(SCACO)||'|'||
--S5IFQD||'|'||
--to_char(eit.INT_FREQ_TYPE_DR)||'|'||
--to_char(map_freq.value)
--from map_acc map_acc
--inner join v5pf on trim(v5brnm)||trim(v5dlp)||trim(v5dlr) = map_acc.leg_acc_num
--left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
--left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--LEFT JOIN (select sanct_lim,foracid,acid,acct_opn_date,ACCT_NAME,cif_id,sol_id,acct_crncy_code from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
--INNER JOIN (select * from tbaadm.lam where bank_id=get_param('BANK_ID'))lam ON lam.acid = gam.acid
--left join (select upfront_instlmnt_coll,schm_code,crncy_code,del_flg,pi_based_on_outstanding,int_rate_based_on_sanct_lim from tbaadm.lsp where bank_id=get_param('BANK_ID'))lsp on lsp.schm_code = map_acc.schm_code and map_acc.currency=lsp.crncy_code and lsp.del_flg <> 'Y' 
--left join (select schm_code,del_flg,SCHM_DESC from tbaadm.gsp where bank_id=get_param('BANK_ID'))gsp on gsp.schm_code = map_acc.schm_code and gsp.del_flg <> 'Y' 
--left join (select schm_code,del_flg from tbaadm.gss where bank_id=get_param('BANK_ID'))gss on gss.schm_code = map_acc.schm_code and gss.del_flg <> 'Y' 
--LEFT JOIN (select itc1.* from tbaadm.itc itc1  inner join
--(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
--where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid
--LEFT JOIN (select lim_sanct_date,lim_exp_date,acid from tbaadm.lht where bank_id=get_param('BANK_ID'))lht ON lht.acid = gam.acid
--LEFT JOIN (select DPD_CNTr,acid,PURPOSE_OF_ADVN from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--LEFT JOIN (select repricing_plan,acid from tbaadm.lrp where bank_id=get_param('BANK_ID'))lrp ON lrp.acid = gam.acid
--inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = map_acc.leg_acc_num
--inner join ompf_cla ON OMPF_LEG_NUM=LEG_ACC_NUM
--inner join obpf on obdlp=v5dlp
--left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
--left join iompf on iompf.ombrnm||trim(iompf.omdlp)||trim(iompf.omdlr)=LEG_ACC_NUM
--left join (select lsbrnm,lsdlp,lsdlr,sum(lsamtd - lsamtp) sum_overdue from lspf where lsmvt='P' and (LSAMTD - LSAMTP) <> 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)lspf on lspf.lsbrnm||trim(lspf.lsdlp)||trim(lspf.lsdlr)=leg_acc_num
--left join cla_operacc oper on  trim(oper.ompf_leg_num)=trim(MAP_ACC.leg_acc_num)
--left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on gam_oper.acid=lam.OP_ACID
--left join demand_count dmd_cnt on  dmd_cnt.lsbrnm||trim(dmd_cnt.lsdlp)||trim(dmd_cnt.lsdlr)=leg_acc_num
--inner join c8pf on c8ccy = otccy
--left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and lsdte<=1170131 and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
--left join cla_account_finacle_int_rate c on trim(int_acc_num)=leg_acc_num
--left join cla_acct_fin_int_rate_les12 d on trim(d.int_acc_num)=leg_acc_num
--left join cla_acct_fin_int_rate_more12 e on trim(e.int_acc_num)=leg_acc_num
--left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--left join map_freq on substr(trim(S5IFQD),1,1)=map_freq.code
--where map_acc.schm_type='CLA' and  v5pf.v5tdt='L' and v5pf.v5bal<>'0'
--union all
--select distinct
--to_char(map_acc.leg_branch_id) ||'|'||
--to_char(map_acc.leg_scan) ||'|'||
--to_char(map_acc.LEG_SCAS) ||'|'||
--TO_CHAR(scccy) ||'|'||
--to_char(gam.acct_crncy_code) ||'|'||
--CASE WHEN TO_CHAR(scccy) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(gam.sol_id) ||'|'||
--to_char(gam.cif_id) ||'|'||
--to_char(map_acc.leg_acc_num) ||'|'||
--TO_CHAR(scab||scan||scas) ||'|'||
--to_char(gam.foracid) ||'|'|| 
--to_char(map_acc.leg_cust_type) ||'|'||
--to_char(map_acc.leg_acct_type) ||'|'|| 
--to_char(map_acc.schm_code) ||'|'||
--to_char(gsp.SCHM_DESC)||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
--to_char(nvl(nvl(a.DR_BASE_RATE+a.DR_MARGIN_RATE,b.DR_BASE_RATE+b.DR_MARGIN_RATE),0))||'|'||
--to_char(nvl(nvl(a.BASE_PCNT_DR+a.DR_PREF_RATE+a.DR_NRML_INT_PCNT,b.BASE_PCNT_DR+b.DR_PREF_RATE+b.DR_NRML_INT_PCNT),0))||'|'||
--case when (to_char(nvl(nvl(a.DR_BASE_RATE+a.DR_MARGIN_RATE,b.DR_BASE_RATE+b.DR_MARGIN_RATE),0))) = (to_char(nvl(nvl(a.BASE_PCNT_DR+a.DR_PREF_RATE+a.DR_NRML_INT_PCNT,b.BASE_PCNT_DR+b.DR_PREF_RATE+b.DR_NRML_INT_PCNT),0))) then 'TRUE' ELSE 'FALSE' End||'|'||
--to_char(nvl(a.DR_PREF_RATE,b.DR_PREF_RATE))||'|'||
--to_char(nvl(a.BASE_PCNT_DR,b.BASE_PCNT_DR))||'|'||
--to_char(TRIM (lrp.repricing_plan)) ||'|'|| 
--to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')          
--         else lpad(' ',8,' ')  end)  ||'|'||
--TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
--case when  to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
--         else lpad(' ',8,' ')  end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
--to_char(abs(to_number(scbal)/POWER(10,c8pf.C8CED))) ||'|'||
--to_char(gam.sanct_lim) ||'|'||
--CASE WHEN (abs(to_number(scbal)/POWER(10,c8pf.C8CED)))  = TRIM(gam.sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MM-YYYY')          
--         else lpad(' ',8,' ')  end) ||'|'||
--TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
--case when trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MM-YYYY')          
--         else lpad(' ',8,' ')  end)=trim(TO_CHAR(lht.lim_sanct_date,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(SCLED ),'YYYYMMDD'),'DD-MON-YYYY')          
--         else lpad(' ',8,' ')  end) ||'|'||
--TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
--CASE WHEN (case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(SCLED ),'YYYYMMDD'),'DD-MON-YYYY')          
--         else lpad(' ',8,' ')  end) = TO_CHAR (lht.lim_exp_date, 'DD-MON-YYYY') THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(TRIM (itc.int_tbl_code)) ||'|'||
--to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
--     else 0 end)||'|'||
--to_char(TRIM (lam.rep_perd_mths)) ||'|'||
--case when (trim(to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
--     else 0 end)))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(abs(to_number(scbal))/POWER(10,c8pf.C8CED))||'|'||
--to_char(TRIM (lam.liab_as_on_xfer_eff_date))||'|'||
--case when trim(to_char(abs(to_number(scbal))/POWER(10,c8pf.C8CED))) = trim(to_char( (lam.liab_as_on_xfer_eff_date))) then 'TRUE' else 'FALSE' end||'|'||
--to_char(TRIM (lsp.upfront_instlmnt_coll)) ||'|'||
--to_char(lpad(case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' and to_date(get_date_fm_btrv(SCLED),'YYYYMMDD') <  to_date(get_param('EOD_DATE'),'DD-MM-YYYY') then abs(to_number(scbal)/POWER(10,c8pf.C8CED)) else 0 end,17,' '))||'|'||
--to_char(TRIM(lam.sum_principal_dmd_amt))||'|'||
--case when TRIM(to_char(lpad(case when SCLED <>0 and get_date_fm_btrv(SCLED)<> 'ERROR' and to_date(get_date_fm_btrv(SCLED),'YYYYMMDD') <  to_date(get_param('EOD_DATE'),'DD-MM-YYYY') then abs(to_number(scbal)/POWER(10,c8pf.C8CED)) else 0 end,17,' ')))=(to_char(TRIM(lam.sum_principal_dmd_amt))) then 'TRUE' else 'FALSE' END ||'|'||
--to_char(rpad(case when trim(oper_fin_num) is not null then  'E' else 'N' end,1,' ')) ||'|'|| 
--to_char(TRIM (lam.dmd_satisfy_mthd)) ||'|'|| 
--CASE WHEN (case when trim(oper_fin_num) is not null then  'E' else 'N' end) = TRIM(lam.dmd_satisfy_mthd) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(TRIM (lsp.int_rate_based_on_sanct_lim)) ||'|'|| 
--to_char(TRIM (lam.int_rate_based_on_sanct_lim)) ||'|'|| 
--CASE WHEN TRIM (lsp.int_rate_based_on_sanct_lim) = TRIM (lam.int_rate_based_on_sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(TRIM(lsp.pi_based_on_outstanding)) ||'|'||
--to_char(TRIM(lam.pi_based_on_outstanding)) ||'|'|| 
--to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')          
--         else lpad(' ',8,' ')  end)||'|'||
--TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
--case when (to_char(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')          
--         else lpad(' ',8,' ')  end))=(TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(substr(oper_fin_num,1,4))||'|'||
--to_char(substr(oper_fin_num,5,6))||'|'||
--to_char(substr(oper_fin_num,11,3))||'|'||
--to_char(oper.oper_currency) ||'|'||
--to_char(oper_fin_num)||'|'||
--to_char(gam_oper.foracid)||'|'||
--case when nvl(to_char(oper_fin_num),' ') = nvl(to_char(gam_oper.foracid),' ') then 'TRUE' else 'FALSE' end ||'|'||
--    to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
--     else 0 end)||'|'||
--to_char(lam.rep_perd_mths) ||'|'|| 
--case when (trim(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(scled),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD'))) end
--     else 0 end))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
--case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then 
--          to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1 ))) 
--     else to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD') ))) end
--else 0 end)||'|'||
--to_char(lam.rep_perd_days) ||'|'||
--case when to_char(case when scoad<>'0' and get_date_fm_btrv(scoad) <> 'ERROR' and scled<>'0' and get_date_fm_btrv(scled) <> 'ERROR' and scled <> '9999999' then 
--case when last_day(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')) = to_date(get_date_fm_btrv(scoad),'YYYYMMDD') then 
--          to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')-1,to_date(get_date_fm_btrv(scoad),'YYYYMMDD')-1 ))) 
--     else to_date(get_date_fm_btrv(SCLED),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(SCLED),'YYYYMMDD'),to_date(get_date_fm_btrv(scoad),'YYYYMMDD') ))) end
--else 0 end) =to_char(lam.rep_perd_days) then 'TRUE' else 'FALSE' end||'|'||
--TO_CHAR(SCC2R)||'|'||
--TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
--CASE WHEN nvl(trim(TO_CHAR(SCC2R)),' ') = nvl(TO_CHAR(GAC.PURPOSE_OF_ADVN),' ') THEN 'TRUE' ELSE 'FALSE' END||'|'||
-- LDT.DMD_AMT1||'|'||
--(ls.sp/c8pwd)||'|'||
--case when to_number(nvl(LDT.DMD_AMT1,0)) = nvl(to_number(ls.sp/c8pwd),0) then 'TRUE' else 'FALSE' end||'|'||
--gac.DPD_CNTr||'|'||
--case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170206','YYYYMMDD')) else 0 end||'|'||
--case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date('20170206','YYYYMMDD')) else 0 end),0) = nvl(to_number(gac.DPD_CNTr),0) then 'TRUE' else 'FALSE' end||'|'||
--TO_char(scaco)||'|'||
--S5IFQD||'|'||
--to_char(eit.INT_FREQ_TYPE_DR)||'|'||
--to_char(map_freq.value)
--from map_acc map_acc 
--inner join scpf on scab||scan||scas=leg_branch_id||leg_scan||leg_scas
--left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--left join tbaadm.lsp lsp on lsp.schm_code = map_acc.schm_code and map_acc.currency=lsp.crncy_code and lsp.del_flg <> 'Y' and lsp.bank_id=get_param('BANK_ID')
--left join tbaadm.gsp gsp on gsp.schm_code = map_acc.schm_code and gsp.del_flg <> 'Y' and gsp.bank_id=get_param('BANK_ID')
--left join tbaadm.gss gss on gss.schm_code = map_acc.schm_code and gss.del_flg <> 'Y' and   gss.DEFAULT_FLG ='Y' and gss.bank_id=get_param('BANK_ID')
--LEFT JOIN (select sanct_lim,foracid,acid,acct_opn_date,ACCT_NAME,cif_id,sol_id,acct_crncy_code from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
--INNER JOIN (select * from tbaadm.lam where bank_id=get_param('BANK_ID'))lam ON lam.acid = gam.acid
--LEFT JOIN (select itc1.* from tbaadm.itc itc1 
-- inner join
--(select entity_id,max(LCHG_TIME) LCHG_TIME from tbaadm.itc  group by entity_id)itc2 on itc1.entity_id=itc2.entity_id and itc1.LCHG_TIME=itc2.LCHG_TIME
--where itc1.entity_id in (select acid from tbaadm.gam where schm_type='CLA' and bank_id='01'))itc ON itc.entity_id = gam.acid
--LEFT JOIN (select * from tbaadm.lht where bank_id=get_param('BANK_ID'))lht ON lht.acid = gam.acid
--left join (select distinct trim(LAC_ACC_NO) LAC_ACC_NO,map_acc.fin_acc_num,trim(BILLING_ACCOUNT) BILLING_ACCOUNT,oper.fin_acc_num oper_fin_num,oper.fin_sol_id oper_fin_sol,oper.currency oper_currency from map_acc 
--inner join lac_operative_account a on lac_acc_no=fin_acc_num inner  join map_acc oper on billing_account=oper.fin_acc_num where map_acc.schm_code in ('LAC','CLM')) oper on oper.fin_acc_num=map_acc.fin_acc_num
----left join (select distinct trim(LAC_ACC_NO) LAC_ACC_NO,map_acc.fin_acc_num,trim(BILLING_ACCOUNT) BILLING_ACCOUNT,oper.fin_acc_num oper_fin_num,oper.fin_sol_id oper_fin_sol,oper.currency oper_currency from map_acc 
----inner join lac_operative_account a on lac_acc_no=fin_acc_num inner  join map_acc oper on billing_account=oper.fin_acc_num where map_acc.schm_code in ('LAC','CLM')) oper on oper.fin_acc_num=map_acc.fin_acc_num
--LEFT JOIN (select * from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--LEFT JOIN (select * from tbaadm.lrp where bank_id=get_param('BANK_ID'))lrp ON lrp.acid = gam.acid
--left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
--left join tbaadm.lsp on tbaadm.lsp.schm_code = map_acc.schm_code and map_acc.currency=lsp.crncy_code and lsp.del_flg <> 'Y' and lsp.bank_id=get_param('BANK_ID')
--left join tbaadm.gsp on tbaadm.gsp.schm_code = map_acc.schm_code and gsp.del_flg <> 'Y' and gsp.bank_id=get_param('BANK_ID')
--left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on gam_oper.acid=lam.OP_ACID
--left join tbaadm.gss on tbaadm.gss.schm_code = map_acc.schm_code and gss.del_flg <> 'Y' and   gss.DEFAULT_FLG ='Y' and gss.bank_id=get_param('BANK_ID')
--left join (select lsbrnm,lsdlp,lsdlr,sum(lsamtd - lsamtp) sum_overdue from lspf where lsmvt='P' and (LSAMTD - LSAMTP) <> 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)lspf on lspf.lsbrnm||trim(lspf.lsdlp)||trim(lspf.lsdlr)=leg_acc_num
--left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and lsdte<=1170131 and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
--left join cla_lac_fin_int_rate_more12 a on  a.s5ab||a.s5an||a.s5as=leg_branch_id||leg_scan||leg_scas
--left join cla_lac_fin_int_rate_les12 b on  b.s5ab||b.s5an||b.s5as=leg_branch_id||leg_scan||leg_scas
--inner join c8pf on c8ccy = currency
--left join (select * from map_cif where del_flg<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--left join gfpf gf on trim(gf.gfclc)=trim(map_cif.gfclc) and  trim(gf.gfcus)=trim(map_cif.gfcus)  and gf.gfcpnc=MAP_CIF.GFCPNC 
--left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--left join map_freq on substr(trim(S5IFQD),1,1)=map_freq.code
--where map_acc.schm_type='CLA'  and map_acc.schm_code in ('LAC','CLM')
--and scbal <> 0;
----union all
----select  distinct
----to_char(a.leg_branch_id) ||'|'||
----to_char(a.leg_scan) ||'|'||
----to_char(a.LEG_SCAS) ||'|'||
----TO_CHAR(scccy) ||'|'||
----to_char(gam.acct_crncy_code) ||'|'||
----CASE WHEN TO_CHAR(scccy) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
----to_char(gam.sol_id) ||'|'||
----to_char(gam.cif_id) ||'|'||
----to_char(a.leg_acc_num) ||'|'||
----TO_CHAR(scpf.scab||scpf.scan||scpf.scas) ||'|'||
----to_char(gam.foracid) ||'|'|| 
----to_char(a.leg_cust_type) ||'|'||
----to_char(a.leg_acct_type) ||'|'|| 
----to_char(a.schm_code) ||'|'||
----to_char(gsp.SCHM_DESC)||'|'||
----to_char(gam.ACCT_NAME) ||'|'||
----to_char(gam.ACCT_NAME) ||'|'||
----to_char(nvl((c.ACC_PREF_RATE),nvl((d.ACC_PREF_RATE),(e.ACC_PREF_RATE))))||'|'||
----to_char(nvl((c.ACC_PREF_RATE),nvl((d.ACC_PREF_RATE),(e.ACC_PREF_RATE))))||'|'||
------to_char(itc.MAX_INT_PCNT_DR+ID_DR_PREF_PCNT)||'|'||
----case when (to_number(to_char(nvl((c.ACC_PREF_RATE),nvl((d.ACC_PREF_RATE),(e.ACC_PREF_RATE)))))) = (to_number(nvl((c.ACC_PREF_RATE),nvl((d.ACC_PREF_RATE),(e.ACC_PREF_RATE))))) then 'TRUE' ELSE 'FALSE' End||'|'||
----to_char(nvl((c.ACTUAL_PREF_RATE),nvl((d.ACTUAL_PREF_RATE),(e.ACTUAL_PREF_RATE))))||'|'||
----to_char(nvl((c.BASE_PCNT_DR),nvl((d.BASE_PCNT_DR),(e.BASE_PCNT_DR))))||'|'||
----to_char(TRIM (lrp.repricing_plan)) ||'|'|| 
----to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
----    else ' ' end,11,' '))  ||'|'||
----TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
----case when  to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
----    else ' ' end,11,' '))  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
----to_char(NVL(LCAMTU,0)+abs(to_number(omnwp/POWER(10,c8pf.C8CED)))) ||'|'||
----to_char(gam.sanct_lim) ||'|'||
----CASE WHEN (NVL(LCAMTU,0)+abs(to_number(omnwp/POWER(10,c8pf.C8CED))))  = TRIM(gam.sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
----to_char(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY') 
----    else ' ' end) ||'|'||
----TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
----case when trim(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY') 
----    else ' ' end)=trim(TO_CHAR(lht.lim_sanct_date,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
----to_char(case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')
----     else ' ' end) ||'|'||
----TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
----CASE WHEN (case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')
----     else ' ' end) = TO_CHAR (lht.lim_exp_date, 'DD-MON-YYYY') THEN 'TRUE' ELSE 'FALSE' END ||'|'||
----to_char(TRIM (itc.int_tbl_code)) ||'|'||
----to_char(rpad(
----     --case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
----     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
----     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
----     --else 0 end
----     ,3,' '))||'|'||
----to_char(TRIM (lam.rep_perd_mths)) ||'|'||
----case when (trim(to_char(
----     --case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
----     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
----     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
----     --else 0 end
----     )))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
----to_char(rpad(to_number(otdla)/POWER(10,c8pf.C8CED),17,' '))||'|'||
----to_char(TRIM (lam.liab_as_on_xfer_eff_date))||'|'||
----case when trim(to_char(rpad(to_number(otdla)/POWER(10,c8pf.C8CED),17,' '))) = trim(to_char( (lam.liab_as_on_xfer_eff_date))) then 'TRUE' else 'FALSE' end||'|'||
----to_char(TRIM (lsp.upfront_instlmnt_coll)) ||'|'||
----to_char('0')||'|'||
----to_char(TRIM(lam.sum_principal_dmd_amt))||'|'||
----case when TRIM(to_char('0'))=(to_char(TRIM(lam.sum_principal_dmd_amt))) then 'TRUE' else 'FALSE' END ||'|'||
----to_char(TRIM (rpad(case when oper_num is not null then  'E' else 'N' end,1,' '))) ||'|'|| 
----to_char(TRIM (lam.dmd_satisfy_mthd)) ||'|'|| 
----CASE WHEN TRIM(rpad(case when oper_num is not null then  'E' else 'N' end,1,' ')) = TRIM(lam.dmd_satisfy_mthd) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
----to_char(TRIM (lsp.int_rate_based_on_sanct_lim)) ||'|'|| 
----to_char(TRIM (lam.int_rate_based_on_sanct_lim)) ||'|'|| 
----CASE WHEN TRIM (lsp.int_rate_based_on_sanct_lim) = TRIM (lam.int_rate_based_on_sanct_lim) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
----to_char(TRIM(lsp.pi_based_on_outstanding)) ||'|'||
----to_char(TRIM(lam.pi_based_on_outstanding)) ||'|'|| 
----to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end,11,' '))||'|'||
----TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
----case when (to_char(rpad(case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end,11,' ')))=(TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
----to_char(substr(case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end,1,4))||'|'||
----to_char(substr(case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end,5,6))||'|'||
----to_char(substr(case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end,11,3))||'|'||
----to_char(oper.oper_ccy) ||'|'||
----to_char(case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end)||'|'||
----to_char(gam_oper.foracid)||'|'||
----case when nvl(to_char(case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end),' ') = nvl(to_char(gam_oper.foracid),' ') then 'TRUE' else 'FALSE' end ||'|'||
----to_char(rpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
----     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
----     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
----     --else 0 end
----     ,3,' '))||'|'||
----to_char(lam.rep_perd_mths) ||'|'|| 
----case when (trim(to_char(rpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
----     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
----     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
----     --else 0 end
----     ,3,' '))))=trim((to_char(lam.rep_perd_mths))) then 'TRUE' else 'FALSE' end ||'|'||
----to_char(lpad(--case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
----case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
----          to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
----     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
------else 0 end
----,3,' '))||'|'||
----to_char(lam.rep_perd_days) ||'|'||
----case when to_char( 
----case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
----          to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
----     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
----) =to_char(lam.rep_perd_days) then 'TRUE' else 'FALSE' end||'|'||
----TO_CHAR(SCC2R)||'|'||
----TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
----CASE WHEN nvl(trim(TO_CHAR(SCC2R)),' ') = nvl(TO_CHAR(GAC.PURPOSE_OF_ADVN),' ') THEN 'TRUE' ELSE 'FALSE' END||'|'||
---- LDT.DMD_AMT1||'|'||
----(to_char('0'))||'|'||
----case when to_number(nvl(LDT.DMD_AMT1,0)) = to_char('0') then 'TRUE' else 'FALSE' end||'|'||
----gac.DPD_CNTr||'|'||
----'0'||'|'||
----case when '0' = nvl(to_number(gac.DPD_CNTr),0) then 'TRUE' else 'FALSE' end||'|'||
----to_char(SCACO)||'|'||
----S5IFQD||'|'||
----to_char(eit.INT_FREQ_TYPE_DR)||'|'||
----to_char(map_freq.value)
----from map_acc a
----LEFT JOIN (select sanct_lim,foracid,acid,acct_opn_date,ACCT_NAME,cif_id,sol_id,acct_crncy_code from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = a.fin_acc_num
----LEFT JOIN (select * from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
----LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id = gam.acid
----LEFT JOIN (select * from tbaadm.lht where bank_id=get_param('BANK_ID'))lht ON lht.acid = gam.acid
----LEFT JOIN (select * from tbaadm.lrp where bank_id=get_param('BANK_ID'))lrp ON lrp.acid = gam.acid
----INNER JOIN (select * from tbaadm.lam where bank_id=get_param('BANK_ID'))lam ON lam.acid = gam.acid
----left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on gam_oper.acid=lam.OP_ACID  
----left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
----inner join cla_ld_acct_details b on b.fin_acc_num=a.fin_acc_num
----left join cla_ld_acct_fin_int_rate c on  c.fin_acc_num=a.fin_acc_num
----left join cla_ld_acct_fin_int_rate_les12 d on  d.fin_acc_num=a.fin_acc_num
----left join cla_ld_acct_fin_int_rate_mor12 e on  e.fin_acc_num=a.fin_acc_num
----left join (select * from tbaadm.lsp where lsp.del_flg <> 'Y' and lsp.bank_id=get_param('BANK_ID'))lsp on lsp.schm_code = a.schm_code and a.currency=lsp.crncy_code 
----left join (select * from tbaadm.gsp where gsp.del_flg <> 'Y' and gsp.bank_id=get_param('BANK_ID'))gsp on gsp.schm_code = a.schm_code  
----left join (select * from tbaadm.gss where gss.del_flg <> 'Y' and gss.DEFAULT_FLG ='Y' and gss.bank_id=get_param('BANK_ID'))gss on gss.schm_code = a.schm_code  
----left join (select * from map_cif where del_flg<>'Y' and is_joint <> 'Y') map_cif on map_cif.FIN_CIF_ID=a.FIN_CIF_ID
----left join gfpf gf on trim(gf.gfclc)=trim(map_cif.gfclc) and  trim(gf.gfcus)=trim(map_cif.gfcus)  and gf.gfcpnc=MAP_CIF.GFCPNC and trim(GFC2R) is not null
----inner join c8pf on c8ccy = currency
----left join scpf on scab||scan||scas=leg_branch_id||leg_scan||leg_scas
----left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
----left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
----left join (select a.fin_acc_num,oper_num,oper.fin_sol_id oper_sol_id,oper.currency oper_ccy from (
----select distinct  c.fin_acc_num ,max(b.fin_acc_num) oper_num from map_acc c
----inner join ld_deal_int_wise a on leg_branch_id||leg_scan||leg_scas=scab||scan||scas and c.leg_acc_num=to_char(serial_deal)
----inner join ompf a on ombrnm||trim(omdlp)||trim(omdlr)=a.leg_acc_num
----inner join map_acc b on  b.leg_branch_id||b.leg_scan||b.leg_scas=omabf||trim(omanf)||trim(omasf)
----where --c.schm_code='LD' and --commented on 14-06-2017 for CLA changes
----b.schm_type in ('SBA','CAA','ODA') group by c.fin_acc_num)a inner join map_acc oper on oper.fin_acc_num=a.fin_acc_num)oper on oper.fin_acc_num=a.fin_acc_num
----left join repricing_plan_map f on f.schm_code=a.schm_code
----left join ompf_ld_cla1 g on g.fin_acc_num=a.fin_acc_num 
----left join owpf_ld_cla h on leg_acc=a.fin_acc_num
----LEFT JOIN (select fin_num,sum(lcamtu) lcamtu from (
----select distinct C.fin_acc_num FIN_NUM,(lcamtu/power(10,c8ced))lcamtu,lccmr from map_acc c
----inner join ld_deal_int_wise a on leg_branch_id||leg_scan||leg_scas=scab||scan||scas and c.leg_acc_num=to_char(serial_deal)
----inner join ldpf on ldbrnm||trim(lddlp)||trim(lddlr)=a.leg_acc_num
----inner join lcpf on lccmr=ldcmr
----inner join C8PF ON C8CCY=CURRENCY)
----GROUP BY fin_num)PEND_COMMIT_AMT ON  PEND_COMMIT_AMT.FIN_NUM=A.FIN_ACC_NUM
----left join jgpf on jgbrnm||trim(jgdlp)||trim(jgdlr) = a.leg_acc_num
----left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
----left join map_freq on substr(trim(S5IFQD),1,1)=map_freq.code;
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
corp_lein.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
corp_lein.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/corp_lein.dat
select
'LIEN_TYPE' ||'|'||
'LEG_BRANCH_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_ACCOUNT_TYPE'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CUST_TYPE'||'|'||
'FINACLE_ACC_NUM'||'|'||
'LEG_LIEN_AMT'||'|'||
'FINACLE_LIEN_AMT'||'|'||
'FINACLE_FUTURE_LIEN_AMT'||'|'||
'LIEN_AMT_MATCH'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'LEG_START_DATE'||'|'||
'FINACLE_START_DATE'||'|'||
'START_DATE_MATCH'||'|'||
'LEG_EXP_DATE'||'|'||
'FINACLE_LIEN_EXP_DATE'||'|'||
'LEG_REQUESTED_BY_DESC' ||'|'||
'FINACLE_REQUESTED_BY_DESC' ||'|'||
'REQUESTED_BY_DESC_MATCH' ||'|'||
'LEG_LIEN_REMARK'||'|'||
'FINACLE_LIEN_REMARK'||'|'||
'LIEN_REMARK_MATCH'||'|'||
'LEG_REQUEST_DEPT' ||'|'||
'FINACLE_REQUEST_DEPT' ||'|'||
'REQUEST_DEPT_MATCH' ||'|'||
'LEG_CONTACT_NUM' ||'|'||
'FINACLE_CONTACT_NUM' ||'|'||
'CONTACT_NUM_MATCH' ||'|'||
'SCHEME_TYPE'||'|'||
'SCHEME_CODE'
from dual
union all
select
to_char('ULIEN') ||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char(map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.LEG_ACCT_TYPE) ||'|'||
to_char(map_acc.FIN_SOL_ID) ||'|'||
to_char(map_acc.FIN_CIF_ID) ||'|'||
to_char(map_acc.LEG_CUST_TYPE) ||'|'||
to_char(FIN_ACC_NUM) ||'|'||
trim(to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))) ||'|'||
to_char(alt.LIEN_AMT) ||'|'||
to_char(alt.FUTURE_ULIEN_AMT) ||'|'||
to_char(case when trim((to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.ACCT_CRNCY_CODE)||'|'||
to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end)||'|'||
to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY')||'|'||
to_char(alt.lien_start_date)||'|'||
case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(case
        when juhed = '9999999' then ''
        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end)||'|'||
to_char(alt.LIEN_EXPIRY_DATE)||'|'||
trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' ')))||'|'||
to_char(alt.REQUESTED_BY_DESC)||'|'||
to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end)||'|'||
to_char(trim(JUHDD1))||'|'||
to_char(alt.lien_remarks)||'|'||
case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end||'|'||                  
trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ||'|'||
TO_CHAR(alt.REQUEST_DEPARTMENT)  ||'|'||
TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ||'|'||
TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
                 end) ||'|'||
TO_CHAR(alt.CONTACT_NUM)  ||'|'||
case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
                 end))),' ')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.SCHM_TYPE)||'|'||
to_char(map_acc.SCHM_CODE)
from map_acc
  inner join map_cif on map_acc.fin_cif_id=map_cif.fin_cif_id
  inner join jupf on trim(jupf.jubbn)=leg_branch_id and jupf.jubno=leg_scan and jupf.jusfx=leg_scas  
  inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas  
  inner join c8pf on c8ccy = scccy
  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number(trim(juhamt)/POWER(10,C8CED))
  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
  AND case when trim(JUHDD1) is not null then
            lpad(to_char(trim(JUHDD1)),50,' ')
            else lpad('Migrated Lien',50,' ')
            end = lpad(alt.lien_remarks,50,' ')
   and trim(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' '))=requested_by_desc  
      and trim(JUACO)=request_department 
      and nvl(trim(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
                end),' ')   =nvl(CONTACT_NUM,' ')               
  where  map_acc.schm_type not in('OOO','TUA','TDA') and trim(map_cif.individual)='N';
  exit;
 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
corp_sbca_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
corp_sbca_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_CORP_SBCA.dat
drop table icv;
create table icv as
  select * from tbaadm.icv where bank_id=get_param('BANK_ID') and int_tbl_code||crncy_code||int_tbl_ver_num in (select int_tbl_code||crncy_code||max(int_tbl_ver_num)  from tbaadm.icv where bank_id=get_param('BANK_ID') and start_date <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
  group by int_tbl_code,crncy_code);
select
'EXTERNAL_ACC_NO',
  'LEG_BRANCH',
  'FINACLE_SOL_ID',
  'BRANCH_ID_MATCH',
  'LEG_CLIENTNO',
  'LEG_SUFFIX',
  'LEG_CURRENCY',
  'FINACLE_CURRENCY',
  'CURRENCY_MATCH',
  'FINACLE_CIF_ID',
  'FINACLE_ACCOUNT_NUMBER',
  'LEG_CUST_TYPE',
  'LEG_ACCOUNT_TYPE',
  'FINACLE_SCHM_CODE',
  'SCHM_DESC',
  'LEG_ACCOUNT_STATUS' ,
  'FINACLE_ACCOUNT_STATUS' ,
  'ACCOUNT_STATUS_MATCH' ,
  'LEG_ACCOUNT_OPENDATE',
  'FINACLE_ACCOUNT_OPENDATE',
  'ACCOUNT_OPENDATE_MATCH',
  'LEG_LAST_TRANSACTION_DATE' ,
  'FINACLE_LAST_TRANSACTION_DATE' ,
  'LAST_TRANSACTION_DATE_MATCH' ,
  'LEG_HOLDMAIL_FLAG' ,
  'LEG_UNDELSTMT_FLAG' ,
  'FINACLE_HOLDMAIL/UNDELSTMT_FLAG' ,
  'LEG_MODE_OF_OPERATION' ,
  'FINACLE_MODE_OF_OPERATION' ,
  'MODE_OF_OPERATION_MATCH' ,
  'LEG_CREDIT_PREF_RATE',
  'FIN_CREDIT_PREF_RATE',
  'CREDIT_PREF_RATE_MATCH',
  'LEG_DEBIT_PREF_RATE',
  'FIN_DEBIT_PREF_RATE',
  'DEBIT_PREF_RATE_MATCH',
  'FIN_BASE_INTEREST_RATE',
  'INT_TABLE_CODE',
  'LEG_CURRENT_BALANCE',
  'FINACLE_CURRENT_BALANCE',
  'CURRENT_BALANCE_MATCH',
  'LEG_LEGDER_BALANCE' ,
  'FIN_LEDGER_BALANCE',
  'LEDGER_BALANCE_MATCH',
  'MEMOPAD FLAG',
  'LEG_PAST_DUE_DATE',
  'FIN_PAST_DUE_AMOUNT',
  'DUE_AMT',
  'C5_CODE',
  'MANAGER_CODE',
  'LEG_STATEMENT_FREQUENCY',
  'FIN_STATEMENT_FREQUENCY',
  'CR_INT_FREQ_FIELD',
  'LEG_CR__INT_FREQ',
  'FIN_CR_INT_FREQ',
  'CR_INT_FREQ_MATCH' ,
  'LEG_C3CODE',
  'FIN_ASSET_CLASS',
  'CREDIT_TIER_CODE',
  'DEBIT_TIER_CODE',
  'LEG_ACCRUED_AMT_CR',
  'FIN_ACCRUED_AMT_CR',
  'ACCRUED_AMT_MATCH_CR',
  'LEG_ACCRUED_AMT_DR',
  'FIN_ACCRUED_AMT_DR',
  'ACCRUED_AMT_MATCH_DR',
'LEG_DIVISION',
'FIN_DIVISION',
'LEG_SUB_DIVISION',
'FIN_SUB_DIVISION'
  from dual
  union all
  select distinct
  to_char(map_acc.EXTERNAL_ACC),
  to_char(map_acc.leg_branch_id) ,
  to_char(gam.sol_id) ,
  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
  to_char(map_acc.leg_scan) ,
  to_char(map_acc.LEG_SCAS) ,
  to_char(scccy),
  to_char(gam.acct_crncy_code),
  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
  to_char(gam.cif_id),
  to_char(gam.foracid),
  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
  to_char(map_acc.leg_acct_type),
  to_char(gam.schm_code),
  to_char(gsp.SCHM_DESC),
  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
                   when scai20 = 'Y' then 'I'                           
             else 'A' end ,
  TO_CHAR(SMT.ACCT_STATUS) ,
  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
                   when scai20 = 'Y' then 'I'                           
             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end ,
  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
  case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end,
  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY')   , 
  case when (case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END , 
  TO_CHAR(SCAI64) ,
  TO_CHAR(SCAIJ1) ,    
  to_char(alr.ACCT_LABEL)    ,
  case when SCAIC7='Y' then lpad('006',5,' ')
                   when scai92='Y' then lpad('011',5,' ')
              else lpad('999',5,' ') end ,
  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
  CASE WHEN (case when SCAIC7='Y' then '006'
                   when scai92='Y' then '011'
              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
  to_char(inte.S5RATC),
  to_char(itc.CUST_CR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.S5RATD),
  to_char(itc.CUST_DR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.BASE_PCNT_DR),
  to_char(itc.INT_TBL_CODE) ,
  to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ,
  to_char(clr_bal_amt) ,
  case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
  to_char((scbal - SCSUMA)/POWER(10,C8CED)), 
  to_char(clr_bal_amt + FUTURE_BAL_AMT),
  case when to_char((scbal - SCSUMA)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
  to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MON-YYYY') else lpad(' ',10,' ') end),
  to_char(gac.PD_XFER_DATE),
  to_char(nvl(Suspence_amt,0)),
  to_char(scc5r),
  to_char(scaco),
  to_char(SCSFC),
  to_char(ast.PS_FREQ_TYPE),
  to_char(S5IFQC),
  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
             else lpad(' ',1,' ') end,
  to_char(eit.INT_FREQ_TYPE_CR),
  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
  to_char(trim(scc3r)) ,
  to_char(SUB_CLASSIFICATION_USER),
  to_char(inte.S5TRCC) ,
  to_char(inte.S5TRCD) ,
  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end,
  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_DR,0)),
  to_char(eit.NRML_ACCRUED_AMOUNT_DR ),
  case when nvl(leit.NRML_ACCRUED_AMOUNT_DR,0) = (eit.NRML_ACCRUED_AMOUNT_DR) then 'TRUE' else 'FALSE' end,
  case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.division,
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.SUB_DIVISION
  from map_acc
      inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
      inner join c8pf  on c8ccy = scccy
      inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
      left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
      left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
      left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
      left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
      LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
             left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
      left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
      left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
      LEFT JOIN (select acid,ACCT_STATUS from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
  left join (select acid,ACCT_LABEL from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'Y' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss1  on map_acc.schm_code = gss1.schm_code
  left join (select schm_code,crncy_code from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
  left join (select schm_code,INT_PAID_FLG,INT_FREQ_TYPE_CR,SCHM_DESC  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
  left join (select INT_FREQ_TYPE_CR,entity_id,NRML_ACCRUED_AMOUNT_CR,NRML_ACCRUED_AMOUNT_DR from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
      left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
      union 
      select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
      left join (
      select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
      union all
      select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
      union all
      select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
      left join (select acid from tbaadm.ta_cot where bank_id='01') cot on gam.acid=cot.acid
      left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
      left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas--code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
      left join freetext free on map_acc.fin_acc_num=free.acid
      left join custom_eit leit on trim(leit.foracid)=gam.foracid
      left join tbaadm.acd on B2K_ID=gam.acid
      left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
      left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid
where map_acc.schm_type in( 'SBA','CAA') and map_acc.schm_code<>'PISLA' 
      and scaco<>'199' and (acct.staffflag='N' or acct.staffflag is NULL)
union all
select  
to_char(map_acc.EXTERNAL_ACC),
  to_char(map_acc.leg_branch_id) ,
  to_char(gam.sol_id) ,
  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
  to_char(map_acc.leg_scan) ,
  to_char(map_acc.LEG_SCAS) ,
  to_char(scccy),
  to_char(gam.acct_crncy_code),
  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
  to_char(gam.cif_id),
  to_char(gam.foracid),
  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
  to_char(map_acc.leg_acct_type),
  to_char(gam.schm_code),
  to_char(gsp.SCHM_DESC),
  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
             when scai20 = 'Y' then 'I'                           
             else 'A' end ,
  TO_CHAR(SMT.ACCT_STATUS) ,
  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
             when scai20 = 'Y' then 'I'                           
             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''   end ,
  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
  case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end,
  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),    
  case when (case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
  TO_CHAR(SCAI64) ,
  TO_CHAR(SCAIJ1) ,    
  to_char(alr.ACCT_LABEL)    ,
  case when SCAIC7='Y' then lpad('006',5,' ')
                   when scai92='Y' then lpad('011',5,' ')
              else lpad('999',5,' ') end ,
  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
  CASE WHEN (case when SCAIC7='Y' then '006'
                   when scai92='Y' then '011'
              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
  to_char(inte.S5RATC),
  to_char(itc.CUST_CR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.S5RATD),
  to_char(itc.CUST_DR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.BASE_PCNT_DR),
  to_char(itc.INT_TBL_CODE), 
  to_char(to_number(V5BAL)/power(10,c8pf.c8ced)), 
  to_char(clr_bal_amt) ,
  case when to_char(to_number(V5BAL)/power(10,c8pf.c8ced)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
  to_char((V5BAL)/POWER(10,C8CED)), 
  to_char(clr_bal_amt + FUTURE_BAL_AMT),
  case when to_char((V5BAL)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
  to_char(' '),
  to_char(gac.PD_XFER_DATE),
  to_char(nvl(' ',0)),
  to_char(scc5r),
  to_char(scaco),
  to_char(SCSFC),
  to_char(ast.PS_FREQ_TYPE),
  to_char(S5IFQC),
  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
             else lpad(' ',1,' ') end,
  to_char(eit.INT_FREQ_TYPE_CR),
  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
  to_char(trim(scc3r)) ,
  to_char(SUB_CLASSIFICATION_USER),
  to_char(inte.S5TRCC) ,
  to_char(inte.S5TRCD) ,
  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end,
  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_DR,0)),
  to_char(eit.NRML_ACCRUED_AMOUNT_DR ),
  case when nvl(leit.NRML_ACCRUED_AMOUNT_DR,0) = (eit.NRML_ACCRUED_AMOUNT_DR) then 'TRUE' else 'FALSE' end,
  case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.division,
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.SUB_DIVISION
  from (select * from v5pf where v5bal<>0)v5pf
  inner join (select * from map_acc where schm_type in('CAA') )map_acc on trim(map_acc.LEG_ACC_NUM)=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
  inner join (select * from scpf where trim(scaco)<>'199')scpf on scpf.SCAB=v5pf.V5ABD and scpf.scan=v5pf.V5AND and scpf.scas=v5pf.V5ASD and scpf.scccy=v5pf.V5CCY
  inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
  INNER JOIN (select orgkey,staffflag from crmuser.accounts where staffflag='N' or trim(staffflag) is NULL) acct ON acct.orgkey = map_acc.fin_cif_id
  inner join c8pf  on c8ccy = scccy
  left join (select * from custom_eit where  schm_type='CAA') leit on leit.foracid=fin_acc_num
  LEFT JOIN (select acid,acct_status from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
  left join (select acct_label,acid from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
  LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
  left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
  left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
  left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
  left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
  left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
  left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
  left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
  left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
  left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
  left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
  union 
  select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
  left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
  inner join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(gfpf.gfcus)=trim(map_cif.gfcus)
  --left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas --code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
  --left join freetext free on map_acc.fin_acc_num=free.acid
  left join icv on itc.INT_TBL_CODE=icv.INT_TBL_CODE and icv. crncy_code=trim(scccy)
  left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
  left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
  left join tbaadm.acd on B2K_ID=gam.acid
  left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid;
--select
--  'LEG_BRANCH',
--  'FINACLE_SOL_ID',
--  'BRANCH_ID_MATCH',
--  'LEG_CLIENTNO',
--  'LEG_SUFFIX',
--  'LEG_CURRENCY',
--  'FINACLE_CURRENCY',
--  'CURRENCY_MATCH',
--  'FINACLE_CIF_ID',
--  'FINACLE_ACCOUNT_NUMBER',
--  'LEG_CUST_TYPE',
--  'LEG_ACCOUNT_TYPE',
--  'FINACLE_SCHM_CODE',
--  'SCHM_DESC',
--  'LEG_ACCOUNT_STATUS' ,
--  'FINACLE_ACCOUNT_STATUS' ,
--  'ACCOUNT_STATUS_MATCH' ,
--  'LEG_ACCOUNT_OPENDATE',
--  'FINACLE_ACCOUNT_OPENDATE',
--  'ACCOUNT_OPENDATE_MATCH',
--  'LEG_LAST_TRANSACTION_DATE' ,
--  'FINACLE_LAST_TRANSACTION_DATE' ,
--  'LAST_TRANSACTION_DATE_MATCH' ,
--  'LEG_HOLDMAIL_FLAG' ,
--  'LEG_UNDELSTMT_FLAG' ,
--  'FINACLE_HOLDMAIL/UNDELSTMT_FLAG' ,
--  'LEG_MODE_OF_OPERATION' ,
--  'FINACLE_MODE_OF_OPERATION' ,
--  'MODE_OF_OPERATION_MATCH' ,
--  'LEG_CREDIT_PREF_RATE',
--  'FIN_CREDIT_PREF_RATE',
--  'CREDIT_PREF_RATE_MATCH',
--  'LEG_DEBIT_PREF_RATE',
--  'FIN_DEBIT_PREF_RATE',
--  'DEBIT_PREF_RATE_MATCH',
--  'FIN_BASE_INTEREST_RATE',
--  'INT_TABLE_CODE',
--  'LEG_CURRENT_BALANCE',
--  'FINACLE_CURRENT_BALANCE',
--  'CURRENT_BALANCE_MATCH',
--  'LEG_LEGDER_BALANCE' ,
--  'FIN_LEDGER_BALANCE',
--  'LEDGER_BALANCE_MATCH',
--  'MEMOPAD FLAG',
--  'LEG_PAST_DUE_DATE',
--  'FIN_PAST_DUE_AMOUNT',
--  'DUE_AMT',
--  'C5_CODE',
--  'MANAGER_CODE',
--  'LEG_STATEMENT_FREQUENCY',
--  'FIN_STATEMENT_FREQUENCY',
--  'CR_INT_FREQ_FIELD',
--  'LEG_CR__INT_FREQ',
--  'FIN_CR_INT_FREQ',
--  'CR_INT_FREQ_MATCH' ,
--  'LEG_C3CODE',
--  'FIN_ASSET_CLASS',
--  'CREDIT_TIER_CODE',
--  'DEBIT_TIER_CODE',
--  'LEG_ACCRUED_AMT_CR',
--  'FIN_ACCRUED_AMT_CR',
--  'ACCRUED_AMT_MATCH_CR',
--  'LEG_ACCRUED_AMT_DR',
--  'FIN_ACCRUED_AMT_DR',
--  'ACCRUED_AMT_MATCH_DR'
--  from dual
--  union all
--  select distinct
--  to_char(map_acc.leg_branch_id) ,
--  to_char(gam.sol_id) ,
--  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
--  to_char(map_acc.leg_scan) ,
--  to_char(map_acc.LEG_SCAS) ,
--  to_char(scccy),
--  to_char(gam.acct_crncy_code),
--  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
--  to_char(gam.cif_id),
--  to_char(gam.foracid),
--  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
--  to_char(map_acc.leg_acct_type),
--  to_char(gam.schm_code),
--  to_char(gsp.SCHM_DESC),
--  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--                   when scai20 = 'Y' then 'I'                           
--             else 'A' end ,
--  TO_CHAR(SMT.ACCT_STATUS) ,
--  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--                   when scai20 = 'Y' then 'I'                           
--             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
--  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end ,
--  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
--  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
--  case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end,
--  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY')   , 
--  case when (case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
--  TO_CHAR(SCAI64) ,
--  TO_CHAR(SCAIJ1) ,    
--  to_char(alr.ACCT_LABEL)    ,
--  case when SCAIC7='Y' then lpad('006',5,' ')
--                   when scai92='Y' then lpad('011',5,' ')
--              else lpad('999',5,' ') end ,
--  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
--  CASE WHEN (case when SCAIC7='Y' then '006'
--                   when scai92='Y' then '011'
--              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
--  to_char(inte.S5RATC),
--  to_char(itc.CUST_CR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.S5RATD),
--  to_char(itc.CUST_DR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.BASE_PCNT_DR),
--  to_char(itc.INT_TBL_CODE) ,
--  to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ,
--  to_char(clr_bal_amt) ,
--  case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
--  to_char((scbal - SCSUMA)/POWER(10,C8CED)), 
--  to_char(clr_bal_amt + FUTURE_BAL_AMT),
--  case when to_char((scbal - SCSUMA)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
--  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
--  to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MON-YYYY') else lpad(' ',10,' ') end),
--  to_char(gac.PD_XFER_DATE),
--  to_char(nvl(Suspence_amt,0)),
--  to_char(scc5r),
--  to_char(scaco),
--  to_char(SCSFC),
--  to_char(ast.PS_FREQ_TYPE),
--  to_char(S5IFQC),
--  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
--             else lpad(' ',1,' ') end,
--  to_char(eit.INT_FREQ_TYPE_CR),
--  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
--             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
--  to_char(trim(scc3r)) ,
--  to_char(SUB_CLASSIFICATION_USER),
--  to_char(inte.S5TRCC) ,
--  to_char(inte.S5TRCD) ,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_DR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_DR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_DR,0) = (eit.NRML_ACCRUED_AMOUNT_DR) then 'TRUE' else 'FALSE' end
--  from map_acc
--      inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
--      inner join c8pf  on c8ccy = scccy
--      inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
--  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
--      left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--      left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
--      left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
--      left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
--      LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
--  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
--  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--             left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
--      left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
--      left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
--      LEFT JOIN (select acid,ACCT_STATUS from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
--  left join (select acid,ACCT_LABEL from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
--  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'Y' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
--  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss1  on map_acc.schm_code = gss1.schm_code
--  left join (select schm_code,crncy_code from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
--  left join (select schm_code,INT_PAID_FLG,INT_FREQ_TYPE_CR,SCHM_DESC  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--  left join (select INT_FREQ_TYPE_CR,entity_id,NRML_ACCRUED_AMOUNT_CR,NRML_ACCRUED_AMOUNT_DR from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
--      left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
--      union 
--      select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
--      left join (
--      select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
--      union all
--      select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
--      union all
--      select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
--      left join (select acid from tbaadm.ta_cot where bank_id='01') cot on gam.acid=cot.acid
--      left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
--      left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas--code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
--      left join freetext free on map_acc.fin_acc_num=free.acid
--      left join custom_eit leit on trim(leit.foracid)=gam.foracid
--      left join tbaadm.acd on B2K_ID=gam.acid
--      left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
--      where map_acc.schm_type in( 'SBA','CAA') and map_acc.schm_code<>'PISLA' 
--      and scaco<>'199' and (acct.staffflag='N' or acct.staffflag is NULL)
--      union all
--  select  distinct
--  to_char(map_acc.leg_branch_id) ,
--  to_char(gam.sol_id) ,
--  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
--  to_char(map_acc.leg_scan) ,
--  to_char(map_acc.LEG_SCAS) ,
--  to_char(scccy),
--  to_char(gam.acct_crncy_code),
--  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
--  to_char(gam.cif_id),
--  to_char(gam.foracid),
--  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
--  to_char(map_acc.leg_acct_type),
--  to_char(gam.schm_code),
--  to_char(gsp.SCHM_DESC),
--  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
--             when scai20 = 'Y' then 'I'                           
--             else 'A' end ,
--  TO_CHAR(SMT.ACCT_STATUS) ,
--  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
--             when scai20 = 'Y' then 'I'                           
--             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
--  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''   end ,
--  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
--  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
--  case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end,
--  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),    
--  case when (case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
--  TO_CHAR(SCAI64) ,
--  TO_CHAR(SCAIJ1) ,    
--  to_char(alr.ACCT_LABEL)    ,
--  case when SCAIC7='Y' then lpad('006',5,' ')
--                   when scai92='Y' then lpad('011',5,' ')
--              else lpad('999',5,' ') end ,
--  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
--  CASE WHEN (case when SCAIC7='Y' then '006'
--                   when scai92='Y' then '011'
--              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
--  to_char(inte.S5RATC),
--  to_char(itc.CUST_CR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.S5RATD),
--  to_char(itc.CUST_DR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.BASE_PCNT_DR),
--  to_char(itc.INT_TBL_CODE), 
--  to_char(to_number(V5BAL)/power(10,c8pf.c8ced)), 
--  to_char(clr_bal_amt) ,
--  case when to_char(to_number(V5BAL)/power(10,c8pf.c8ced)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
--  to_char((V5BAL)/POWER(10,C8CED)), 
--  to_char(clr_bal_amt + FUTURE_BAL_AMT),
--  case when to_char((V5BAL)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
--  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
--  to_char(' '),
--  to_char(gac.PD_XFER_DATE),
--  to_char(nvl(' ',0)),
--  to_char(scc5r),
--  to_char(scaco),
--  to_char(SCSFC),
--  to_char(ast.PS_FREQ_TYPE),
--  to_char(S5IFQC),
--  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
--             else lpad(' ',1,' ') end,
--  to_char(eit.INT_FREQ_TYPE_CR),
--  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
--             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
--  to_char(trim(scc3r)) ,
--  to_char(SUB_CLASSIFICATION_USER),
--  to_char(inte.S5TRCC) ,
--  to_char(inte.S5TRCD) ,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_DR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_DR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_DR,0) = (eit.NRML_ACCRUED_AMOUNT_DR) then 'TRUE' else 'FALSE' end
--  from v5pf
--  inner join map_acc on trim(map_acc.LEG_ACC_NUM)=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
--  inner join scpf on scpf.SCAB=v5pf.V5ABD and scpf.scan=v5pf.V5AND and scpf.scas=v5pf.V5ASD and scpf.scccy=v5pf.V5CCY
--  inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
--  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
--  inner join c8pf  on c8ccy = scccy
--  LEFT JOIN (select acid,acct_status from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
--  left join (select acct_label,acid from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
--  LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
--  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
--  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--  left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--  left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--  left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
--  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
--  left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
--  left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
--  left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
--  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--  left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
--  left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
--  left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--  left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
--  union 
--  select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
--  left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
--  inner join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(gfpf.gfcus)=trim(map_cif.gfcus)
--  --left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas --code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
--  --left join freetext free on map_acc.fin_acc_num=free.acid
--  left join (select * from tbaadm.icv where bank_id=get_param('BANK_ID') and int_tbl_code||crncy_code||int_tbl_ver_num in (select int_tbl_code||crncy_code||max(int_tbl_ver_num)  from tbaadm.icv where bank_id=get_param('BANK_ID') and start_date <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--  group by int_tbl_code,crncy_code))icv on itc.INT_TBL_CODE=icv.INT_TBL_CODE and icv. crncy_code=trim(scccy)
--  left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
--  left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
--  left join tbaadm.acd on B2K_ID=gam.acid
--  left join custom_eit leit on trim(leit.foracid)=gam.foracid
--  where map_acc.schm_type in('CAA')  and v5pf.v5bal<>0
--  and scaco<>'199' and (acct.staffflag='N' or acct.staffflag is NULL);
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Freeze_accounts.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Freeze_accounts.sql 
select map_acc.LEG_BRANCH_ID,map_acc.LEG_SCAN,map_acc.LEG_SCAS,map_acc.LEG_ACC_NUM,map_acc.FIN_ACC_NUM,map_acc.LEG_CUST_TYPE,map_acc.SCHM_TYPE,
map_acc.SCHM_CODE,SCAI17 SC017,SCAI81 SC081,SCAI83 SC083,SCAI84 SC084,SCAI85 SC085,SCAI92  SC092,scaig4 SC164,
FREZ_CODE,FREZ_REASON_CODE,REF_DESC
from map_acc 
left join scpf on trim(scab)||trim(scan)||trim(scas)=trim(LEG_BRANCH_ID)||trim(LEG_SCAN)||trim(LEG_SCAS)
left join (select * from tbaadm.gam where bank_id='01')gam on gam.foracid=map_acc.fin_acc_num
left join (select * from tbaadm.rct where bank_id='01' and  REF_REC_TYPE='31')rct on gam.FREZ_REASON_CODE=REF_CODE
where map_acc.schm_type in ('SBA','CAA','ODA','PCA') and trim(FREZ_REASON_CODE) is not null 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Guarantor.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Guarantor.sql 
SELECT EXTERNAL_ACCOUNT,MAP_ACC.LEG_ACC_NUM DEAL_NUM,MAP_ACC.LEG_ACCT_TYPE,MAP_ACC.SCHM_CODE,MAP_ACC.FIN_ACC_NUM dEAL_FIN_ACC_NUM,GUARANTOR_ACCOUNT,relation.FIN_ACC_NUM GUARANTOR_FIN_ACC_NUM
from RETAIL_GUAR_ACCOUNT
inner join map_acc on map_acc.EXTERNAL_ACC= EXTERNAL_ACCOUNT
inner join scpf on scab=map_acc.leg_branch_id and scan=map_acc.leg_scan and scas=map_acc.leg_scas
left join otpf on map_acc.LEG_ACC_NUM=trim(otbrnm)||trim(otdlp)||trim(otdlr)
inner join map_acc relation on trim(replace(GUARANTOR_ACCOUNT,'-',''))=relation.EXTERNAL_ACC
 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_laa_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_laa_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_NONSTAFF_LAA.dat
select   
'EXTERNAL_ACC_NO'||'|'||
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'BRANCH_ID_MATCH'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'FINACLE_REPRICING_PLAN'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_SANCTION_LIMIT'||'|'||
'FINACLE_SANCTION_LIMIT'||'|'||
'SANCTION_LIMIT_MATCH'||'|'||
'LEG_LIMIT_SANCTION_DATE'||'|'||
'FINACLE_LIMIT_SANCTION_DATE'||'|'||
'LIMIT_SANCTION_DATE_MATCH'||'|'||
'LEG_LIMIT_EXPIRY_DATE'||'|'||
'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
'LIMIT_EXPIRY_DATE_MATCH'||'|'||
'LEG_REPY_PRD_IN_MONS'||'|'||
'FINACLE_REPY_PRD_IN_MON'||'|'||
'REPY_PRD_IN_MON_MATCH'||'|'||
'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
'LEG_REPAY_SCHEDULE_DATE'||'|'||
'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
'REPAY_SCHEDULE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_BRANCH'||'|'||
'LEG_OPERATIVE_CLIENT_NO'||'|'||
'LEG_OPERATIVE_ORDINAL'||'|'||
'LEG_OPERATIVE_ACC'||'|'||
'FIN_OPER_ACC'||'|'||
'OPERATIVE_ACC_MATCH'||'|'||
'LEG_OPERATIVE_CCY'||'|'||
'LEG_TENOR_IN_MONTHS'||'|'||
'FINACLE_TENOR_IN_MONTHS'||'|'||
'TENOR_IN_MONTHS_MATCH'||'|'||
'LEG_TENOR_IN_DAYS'||'|'||
'FINACLE_TENOR_IN_DAYS'||'|'||
'TENOR_IN_DAYS_MATCH'||'|'||
'PURPOSE_OF_LOAN'||'|'||
'FIN_PURPOSE_OF_LOAN'||'|'||
'PURPOSE_OF_LOAN_MATCH'||'|'||
'PURPOSE_OF_LOAN_DESC'||'|'||
'LEG_LEDGER_BAL'||'|'||
'FIN_LEDGER_BAL'||'|'||
'LEDGER_MATCH'||'|'||
'FIN_DUE_AMT'||'|'||
--'LEG_DUE_AMT'||'|'||
'EARLIER_DUE_AMT'||'|'||
'DUE_AMT_MATCH'||'|'||
'LEG_DUE_DAYS'||'|'||
'FIN_DUE_DAYS'||'|'||
'DUE_DAYS_MATCH'||'|'||
'LEG_DUE_DATE'||'|'||
'FIN_DUE_DATE'||'|'||
'DUE_DATE_MATCH'||'|'||
'LEG_ACCRUED_AMT'||'|'||
'FIN_ACCRUED_AMT'||'|'||
'ACCURUAL_MATCH'||'|'||
'REPRISING_DATE'||'|'||
'LEG_E2CODE'||'|'||
'FINACLE_REPRICING_PLAN'||'|'||
'TBL_CODE'||'|'||
'FIN_BASE_RATE'||'|'||
'FIN_DEBIT_PERCENT'||'|'||
'FIN_PREF_RATE'||'|'||
'FIN_NET_RATE'||'|'||
'LEGACY_NET_RATE'||'|'||
'NET_RATE_MATCH'||'|'||
'LEG_PRI_INSTALLMENT_AMOUNT'||'|'||
'FIN_PRI_INSTALLMENT_AMOUNT'||'|'||
'PRINCIPAL_INSTALLMENT_MATCH'||'|'||
'LEG_INT_INSTALLMENT_AMOUNT'||'|'||
'FIN_INT_INSTALLMENT_AMOUNT'||'|'||
'INTEREST_AMOUNT_MATCH'||'|'||
'TOTAL_LEG_INSTALLMENT_AMOUNT'||'|'||
'TOTAL_FIN_INSTALLMENT_AMOUNT'||'|'||
'INTALLMENT_AMOUNT_MATCH'
from dual
union all
select 
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'|| 
to_char(gam.sol_id)||'|'||
case when substr(map_acc.leg_branch_id,2,4) = gam.sol_id then 'TRUE' else 'FALSE' end  ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS)||'|'||
map_acc.currency||'|'||
gam.acct_crncy_code ||'|'||
CASE WHEN map_acc.currency = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
map_acc.leg_acc_num||'|'||
to_char(V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
map_acc.leg_cust_type ||'|'||
map_acc.leg_acct_type ||'|'|| 
map_acc.schm_code ||'|'||
gam.ACCT_NAME||'|'||
--to_char(lrp.repricing_plan) ||'|'||
case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then  to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end  = gam.acct_opn_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED) end)||'|'||
    to_char(gam.sanct_lim) ||'|'||
CASE WHEN case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED)end = gam.sanct_lim THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')end ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')end =lht.lim_sanct_date then 'TRUE' else 'FALSE' end ||'|'||
case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')end ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')end = lht.lim_exp_date THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end)||'|'||
to_char(lam.rep_perd_mths)||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(to_number(otdla)/POWER(10,c8pf.C8CED))||'|'||
to_char(lam.liab_as_on_xfer_eff_date)||'|'||
case when to_number(otdla)/POWER(10,c8pf.C8CED)=lam.liab_as_on_xfer_eff_date then 'TRUE' else 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end=lam.rep_shdl_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(NEEAN,1,4))||'|'||
to_char(substr(NEEAN,5,6))||'|'||
to_char(substr(NEEAN,11,3))||'|'||
to_char(NEEAN)||'|'||
CASE WHEN L.OP_ACID IS NOT NULL THEN G1.FORACID ELSE '' END ||'|'||
case when to_char(nvl(trim(NEEAN),' ')) = to_char(nvl(CASE WHEN trim(L.OP_ACID) IS NOT NULL THEN trim(G1.FORACID) END,' ')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(oper.currency) ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end )||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
 else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end)||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
     to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
 =lam.rep_perd_days then 'TRUE' else 'FALSE' end ||'|'||
to_char(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
case when nvl(TRIM(SCC2R),' ') = nvl(GAC.PURPOSE_OF_ADVN,' ') then 'TRUE' else 'FALSE' end ||'|'||
REF_DESC||'|'||
case when  V5BAL is not null then to_char(to_number(v5bal)/POWER(10,C8CED)) else '0.01' end||'|'||
to_char(gam.CLR_BAL_AMT)||'|'||
case when case when  V5BAL is not null then to_number(v5bal)/POWER(10,C8CED) else 0.01 end=gam.CLR_BAL_AMT then 'TRUE' else 'FALSE' end ||'|'||
abs(LDT.DMD_AMT1)||'|'||
--abs(ls.sp/c8pwd)||'|'||
abs(lsamt.sp/c8pwd)||'|'||
case when nvl(abs(LDT.DMD_AMT1),0) = nvl(abs(lsamt.sp/c8pwd),0) then 'TRUE' else 'FALSE' end ||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end||'|'||
gac.DPD_CNTr||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end),0) = nvl(gac.DPD_CNTr,0) then 'TRUE' else 'FALSE' end||'|'||
to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end)||'|'||
to_char(DB_STAT_DATE - gac.DPD_CNTR)||'|'||
case when (to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YY') else '20-FEB-17' end)) = (to_char(DB_STAT_DATE - gac.DPD_CNTR)) then 'TRUE' else 'FALSE' end||'|'||
to_char(eitt.NRML_ACCRUED_AMOUNT_DR)||'|'||
to_char(eit.NRML_ACCRUED_AMOUNT_DR)||'|'||
case when to_char(nvl(eitt.NRML_ACCRUED_AMOUNT_DR,'0'))=to_char(nvl(eit.NRML_ACCRUED_AMOUNT_DR,'0')) then 'TRUE' else 'FALSE' end||'|'||
itb.REPRICING_DATE||'|'||
to_char(v5pf.v5brr)||'|'||
to_char(lrp.repricing_plan)||'|'||
to_char(TBL_CODE)||'|'||
to_char(nvl(lt.BASE_PCNT_DR,0))||'|'||
--to_char(fin_interest_rates.base_rate) ||'|'||
to_char(nvl(lt.DR_NRML_INT_PCNT,0))||'|'||
--to_char(fin_interest_rates.NRML_INT_PCNT)||'|'||
to_char(nvl(lt.ACTUAL_PREF_RATE,0))||'|'||
--to_char(fin_interest_rates.pref_rate)||'|'||
--abs(to_number(to_char(fin_interest_rates.FIN_NET_RATE)))||'|'||
abs(to_number(to_char(nvl(lt.BASE_PCNT_DR,0)+nvl(lt.DR_NRML_INT_PCNT,0)+nvl(lt.ACTUAL_PREF_RATE,0))))||'|'||
to_char(nvl(lt.acc_pref_rate,0))||'|'||
case when abs(to_number(to_char(nvl(lt.acc_pref_rate,0))))=abs(to_number(to_char(nvl(lt.BASE_PCNT_DR,0)+nvl(lt.DR_NRML_INT_PCNT,0)+nvl(lt.ACTUAL_PREF_RATE,0)))) then 'TRUE' else 'FALSE' end ||'|'||
--case when abs(to_number(to_char(lt.acc_pref_rate)))=abs(to_number(to_char(fin_interest_rates.FIN_NET_RATE))) then 'TRUE' else 'FALSE' end ||'|'||
case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end||'|'||
nvl(lrs.PRINCIPAL_AMT,0) ||'|'||
case when case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED)end = lrs.PRINCIPAL_AMT then 'TRUE' else 'FALSE' end||'|'||
case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end||'|'||
nvl(lrs.INTEREST_AMT,0)||'|'||
case when case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end = lrs.INTEREST_AMT then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end)||'|'||
to_char(nvl(lrs.INSTALLMENT_AMT,0))||'|'||
case when case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end = lrs.INSTALLMENT_AMT then 'TRUE' else 'FALSE' end --||'|'|| 
--lid.isd||'|'||
--lrs_lid.Inst_date
from (select * from map_acc where schm_type='LAA') map_acc
inner join (select * from map_cif where IS_JOINT<>'Y' ) map_cif on MAP_ACC.FIN_CIF_ID=map_cif.fin_cif_id
INNER join (select * from gfpf where gfctp not in('EC','EV','EW'))gfpf on nvl(TRIM(gfpf.gfclc),' ')=nvl(TRIM(map_cif.gfclc),' ') and  TRIM(gfpf.gfcus)=TRIM(map_cif.gfcus)
inner JOIN tbaadm.gam ON gam.foracid = map_acc.fin_acc_num and gam.bank_id=get_param('BANK_ID') and gam.schm_type='LAA'
inner join v5pf on v5brnm||v5dlp||trim(v5dlr) = leg_acc_num
LEFT JOIN tbaadm.lrp ON lrp.acid = gam.acid and lrp.bank_id=get_param('BANK_ID')
inner join otpf on otbrnm||otdlp||trim(otdlr) = leg_acc_num
inner join (select ombrnm||omdlp||trim(omdlr) ompf_leg_num,sum(omnwp) omnwp from ompf inner join map_acc on ombrnm||omdlp||trim(omdlr) =leg_acc_num where schm_type='LAA' and ommvt='P' and ommvts in ('C','O') group by ombrnm||omdlp||trim(omdlr))OMPF ON OMPF_LEG_NUM=LEG_ACC_NUM
inner join c8pf on c8ccy = currency
left join iompf_laa on del_ref_num=LEG_ACC_NUM
left join r8pf on trim(r8lnp)=trim(v5dlp)
LEFT JOIN tbaadm.lht ON lht.acid = gam.acid and lht.bank_id=get_param('BANK_ID')
LEFT JOIN (select i1.* from tbaadm.itc i1
left join (select * from tbaadm.itc where bank_id='01')i2 on (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM > i2.INT_TBL_CODE_SRL_NUM)  
where i1.bank_id='01' and i2.entity_id is null)itc  ON itc.entity_id = gam.acid AND ITC.ENTITY_TYPE='ACCNT'  and itc.bank_id=get_param('BANK_ID')
INNER JOIN tbaadm.lam  ON lam.acid = gam.acid AND LAM.bank_id=get_param('BANK_ID')
left join operacc oper on  TRIM(oper.ompf_leg_num)=leg_acc_num
left join  nepf on trim(OPER_LEG_ACC)=trim(neab)||trim(nean)||trim(neas)
LEFT JOIN TBAADM.LAM L ON L.ACID=gam.ACID AND gam.BANK_ID=L.BANK_ID
LEFT JOIN TBAADM.GAM G1 ON G1.ACID=L.OP_ACID AND L.BANK_ID=G1.BANK_ID
LEFT JOIN tbaadm.gac ON gac.acid = gam.acid AND GAC.bank_id=get_param('BANK_ID')
left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
left join loan_account_finacle_int_rate lt on lt.int_acc_num=leg_acc_num
left JOIN TBAADM.RCT ON GAC.PURPOSE_OF_ADVN=RCT.REF_CODE AND RCT.BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='41'
left join (select o1.ombrnm||o1.omdlp||trim(o1.omdlr) del_ref_num,o1.omnwr ins,to_date(get_date_fm_btrv(o1.OmDTE),'YYYYMMDD') isd from ompf o1 inner join map_acc on o1.ombrnm||o1.omdlp||trim(o1.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='P' and om.OMMVTs='R' and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o1.ombrnm AND om.omdlp=o1.omdlp AND om.omdlr=o1.omdlr and oM.omdte=o1.omdte 
where o1.ommvt='P' and o1.OMMVTs='R' AND schm_type='LAA')ina on ina.del_ref_num=leg_acc_num
LEFT JOIN (select distinct ca1.foracid,ca1.flow_date,ca1.INSTALLMENT_AMT,ca1.PRINCIPAL_AMT,ca1.INTEREST_AMT,ca1.BANK_ID from custom.c_amort ca1 where ca1.bank_id='01' 
and ca1.SERIAL_NUM=(select min(ca2.serial_num) from custom.c_amort ca2 where INSTALLMENT_AMT<>0 and flow_date > to_date('3-7-2017','DD-MM-YYYY') and ca1.foracid=ca2.foracid group by ca2.foracid) ) lrS ON lrs.foracid = gam.foracid 
--LEFT JOIN (select distinct ca1.foracid,ca1.flow_date Inst_date,ca1.INSTALLMENT_AMT,ca1.PRINCIPAL_AMT,ca1.INTEREST_AMT,ca1.BANK_ID from custom.c_amort ca1 where ca1.bank_id='01' 
--and ca1.SERIAL_NUM=(select max(ca2.serial_num) from custom.c_amort ca2 where INSTALLMENT_AMT<>0 and flow_date < to_date('3-7-2017','DD-MM-YYYY') and ca1.foracid=ca2.foracid group by ca2.foracid) ) lrS_lid ON lrs.foracid = gam.foracid  
left join (select o2.ombrnm||o2.omdlp||trim(o2.omdlr) del_ref_num,o2.omnwr ins,to_date(get_date_fm_btrv(o2.OmDTE),'YYYYMMDD') isd from ompf o2 inner join map_acc on o2.ombrnm||o2.omdlp||trim(o2.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt in ('I','P') and (TRIM(om.OMMVTs)= 'R' or TRIM(om.OMMVTs) IS NULL) and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o2.ombrnm AND om.omdlp=o2.omdlp AND om.omdlr=o2.omdlr and oM.omdte=o2.omdte 
where o2.ommvt='I' and TRIM(o2.OMMVTs) IS NULL AND schm_type='LAA')ii on ii.del_ref_num=leg_acc_num
--left join (select o1.ombrnm||o1.omdlp||trim(o1.omdlr) del_ref_num,o1.omnwr ins,to_date(get_date_fm_btrv(o1.OmDTE),'YYYYMMDD') isd from ompf o1 inner join map_acc on o1.ombrnm||o1.omdlp||trim(o1.omdlr) =leg_acc_num 
--INNER JOIN (select ombrnm,omdlp,omdlr, max(om.omdte) omdte from ompf om where om.ommvt in ('P','I') and TO_NUMBER(om.omdte)<TO_NUMBER(get_param('EODCYYMMDD')) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o1.ombrnm AND om.omdlp=o1.omdlp AND om.omdlr=o1.omdlr and oM.omdte=o1.omdte 
--where o1.ommvt in ('P','I') AND schm_type='LAA')lid on lid.del_ref_num=leg_acc_num
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join (select trim(lsbrnm)||trim(lsdlp)||trim(lsdlr) del_num,sum((abs(lsamtd)-abs(lsamtp)))sp,min(lsdte)dte from lspf where lspdte='9999999' and TO_NUMBER(lsdte)<=TO_NUMBER(get_param('EODCYYMMDD')) and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by trim(lsbrnm)||trim(lsdlp)||trim(lsdlr))lsamt on lsamt.del_num =leg_acc_num
left join (select lsbrnm||trim(lsdlp)||trim(lsdlr) del_num ,sum(lsamtd - lsamtp) sp,min(lsdte)dte from lspf where lsmvt='P' and (LSAMTD - LSAMTP) < 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)ls on ls.del_num=leg_acc_num
left join tbaadm.gct gct on gct.bank_id='01' 
left join CUSTOM_EIT eitt on eitt.foracid=gam.foracid
left join int_tbl itb on itb.INT_ACC_NUM = leg_acc_num
left join (select * from tbaadm.eit where bank_id='01')eit on eit.entity_id=gam.acid
where map_acc.schm_type='LAA'  and gfpf.gfctp not in('EC','EV','NW');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_laa_master_old.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_laa_master_old.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_NONSTAFF_LAA.dat
Select distinct   
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'BRANCH_ID_MATCH'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
--'LEGACY_CUST_NAME' ||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'LEGACY_DEBIT_PREF_PERCENT'||'|'||
--'FINACLE_DEBIT_PREF_PERCENT'||'|'||
--'DEBIT_PREF_PERCENT_MATCH'||'|'||
--'LEGACY_REPRICING_PLAN'||'|'||
'FINACLE_REPRICING_PLAN'||'|'||
--'REPRICING_PLAN_MATCH'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_SANCTION_LIMIT'||'|'||
'FINACLE_SANCTION_LIMIT'||'|'||
'SANCTION_LIMIT_MATCH'||'|'||
'LEG_LIMIT_SANCTION_DATE'||'|'||
'FINACLE_LIMIT_SANCTION_DATE'||'|'||
'LIMIT_SANCTION_DATE_MATCH'||'|'||
'LEG_LIMIT_EXPIRY_DATE'||'|'||
'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
'LIMIT_EXPIRY_DATE_MATCH'||'|'||
--'LEG_INT_TBL_CODE'||'|'||
'FINACLE_INT_TBL_CODE'||'|'||
--'INT_TBL_CODE_MATCH'||'|'||
'LEG_REPY_PRD_IN_MONS'||'|'||
'FINACLE_REPY_PRD_IN_MON'||'|'||
'REPY_PRD_IN_MON_MATCH'||'|'||
'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
--'LEG_UPFRONT_INSTALLMENT_COLL'||'|'||
--'FINACLE_UPFRONT_INSTALLMENT_COLL'||'|'||
--'UPFRONT_INSTLMNT_COLL_MATCH'||'|'||
--'LEG_SUM_OF_THE_PRINC_DMD_AMT'||'|'||
--'FINACLE_SUM_OF_THE_PRN_DMD_AMT'||'|'||
--'SUM_OF_THE_PRN_DMD_AMT_MATCH'||'|'||
--'LEG_INT_RATE_ON_SANC_LMT'||'|'||
--'FINACLE_INT_RATE_ON_SANC_LMT'||'|'||
--'INT_RATE_ON_SANC_LMT_MATCH'||'|'||
--'LEG_DISBUR_PREVIOUS_SCHE'||'|'||
--'FINACLE_DISBUR_PREVIOUS_SCHE'||'|'||
--'DISBUR_PREVIOUS_SCHE_MATCH'||'|'||
'LEG_REPAY_SCHEDULE_DATE'||'|'||
'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
'REPAY_SCHEDULE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_BRANCH'||'|'||
'LEG_OPERATIVE_CLIENT_NO'||'|'||
'LEG_OPERATIVE_ORDINAL'||'|'||
'LEG_OPERATIVE_ACC'||'|'||
'FIN_OPER_ACC'||'|'||
'OPERATIVE_ACC_MATCH'||'|'||
'LEG_OPERATIVE_CCY'||'|'||
'LEG_TENOR_IN_MONTHS'||'|'||
'FINACLE_TENOR_IN_MONTHS'||'|'||
'TENOR_IN_MONTHS_MATCH'||'|'||
'LEG_TENOR_IN_DAYS'||'|'||
'FINACLE_TENOR_IN_DAYS'||'|'||
'TENOR_IN_DAYS_MATCH'||'|'||
'PURPOSE_OF_LOAN'||'|'||
'FIN_PURPOSE_OF_LOAN'||'|'||
'PURPOSE_OF_LOAN_MATCH'||'|'||
'PURPOSE_OF_LOAN_DESC'||'|'||
'LEGACY_RATE_OF_INTEREST'||'|'||
'FIN_RATE_OF_INTEREST'||'|'||
'RATE_OF_INTEREST_MATCH'||'|'||
'LEG_PRI_INSTALLMENT_AMOUNT'||'|'||
'FIN_PRI_INSTALLMENT_AMOUNT'||'|'||
'PRINCIPAL_INSTALLMENT_MATCH'||'|'||
'LEG_INT_INSTALLMENT_AMOUNT'||'|'||
'FIN_INT_INSTALLMENT_AMOUNT'||'|'||
'INTEREST_AMOUNT_MATCH'||'|'||
'TOTAL_LEG_INSTALLMENT_AMOUNT'||'|'||
'TOTAL_FIN_INSTALLMENT_AMOUNT'||'|'||
'INTALLMENT_AMOUNT_MATCH'||'|'||
'LEG_LEDGER_BAL'||'|'||
'FIN_LEDGER_BAL'||'|'||
'LEDGER_MATCH'||'|'||
'FIN_DUE_AMT'||'|'||
'LEG_DUE_AMT'||'|'||
'DUE_AMT_MATCH'||'|'||
'LEG_DUE_DAYS'||'|'||
'FIN_DUE_DAYS'||'|'||
'DUE_DAYS_MATCH'||'|'||
'LEG_DUE_DATE'||'|'||
'FIN_DUE_DATE'||'|'||
'DUE_DATE_MATCH'
from dual
union all
select 
to_char(map_acc.leg_branch_id) ||'|'|| 
to_char(gam.sol_id)||'|'||
case when substr(map_acc.leg_branch_id,2,4) = gam.sol_id then 'TRUE' else 'FALSE' end  ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS)||'|'||
map_acc.currency||'|'||
gam.acct_crncy_code ||'|'||
CASE WHEN map_acc.currency = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
map_acc.leg_acc_num||'|'||
to_char(V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
map_acc.leg_cust_type ||'|'||
map_acc.leg_acct_type ||'|'|| 
map_acc.schm_code ||'|'||
gam.ACCT_NAME||'|'||
to_char(lrp.repricing_plan) ||'|'||
case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then  to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end  = gam.acct_opn_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED) end)||'|'||
    to_char(gam.sanct_lim) ||'|'||
CASE WHEN case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED)end = gam.sanct_lim THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')end ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')end =lht.lim_sanct_date then 'TRUE' else 'FALSE' end ||'|'||
case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')end ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')end = lht.lim_exp_date THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(itc.int_tbl_code)||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end)||'|'||
to_char(lam.rep_perd_mths)||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(to_number(otdla)/POWER(10,c8pf.C8CED))||'|'||
to_char(lam.liab_as_on_xfer_eff_date)||'|'||
case when to_number(otdla)/POWER(10,c8pf.C8CED)=lam.liab_as_on_xfer_eff_date then 'TRUE' else 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end=lam.rep_shdl_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(NEEAN,1,4))||'|'||
to_char(substr(NEEAN,5,6))||'|'||
to_char(substr(NEEAN,11,3))||'|'||
to_char(NEEAN)||'|'||
CASE WHEN L.OP_ACID IS NOT NULL THEN G1.FORACID ELSE '' END ||'|'||
case when to_char(nvl(trim(NEEAN),' ')) = to_char(nvl(CASE WHEN trim(L.OP_ACID) IS NOT NULL THEN trim(G1.FORACID) END,' ')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(oper.currency) ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end )||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
 else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end)||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
     to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
 =lam.rep_perd_days then 'TRUE' else 'FALSE' end ||'|'||
to_char(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
case when nvl(TRIM(SCC2R),' ') = nvl(GAC.PURPOSE_OF_ADVN,' ') then 'TRUE' else 'FALSE' end ||'|'||
REF_DESC||'|'||
to_char(lt.acc_pref_rate)||'|'||
to_char(lt.BASE_PCNT_DR+lt.DR_NRML_INT_PCNT+lt.ACTUAL_PREF_RATE)||'|'||
case when abs(to_number(to_char(lt.acc_pref_rate)))=abs(to_number(to_char(lt.BASE_PCNT_DR+lt.DR_NRML_INT_PCNT+lt.ACTUAL_PREF_RATE))) then 'TRUE' else 'FALSE' end ||'|'||  
case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end||'|'||
PRINCIPAL_AMT ||'|'||
case when case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED)end = PRINCIPAL_AMT then 'TRUE' else 'FALSE' end||'|'||
case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end||'|'||
INTEREST_AMT||'|'||
case when case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end = INTEREST_AMT then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end)||'|'||
to_char(INSTALLMENT_AMT)||'|'||
case when case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end = INSTALLMENT_AMT then 'TRUE' else 'FALSE' end ||'|'||
case when  V5BAL is not null then to_char(to_number(v5bal)/POWER(10,C8CED)) else '0.01' end||'|'||
to_char(gam.CLR_BAL_AMT)||'|'||
case when case when  V5BAL is not null then to_number(v5bal)/POWER(10,C8CED) else 0.01 end=gam.CLR_BAL_AMT then 'TRUE' else 'FALSE' end ||'|'||
LDT.DMD_AMT1||'|'||
ls.sp/c8pwd||'|'||
case when nvl(LDT.DMD_AMT1,0) = nvl(to_number(ls.sp)/c8pwd,0) then 'TRUE' else 'FALSE' end ||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end||'|'||
gac.DPD_CNTr||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end),0) = nvl(gac.DPD_CNTr,0) then 'TRUE' else 'FALSE' end||'|'||
to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end)||'|'||
to_char(DB_STAT_DATE - gac.DPD_CNTR)||'|'||
case when (to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YY') else '20-FEB-17' end)) = (to_char(DB_STAT_DATE - gac.DPD_CNTR)) then 'TRUE' else 'FALSE' end
from map_acc 
inner join map_cif on MAP_ACC.FIN_CIF_ID=map_cif.fin_cif_id
INNER join gfpf  on nvl(TRIM(gfpf.gfclc),' ')=nvl(TRIM(map_cif.gfclc),' ') and  TRIM(gfpf.gfcus)=TRIM(map_cif.gfcus)
inner JOIN tbaadm.gam ON gam.foracid = map_acc.fin_acc_num and gam.bank_id=get_param('BANK_ID') and gam.schm_type='LAA'
inner join v5pf on v5brnm||v5dlp||trim(v5dlr) = leg_acc_num
LEFT JOIN tbaadm.lrp ON lrp.acid = gam.acid and lrp.bank_id=get_param('BANK_ID')
inner join otpf on otbrnm||otdlp||trim(otdlr) = leg_acc_num
inner join (select ombrnm||omdlp||trim(omdlr) ompf_leg_num,sum(omnwp) omnwp from ompf inner join map_acc on ombrnm||omdlp||trim(omdlr) =leg_acc_num where schm_type='LAA' and ommvt='P' and ommvts in ('C','O') group by ombrnm||omdlp||trim(omdlr))OMPF ON OMPF_LEG_NUM=LEG_ACC_NUM
inner join c8pf on c8ccy = currency
left join iompf_laa on del_ref_num=LEG_ACC_NUM
left join r8pf on trim(r8lnp)=trim(v5dlp)
LEFT JOIN tbaadm.lht ON lht.acid = gam.acid and lht.bank_id=get_param('BANK_ID')
LEFT JOIN (select i1.* from tbaadm.itc i1
left join (select * from tbaadm.itc where bank_id='01')i2 on (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM > i2.INT_TBL_CODE_SRL_NUM)  
where i1.bank_id='01' and i2.entity_id is null)itc  ON itc.entity_id = gam.acid AND ITC.ENTITY_TYPE='ACCNT'  and itc.bank_id=get_param('BANK_ID')
INNER JOIN tbaadm.lam  ON lam.acid = gam.acid AND LAM.bank_id=get_param('BANK_ID')
left join operacc oper on  TRIM(oper.ompf_leg_num)=leg_acc_num
left join  nepf on trim(OPER_LEG_ACC)=trim(neab)||trim(nean)||trim(neas)
LEFT JOIN TBAADM.LAM L ON L.ACID=gam.ACID AND gam.BANK_ID=L.BANK_ID
LEFT JOIN TBAADM.GAM G1 ON G1.ACID=L.OP_ACID AND L.BANK_ID=G1.BANK_ID
LEFT JOIN tbaadm.gac ON gac.acid = gam.acid AND GAC.bank_id=get_param('BANK_ID')
left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
left join loan_account_finacle_int_rate lt on lt.int_acc_num=leg_acc_num
left JOIN TBAADM.RCT ON GAC.PURPOSE_OF_ADVN=RCT.REF_CODE AND RCT.BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='41'
left join (select o1.ombrnm||o1.omdlp||trim(o1.omdlr) del_ref_num,o1.omnwr ins,to_date(get_date_fm_btrv(o1.OmDTE),'YYYYMMDD') isd from ompf o1 inner join map_acc on o1.ombrnm||o1.omdlp||trim(o1.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='P' and om.OMMVTs='R' and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o1.ombrnm AND om.omdlp=o1.omdlp AND om.omdlr=o1.omdlr and oM.omdte=o1.omdte 
where o1.ommvt='P' and o1.OMMVTs='R' AND schm_type='LAA')ina on ina.del_ref_num=leg_acc_num
LEFT JOIN (select distinct ca1.foracid,ca1.flow_date,ca1.INSTALLMENT_AMT,ca1.PRINCIPAL_AMT,ca1.INTEREST_AMT,ca1.BANK_ID from custom.c_amort ca1 where ca1.bank_id='01' 
and ca1.SERIAL_NUM=(select min(ca2.serial_num) from custom.c_amort ca2 where INSTALLMENT_AMT<>0 and ca1.foracid=ca2.foracid group by ca2.foracid) ) lrS ON lrs.foracid = gam.foracid   
left join (select o2.ombrnm||o2.omdlp||trim(o2.omdlr) del_ref_num,o2.omnwr ins,to_date(get_date_fm_btrv(o2.OmDTE),'YYYYMMDD') isd from ompf o2 inner join map_acc on o2.ombrnm||o2.omdlp||trim(o2.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='I' and TRIM(om.OMMVTs) IS NULL and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o2.ombrnm AND om.omdlp=o2.omdlp AND om.omdlr=o2.omdlr and oM.omdte=o2.omdte 
where o2.ommvt='I' and TRIM(o2.OMMVTs) IS NULL AND schm_type='LAA')ii on ii.del_ref_num=leg_acc_num
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and TO_NUMBER(lsdte)<=TO_NUMBER(get_param('EODCYYMMDD')) and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
left join tbaadm.gct gct on gct.bank_id='01' 
where map_acc.schm_type='LAA' 
--and map_cif.individual='Y'  and gfpf.gfctp not in('EC','EV','NW');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_oda_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_oda_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_NONSTAFF_ODA.dat
drop table ACCT_INTEREST_TEMP_rep;
create table ACCT_INTEREST_TEMP_rep as
select * from ACCT_INTEREST where SCHM_TYPE<>'LAC';
CREATE INDEX ACCT_INTEREST_TEMP_IDX_r ON ACCT_INTEREST_TEMP(ACCOUNT_OPEN_DATE);
--ICV End date update for picking the Base rate based on the Interest table code start and End date added on 22-05-2017-----------------------------------
drop table  migr_int_icv_rep;
 create table migr_int_icv_rep as
 select icv.*,Lead(START_DATE-1, 1, to_date('31-12-2099','DD-MM-YYYY') ) OVER (partition by INT_TBL_CODE,CRNCY_CODE ORDER BY to_number(INT_TBL_VER_NUM)) AS modify_end_date
 from  tbaadm.icv where del_flg='N' and bank_id=get_param('BANK_ID') 
 order by int_tbl_code,crncy_code;
CREATE INDEX migr_int_icv_idx1_r ON migr_int_icv_rep(BASE_INT_TBL_CODE);
CREATE INDEX migr_int_icv_idx2_r ON migr_int_icv_rep(INT_VERSION);
CREATE INDEX migr_int_icv_idx3_r ON migr_int_icv_rep(RECORD_DATE);
CREATE UNIQUE INDEX migr_int_icv_idx4_R ON migr_int_icv_rep(INT_TBL_CODE, CRNCY_CODE, INT_TBL_VER_NUM, BANK_ID);
drop table acct_interest_tbl_rep;
create table acct_interest_tbl_rep
as
select a.*,tier_rate.b1 tier_base_rate,tier_rate.d1 tier_diff_rate,csp.int_tbl_code,base_pcnt_dr,base_pcnt_cr,
case 
when trim(s5trcc) like 'C%' then csp.int_tbl_code
when trim(s5trcd) is not null then s5trcd
when trim(s5trcc) is not null then s5trcc
when trim(s5trcd) is not null and trim(s5trcc) is not null then 'ZERO'
when trim(s5brrd) is not null and trim(s5brrc)  is not null then 'ZERO'
else csp.int_tbl_code end TBL_CODE_MIGR,
case 
when trim(s5trcd) is not null and LEG_ACC_NUM is not null and D9TLV0 <> 999999999999999 then (nvl(trim(b1),0)+nvl(trim(d1),0)) - (nvl(trim(base_pcnt_dr),0)+nvl(d.nrml_int_pcnt,0))
when trim(s5trcd) is not null and trim(s5trcd) <> 'ZERO' and D9TLV0 = 999999999999999 then (nvl(trim(b1),0)+nvl(trim(d1),0)) - (nvl(trim(base_pcnt_dr),0)+nvl(d.nrml_int_pcnt,0))----added on 26-09-2017 as per spira number 7035
when trim(s5trcd) is not null then  0
when nvl(trim(s5ratd),0) <> 0 then (nvl(trim(s5ratd),0) - (nvl(base_pcnt_dr,0)+nvl(d.nrml_int_pcnt,0)))
when (nvl(dr_base_rate,0) + nvl(diff_dr_rate,0) + nvl(dr_margin_rate,0)) <> nvl(base_pcnt_dr,0) + nvl(d.nrml_int_pcnt,0)
 then ((nvl(dr_base_rate,0) + nvl(diff_dr_rate,0) + nvl(dr_margin_rate,0)) - (nvl(base_pcnt_dr,0)+nvl(d.nrml_int_pcnt,0)))
else 0 end dr_pref_rate
,
case 
when trim(s5trcc) is not null then 0
when nvl(trim(s5ratc),0) <> 0 then (nvl(trim(s5ratc),0) - (nvl(base_pcnt_cr,0)+nvl(c.nrml_int_pcnt,0)))
when (nvl(cr_base_rate,0) + nvl(diff_cr_rate,0) - nvl(cr_margin_rate,0)) <> nvl(base_pcnt_cr,0) + nvl(c.nrml_int_pcnt,0) then 
((nvl(cr_base_rate,0) + nvl(diff_cr_rate,0) - nvl(cr_margin_rate,0))-(nvl(base_pcnt_cr,0)+nvl(c.nrml_int_pcnt,0)))
else 0 end cr_pref_rate,
nvl(c.nrml_int_pcnt,0)cr_nrml_int_pcnt,
nvl(d.nrml_int_pcnt,0)dr_nrml_int_pcnt
from
ACCT_INTEREST_TEMP_rep a
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on
a.schm_code = csp.schm_code and a.s5ccy = csp.crncy_code
left join (select a.int_tbl_code,a.crncy_code,a.int_tbl_ver_num,a.base_int_tbl_code from migr_int_icv a
inner join (select c.int_tbl_code,c.CRNCY_CODE,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM from migr_int_icv c where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
group by c.int_tbl_code,c.CRNCY_CODE)b on  a.int_tbl_code =b.int_tbl_code  and  a.CRNCY_CODE = b.CRNCY_CODE and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
)main_tbl  on  csp.int_tbl_code =main_tbl.int_tbl_code  and  csp.CRNCY_CODE = main_tbl.CRNCY_CODE
left join  (select *  from migr_int_icv c where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) base_rate on  base_rate.int_tbl_code =main_tbl.base_int_tbl_code  and  base_rate.CRNCY_CODE = main_tbl.CRNCY_CODE
left join (select c.* from tbaadm.ivs c
inner join (
select  a.int_tbl_code,a.crncy_code, MIN(a.INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM,a.INT_TBL_VER_NUM from  tbaadm.ivs a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.ivs where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'C'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID') 
and a.int_slab_dr_cr_flg = 'C'
group by a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM
)d on c.int_tbl_code=d.int_tbl_code and c.crncy_code=d.crncy_code and c.INT_SLAB_SRL_NUM=d.INT_SLAB_SRL_NUM and c.INT_TBL_VER_NUM=d.INT_TBL_VER_NUM
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') 
and c.int_slab_dr_cr_flg = 'C'  )C  on C.int_tbl_code =csp.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE
left join (select c.* from tbaadm.ivs c
inner join (
select  a.int_tbl_code,a.crncy_code, MIN(a.INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM,a.INT_TBL_VER_NUM from  tbaadm.ivs a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM 
from tbaadm.ivs where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
where a.del_flg = 'N' and a.bank_id = get_param('BANK_ID') 
and a.int_slab_dr_cr_flg = 'D' 
group by a.int_tbl_code,a.crncy_code,a.INT_TBL_VER_NUM
)d on c.int_tbl_code=d.int_tbl_code and c.crncy_code=d.crncy_code and c.INT_SLAB_SRL_NUM=d.INT_SLAB_SRL_NUM and c.INT_TBL_VER_NUM=d.INT_TBL_VER_NUM
where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') 
and c.int_slab_dr_cr_flg = 'D'  )d  on d.int_tbl_code =csp.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
left join d9pf_d4pf_d5pf_merge_dr tier_rate on tier_rate.leg_acc_num  =a.s5ab||a.s5an||a.s5as;
create index acct_idx_rep on acct_interest_tbl_rep(s5ab,s5an,s5as);
select
'EXTERNAL_ACC_NO'||'|'||
'LEG_BRANCH_ID'||'|'||
'LEG_BRANCH_NAME'  ||'|'||
'FINACLE_BRANCH_NAME' ||'|'||
'LEG_CLIENTNO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CURRENCY'||'|'||
'FINACLE_CURRENCY'||'|'||
'CURRENCY_MATCH'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_ACC_NUMBER'||'|'||
'FINACLE_ACCOUNT_NUM'||'|'||
'LEG_CUST_TYPE' ||'|'||
'LEG_ACCOUNT_TYPE'||'|'||
'FINACLE_SCHM_CODE'||'|'||
'FINACLE_SCHM_CODE_DESC' ||'|'||
'LEG_ACCOUNT_STATUS' ||'|'||
'FINACLE_ACCOUNT_STATUS' ||'|'||
'ACCOUNT_STATUS_MATCH' ||'|'||
'LEG_SEGMENT'||'|'||
'LEG_NET_RATE'||'|'||
'FIN_NET_RATE'||'|'||
'NET_RATE_MATCH'||'|'||
'LEG_ACCT_OPENDATE'||'|'||
'FINACLE_OPENDATE'||'|'||
'OPENDATE_MATCH'||'|'||
'LEG_LAST_TRANSACTION_DATE' ||'|'||
'FINACLE_LAST_TRANSACTION_DATE' ||'|'||
'LAST_TRANSACTION_DATE_MATCH' ||'|'||
--'LEG_CREDIT_PREF_RATE'||'|'||
'FIN_CREDIT_PREF_RATE'||'|'||
--'CREDIT_PREF_RATE_MATCH'||'|'||
--'LEG_DEBIT_PREF_RATE'||'|'||
'FIN_DEBIT_PREF_RATE'||'|'||
--'DEBIT_PREF_RATE_MATCH'||'|'||
'FIN_BASE_INTEREST_RATE'||'|'||
'INT_TABLE_CODE'||'|'||
'LEG_SECTOR_CODE'||'|'||
'FINACLE_SECTOR_CODE'||'|'||
'FINACLE_SECTOR_CODE_DESC'||'|'||
'LEG_SUB_SECTOR_CODE'||'|'||
'FINACLE_SUB_SECTOR_CODE'||'|'||
'FINACLE_SUB_SECTOR_CODE_DESC'||'|'||
'FINACLE_DPD_CNT' ||'|'||
'LEG_HOLDMAIL_FLAG' ||'|'||
'LEG_UNDELSTMT_FLAG' ||'|'||
'LEG_CURRENT_BALANCE'||'|'||
'FINACLE_CURRENT_BALANCE'||'|'||
'CURRENT_BALANCE_MATCH'||'|'||
'LEG_LEGDER_BALANCE'||'|'||
'FIN_LEDGER_BALANCE'||'|'||
'LEDGER_BALANCE_MATCH'||'|'||
'MEMOPAD FLAG'||'|'||
--'LEG_PAST_DUE_DATE'||'|'||
--'FIN_PAST_DUE_DATE'||'|'||
--'LEG_DUE_AMT'||'|'||
--'FIN_DUE_AMT'||'|'||
--'DUE_AMT_MATCH'||'|'||
'C5_CODE'||'|'||
'MANAGER_CODE'||'|'||
'LEG_STATEMENT_FREQUENCY'||'|'||
'FIN_STATEMENT_FREQUENCY'||'|'||
'STATEMENT_FREQUENCY_MATCH'||'|'||
'LEG_INT_FREQ'||'|'||
'FIN_INT_FREQ'||'|'||
--'INT_FREQ_MATCH'||'|'||
'C3_CODE'||'|'||
'ASSET_CLASSIFICATION'||'|'||
'LEG_ACCRUED_AMT'||'|'||
'FIN_ACCRUED_AMT'||'|'||
'ACCRUED_AMT_MATCH'||'|'||
'LEG_DIVISION'||'|'||
'FIN_DIVISION'||'|'||
'LEG_SUB_DIVISION'||'|'||
'FIN_SUB_DIVISION'
from dual
union all
select distinct
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'||
to_char(CABRN) ||'|'||
to_char(SOL_DESC) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.leg_scas) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.acct_crncy_code)||'|'||
case when map_acc.CURRENCY=gam.acct_crncy_code then 'TRUE' else 'FALSE' end  ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(gam.cif_id) ||'|'||
TO_CHAR(map_acc.leg_branch_id||map_acc.leg_scan||map_acc.leg_scas)||'|'||
to_char(gam.foracid)||'|'||
TO_CHAR(MAP_ACC.LEG_CUST_TYPE) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(gam.schm_code)||'|'||
TO_CHAR(GSP.SCHM_DESC) ||'|'||
case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
      when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
           when scai20 = 'Y' then 'I'                           
           else 'A' end ||'|'||
         TO_CHAR(CAM.ACCT_STATUS) ||'|'||
CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
      when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
           when scai20 = 'Y' then 'I'                           
           else 'A' end) =     TO_CHAR(CAM.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END ||'|'|| 
to_char(itc.INT_TBL_CODE)||'|'||
to_char(nvl(trim(DR_BASE_RATE),0)+nvl(trim(DR_MARGIN_RATE),0)+nvl(trim(TIER_BASE_RATE),0)+nvl(trim(TIER_DIFF_RATE),0)+nvl(trim(inte.S5RATD),0))||'|'||
to_char(nvl(trim(BASE_PCNT_DR),0)+nvl(trim(DR_PREF_RATE),0)+nvl(trim(DR_NRML_INT_PCNT),0))||'|'||
case when (to_char(nvl(trim(DR_BASE_RATE),0)+nvl(trim(DR_MARGIN_RATE),0)+nvl(trim(TIER_BASE_RATE),0)+nvl(trim(TIER_DIFF_RATE),0)))=(to_char(nvl(trim(BASE_PCNT_DR),0)+nvl(trim(DR_PREF_RATE),0)+nvl(trim(DR_NRML_INT_PCNT),0))) then 'TRUE' else 'FALSE' end ||'|'||
case when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' and scdle<>0 and to_date(get_date_fm_btrv(scdle),'YYYYMMDD')<to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
         then to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MON-YYYY')
         when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' then
         to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else ' '    end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when (case when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' and scdle<>0 and to_date(get_date_fm_btrv(scdle),'YYYYMMDD')<to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
         then to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MON-YYYY')
         when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' then
         to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else ' '    end)= TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end||'|'||
case     when ext_acc is not null then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')
    when scdle <>0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ') end||'|'||
TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY') ||'|'||
CASE WHEN (case     when ext_acc is not null then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')
    when scdle <>0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ') end)     = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ')  THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(inte.S5RATC)||'|'||
to_char(itc.ID_CR_PREF_PCNT)||'|'||
--case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end ||'|'||
--to_char(inte.S5RATD)||'|'||
to_char(itc.ID_DR_PREF_PCNT)||'|'||
--case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(inte.BASE_PCNT_DR)||'|'||
to_char(itc.INT_TBL_CODE) ||'|'||
to_char(gfpf.GFCA2) ||'|'||
to_char(gac.sector_code) ||'|'||
TO_CHAR(D.localetext) ||'|'||
to_char(gfpf.GFCA2)  ||'|'||
to_char(gac.sub_sector_code)||'|'||
TO_CHAR(E.localetext) ||'|'||
to_char(gac.dpd_cntr) ||'|'||
TO_CHAR(SCAI64) ||'|'||
TO_CHAR(SCAIJ1) ||'|'||    
to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ||'|'||
to_char(clr_bal_amt) ||'|'||
case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ||'|'||
to_char((scbal - SCSUMA)/POWER(10,C8CED))||'|'|| 
to_char(clr_bal_amt + future_bal_amt)||'|'||
case when (to_char((scbal - SCSUMA)/POWER(10,C8CED))) = (to_char(clr_bal_amt + future_bal_amt)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end)||'|'||
--to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MM-YYYY')||'|'||
--to_char(gac.PD_XFER_DATE)||'|'||
--to_char(case when past.acc_num is not null then to_char(nvl(iis.amt,0)) else '0' end)||'|'||
--to_char(Suspence_amt)||'|'||
--INT_SUSPENSE_AMT||'|'||
--case when nvl(abs(to_char(case when past.acc_num is not null then to_char(nvl(iis.amt,0)) else '0' end)),0)=nvl(abs(INT_SUSPENSE_AMT),0) then 'TRUE' else 'FALSE' end||'|'||
to_char(scc5r)||'|'||
to_char(scaco)||'|'||
--sa.PS_FREQ_TYPE||'|'||
to_char(SCSFC)||'|'||
ast.PS_FREQ_TYPE||'|'||
case when nvl(trim(case when scaiG6='Y' then ''      
when substr(SCSFC,0,1) in ('A','B','C','D','E','F','G','H','I','J','K','L') then 'Y'
         when substr(SCSFC,0,1) in ('Z') then 'D'
         when substr(SCSFC,0,1) in ('V') then 'M'
         when substr(SCSFC,0,1) in ('W') then 'W'
         when substr(SCSFC,0,1) in ('Y') then 'F'
         when substr(SCSFC,0,1) in ('S','T','U') then 'Q'
         when substr(SCSFC,0,1) in ('M','N','O','P','Q','R') then 'H'
         else to_char(gsp.ps_freq_type)
    end),'*') = nvl(trim(ast.PS_FREQ_TYPE),'*') then 'TRUE' else 'FALSE' end||'|'||
S5IFQD||'|'||
to_char(eit.INT_FREQ_TYPE_DR)||'|'||
to_char(trim(scc3r)) ||'|'||
SUB_CLASSIFICATION_USER ||'|'||
nvl(leit.NORMAL_CREDIT_ACCRUED_AMT,0)||'|'||
eit.NRML_ACCRUED_AMOUNT_CR ||'|'||
case when nvl(leit.NORMAL_CREDIT_ACCRUED_AMT,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end||'||'||
case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end||'|'||
c_gac.division||'|'||
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end ||'|'||
c_gac.SUB_DIVISION
from (select * from map_acc where schm_type='ODA')map_acc
inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
inner join c8pf  on c8ccy = scccy
left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
left join acct_interest_tbl_rep inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
left join (select * from map_cif where del_flg<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
left join gfpf gf on trim(gf.gfcus)=map_cif.gfcus and nvl(trim(gf.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and gf.gfcpnc=MAP_CIF.GFCPNC
left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
left join (select map_acc.fin_acc_num fin_num, oper.fin_acc_num operative_acc_num  from ubpf inner join map_acc on ubab=leg_branch_id and uban=leg_scan and ubas=leg_scas
inner join (select leg_branch_id||leg_Scan||leg_Scas leg_acc_num,fin_acc_num from map_acc where SCHM_TYPE<>'OOO') oper on ubnab||ubnan||ubnas=oper.leg_acc_num 
where map_acc.schm_type<>'OOO') oper on oper.fin_num=fin_acc_num
left join (select distinct main.fin_acc_num Main_fin,main.schm_type main_schm,oper.fin_acc_num oper_fin,oper.schm_type oper_type from gvpf_ods
inner join map_cif on nvl(gvclc,' ')=nvl(map_cif.gfclc,' ') and  gvcus=map_cif.gfcus 
inner join map_acc main on main.fin_cif_id=map_cif.fin_cif_id and schm_type='PCA' AND GVCCY=MAIN.CURRENCY
inner join map_acc oper on oper.leg_branch_id||oper.leg_Scan||oper.leg_Scas=trim(GVABF)||trim(GVANF)||trim(GVASF) AND GVCCY=OPER.CURRENCY and oper.schm_type <> 'OOO') oper1 on oper1.main_fin=map_acc.fin_acc_num 
left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
union 
select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
left join (
select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
union all
select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
union all
select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas --code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
left join freetext on map_acc.fin_acc_num=freetext.acid
left join gfpf on gfpf.gfcpnc = scpf.scan
left join capf on CABBN = scpf.scab
left join sanction_limit on sanction_num=map_acc.fin_acc_num
INNER JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = fin_acc_num
--left join statements_accounts sa on sa.account_number=foracid
LEFT JOIN (select * from tbaadm.cam where bank_id=get_param('BANK_ID'))cam ON cam.acid = gam.acid
LEFT JOIN (select * from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
left join casaod_eit leit on trim(leit.account_number)=gam.foracid
LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id =gam.acid
LEFT JOIN (select * from TBAADM.SOL where bank_id=get_param('BANK_ID'))sol ON sol.SOL_ID = MAP_ACC.FIN_SOL_ID
left join crmuser.accounts b on b.orgkey = map_acc.fin_cif_id
LEFT JOIN(SELECT localetext, VALUE, categorytype FROM crmuser.categories a, crmuser.category_lang b WHERE a.categoryid = b.categoryid
AND categorytype = 'SECTOR_CODE' AND a.bank_id = b.bank_id AND a.bank_id =get_param('BANK_ID') ) d ON d.VALUE = gac.sector_code
LEFT JOIN(SELECT localetext, VALUE, categorytype FROM crmuser.categories a, crmuser.category_lang b WHERE a.categoryid = b.categoryid
AND categorytype = 'SUB_SECTOR_CODE' AND a.bank_id = b.bank_id AND a.bank_id = get_param('BANK_ID')) E ON E.VALUE = gac.sub_sector_code
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
left join (select * from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
left join tbaadm.acd on B2K_ID=gam.acid
left join (select acid,INT_SUSPENSE_AMT,DATE_NON_ACCRUE from tbaadm.ta_cot where bank_id=get_param('BANK_ID') )ldt on ldt.acid=gam.acid
left join iis_account iis on map_acc.fin_acc_num=iis.account
left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid
where (B.STAFFFLAG ='N' or b.staffflag is NULL);
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_pca.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_pca.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_NONSTAFF_ODA.dat
select
'EXTERNAL_ACC_NO'||'|'||
'LEG_BRANCH_ID'||'|'||
'LEG_BRANCH_NAME'  ||'|'||
'FINACLE_BRANCH_NAME' ||'|'||
'LEG_CLIENTNO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CURRENCY'||'|'||
'FINACLE_CURRENCY'||'|'||
'CURRENCY_MATCH'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_ACC_NUMBER'||'|'||
'FINACLE_ACCOUNT_NUM'||'|'||
'LEG_CUST_TYPE' ||'|'||
'LEG_ACCOUNT_TYPE'||'|'||
'FINACLE_SCHM_CODE'||'|'||
'FINACLE_SCHM_CODE_DESC' ||'|'||
'LEG_ACCOUNT_STATUS' ||'|'||
'FINACLE_ACCOUNT_STATUS' ||'|'||
'ACCOUNT_STATUS_MATCH' ||'|'||
'LEG_SEGMENT'||'|'||
'LEG_NET_RATE'||'|'||
'FIN_NET_RATE'||'|'||
'NET_RATE_MATCH'||'|'||
'LEG_ACCT_OPENDATE'||'|'||
'FINACLE_OPENDATE'||'|'||
'OPENDATE_MATCH'||'|'||
'LEG_LAST_TRANSACTION_DATE' ||'|'||
'FINACLE_LAST_TRANSACTION_DATE' ||'|'||
'LAST_TRANSACTION_DATE_MATCH' ||'|'||
--'LEG_CREDIT_PREF_RATE'||'|'||
'FIN_CREDIT_PREF_RATE'||'|'||
--'CREDIT_PREF_RATE_MATCH'||'|'||
--'LEG_DEBIT_PREF_RATE'||'|'||
'FIN_DEBIT_PREF_RATE'||'|'||
--'DEBIT_PREF_RATE_MATCH'||'|'||
'FIN_BASE_INTEREST_RATE'||'|'||
'INT_TABLE_CODE'||'|'||
'LEG_SECTOR_CODE'||'|'||
'FINACLE_SECTOR_CODE'||'|'||
'FINACLE_SECTOR_CODE_DESC'||'|'||
'LEG_SUB_SECTOR_CODE'||'|'||
'FINACLE_SUB_SECTOR_CODE'||'|'||
'FINACLE_SUB_SECTOR_CODE_DESC'||'|'||
'FINACLE_DPD_CNT' ||'|'||
'LEG_HOLDMAIL_FLAG' ||'|'||
'LEG_UNDELSTMT_FLAG' ||'|'||
'LEG_CURRENT_BALANCE'||'|'||
'FINACLE_CURRENT_BALANCE'||'|'||
'CURRENT_BALANCE_MATCH'||'|'||
'LEG_LEGDER_BALANCE'||'|'||
'FIN_LEDGER_BALANCE'||'|'||
'LEDGER_BALANCE_MATCH'||'|'||
'MEMOPAD FLAG'||'|'||
--'LEG_PAST_DUE_DATE'||'|'||
--'FIN_PAST_DUE_DATE'||'|'||
--'LEG_DUE_AMT'||'|'||
--'FIN_DUE_AMT'||'|'||
--'DUE_AMT_MATCH'||'|'||
'C5_CODE'||'|'||
'MANAGER_CODE'||'|'||
'LEG_STATEMENT_FREQUENCY'||'|'||
'FIN_STATEMENT_FREQUENCY'||'|'||
'STATEMENT_FREQUENCY_MATCH'||'|'||
'LEG_INT_FREQ'||'|'||
'FIN_INT_FREQ'||'|'||
--'INT_FREQ_MATCH'||'|'||
'C3_CODE'||'|'||
'ASSET_CLASSIFICATION'||'|'||
'LEG_ACCRUED_AMT'||'|'||
'FIN_ACCRUED_AMT'||'|'||
'ACCRUED_AMT_MATCH'
from dual
union all
select distinct
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'||
to_char(CABRN) ||'|'||
to_char(SOL_DESC) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.leg_scas) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.acct_crncy_code)||'|'||
case when map_acc.CURRENCY=gam.acct_crncy_code then 'TRUE' else 'FALSE' end  ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(gam.cif_id) ||'|'||
TO_CHAR(map_acc.leg_branch_id||map_acc.leg_scan||map_acc.leg_scas)||'|'||
to_char(gam.foracid)||'|'||
TO_CHAR(MAP_ACC.LEG_CUST_TYPE) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(gam.schm_code)||'|'||
TO_CHAR(GSP.SCHM_DESC) ||'|'||
case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
      when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
           when scai20 = 'Y' then 'I'                           
           else 'A' end ||'|'||
         TO_CHAR(CAM.ACCT_STATUS) ||'|'||
CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
      when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
           when scai20 = 'Y' then 'I'                           
           else 'A' end) =     TO_CHAR(CAM.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END ||'|'|| 
to_char(itc.INT_TBL_CODE)||'|'||
to_char(nvl(trim(DR_BASE_RATE),0)+nvl(trim(DR_MARGIN_RATE),0)+nvl(trim(TIER_BASE_RATE),0)+nvl(trim(TIER_DIFF_RATE),0)+nvl(trim(inte.S5RATD),0))||'|'||
to_char(nvl(trim(BASE_PCNT_DR),0)+nvl(trim(DR_PREF_RATE),0)+nvl(trim(DR_NRML_INT_PCNT),0))||'|'||
case when (to_char(nvl(trim(DR_BASE_RATE),0)+nvl(trim(DR_MARGIN_RATE),0)+nvl(trim(TIER_BASE_RATE),0)+nvl(trim(TIER_DIFF_RATE),0)))=(to_char(nvl(trim(BASE_PCNT_DR),0)+nvl(trim(DR_PREF_RATE),0)+nvl(trim(DR_NRML_INT_PCNT),0))) then 'TRUE' else 'FALSE' end ||'|'||
case when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' and scdle<>0 and to_date(get_date_fm_btrv(scdle),'YYYYMMDD')<to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
         then to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MON-YYYY')
         when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' then
         to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else ' '    end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when (case when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' and scdle<>0 and to_date(get_date_fm_btrv(scdle),'YYYYMMDD')<to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
         then to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MON-YYYY')
         when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' then
         to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else ' '    end)= TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end||'|'||
case     when ext_acc is not null then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')
    when scdle <>0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ') end||'|'||
TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY') ||'|'||
CASE WHEN (case     when ext_acc is not null then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')
    when scdle <>0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ') end)     = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ')  THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(inte.S5RATC)||'|'||
to_char(itc.ID_CR_PREF_PCNT)||'|'||
--case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end ||'|'||
--to_char(inte.S5RATD)||'|'||
to_char(itc.ID_DR_PREF_PCNT)||'|'||
--case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(inte.BASE_PCNT_DR)||'|'||
to_char(itc.INT_TBL_CODE) ||'|'||
to_char(gfpf.GFCA2) ||'|'||
to_char(gac.sector_code) ||'|'||
TO_CHAR(D.localetext) ||'|'||
to_char(gfpf.GFCA2)  ||'|'||
to_char(gac.sub_sector_code)||'|'||
TO_CHAR(E.localetext) ||'|'||
to_char(gac.dpd_cntr) ||'|'||
TO_CHAR(SCAI64) ||'|'||
TO_CHAR(SCAIJ1) ||'|'||    
to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ||'|'||
to_char(clr_bal_amt) ||'|'||
case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ||'|'||
to_char((scbal - SCSUMA)/POWER(10,C8CED))||'|'|| 
to_char(clr_bal_amt + future_bal_amt)||'|'||
case when (to_char((scbal - SCSUMA)/POWER(10,C8CED))) = (to_char(clr_bal_amt + future_bal_amt)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end)||'|'||
--to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MM-YYYY')||'|'||
--to_char(gac.PD_XFER_DATE)||'|'||
--to_char(case when past.acc_num is not null then to_char(nvl(iis.amt,0)) else '0' end)||'|'||
--to_char(Suspence_amt)||'|'||
--INT_SUSPENSE_AMT||'|'||
--case when nvl(abs(to_char(case when past.acc_num is not null then to_char(nvl(iis.amt,0)) else '0' end)),0)=nvl(abs(INT_SUSPENSE_AMT),0) then 'TRUE' else 'FALSE' end||'|'||
to_char(scc5r)||'|'||
to_char(scaco)||'|'||
--sa.PS_FREQ_TYPE||'|'||
to_char(SCSFC)||'|'||
ast.PS_FREQ_TYPE||'|'||
case when nvl(trim(case when scaiG6='Y' then ''      
when substr(SCSFC,0,1) in ('A','B','C','D','E','F','G','H','I','J','K','L') then 'Y'
         when substr(SCSFC,0,1) in ('Z') then 'D'
         when substr(SCSFC,0,1) in ('V') then 'M'
         when substr(SCSFC,0,1) in ('W') then 'W'
         when substr(SCSFC,0,1) in ('Y') then 'F'
         when substr(SCSFC,0,1) in ('S','T','U') then 'Q'
         when substr(SCSFC,0,1) in ('M','N','O','P','Q','R') then 'H'
         else to_char(gsp.ps_freq_type)
    end),'*') = nvl(trim(ast.PS_FREQ_TYPE),'*') then 'TRUE' else 'FALSE' end||'|'||
S5IFQD||'|'||
to_char(eit.INT_FREQ_TYPE_DR)||'|'||
to_char(trim(scc3r)) ||'|'||
SUB_CLASSIFICATION_USER ||'|'||
nvl(leit.NORMAL_CREDIT_ACCRUED_AMT,0)||'|'||
eit.NRML_ACCRUED_AMOUNT_CR ||'|'||
case when nvl(leit.NORMAL_CREDIT_ACCRUED_AMT,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end
from (select * from map_acc where schm_type='PCA')map_acc
inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
inner join c8pf  on c8ccy = scccy
left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
left join acct_interest_tbl_rep inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
left join (select * from map_cif where del_flg<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
left join gfpf gf on trim(gf.gfcus)=map_cif.gfcus and nvl(trim(gf.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and gf.gfcpnc=MAP_CIF.GFCPNC
left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
left join (select map_acc.fin_acc_num fin_num, oper.fin_acc_num operative_acc_num  from ubpf inner join map_acc on ubab=leg_branch_id and uban=leg_scan and ubas=leg_scas
inner join (select leg_branch_id||leg_Scan||leg_Scas leg_acc_num,fin_acc_num from map_acc where SCHM_TYPE<>'OOO') oper on ubnab||ubnan||ubnas=oper.leg_acc_num 
where map_acc.schm_type<>'OOO') oper on oper.fin_num=fin_acc_num
left join (select distinct main.fin_acc_num Main_fin,main.schm_type main_schm,oper.fin_acc_num oper_fin,oper.schm_type oper_type from gvpf_ods
inner join map_cif on nvl(gvclc,' ')=nvl(map_cif.gfclc,' ') and  gvcus=map_cif.gfcus 
inner join map_acc main on main.fin_cif_id=map_cif.fin_cif_id and schm_type='PCA' AND GVCCY=MAIN.CURRENCY
inner join map_acc oper on oper.leg_branch_id||oper.leg_Scan||oper.leg_Scas=trim(GVABF)||trim(GVANF)||trim(GVASF) AND GVCCY=OPER.CURRENCY and oper.schm_type <> 'OOO') oper1 on oper1.main_fin=map_acc.fin_acc_num 
left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
union 
select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
left join (
select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
union all
select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
union all
select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas --code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
left join freetext on map_acc.fin_acc_num=freetext.acid
left join gfpf on gfpf.gfcpnc = scpf.scan
left join capf on CABBN = scpf.scab
left join sanction_limit on sanction_num=map_acc.fin_acc_num
INNER JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = fin_acc_num
--left join statements_accounts sa on sa.account_number=foracid
LEFT JOIN (select * from tbaadm.cam where bank_id=get_param('BANK_ID'))cam ON cam.acid = gam.acid
LEFT JOIN (select * from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
left join casaod_eit leit on trim(leit.account_number)=gam.foracid
LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id =gam.acid
LEFT JOIN (select * from TBAADM.SOL where bank_id=get_param('BANK_ID'))sol ON sol.SOL_ID = MAP_ACC.FIN_SOL_ID
left join crmuser.accounts b on b.orgkey = map_acc.fin_cif_id
LEFT JOIN(SELECT localetext, VALUE, categorytype FROM crmuser.categories a, crmuser.category_lang b WHERE a.categoryid = b.categoryid
AND categorytype = 'SECTOR_CODE' AND a.bank_id = b.bank_id AND a.bank_id =get_param('BANK_ID') ) d ON d.VALUE = gac.sector_code
LEFT JOIN(SELECT localetext, VALUE, categorytype FROM crmuser.categories a, crmuser.category_lang b WHERE a.categoryid = b.categoryid
AND categorytype = 'SUB_SECTOR_CODE' AND a.bank_id = b.bank_id AND a.bank_id = get_param('BANK_ID')) E ON E.VALUE = gac.sub_sector_code
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
left join (select * from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
left join tbaadm.acd on B2K_ID=gam.acid
left join (select acid,INT_SUSPENSE_AMT,DATE_NON_ACCRUE from tbaadm.ta_cot where bank_id=get_param('BANK_ID') )ldt on ldt.acid=gam.acid
left join iis_account iis on map_acc.fin_acc_num=iis.account
left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
where (B.STAFFFLAG ='N' or b.staffflag is NULL);
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_retail_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_retail_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_RETAIL_SBCA.dat
select
'EXTERNAL_ACC_NO',
  'LEG_BRANCH',
  'FINACLE_SOL_ID',
  'BRANCH_ID_MATCH',
  'LEG_CLIENTNO',
  'LEG_SUFFIX',
  'LEG_CURRENCY',
  'FINACLE_CURRENCY',
  'CURRENCY_MATCH',
  'FINACLE_CIF_ID',
  'FINACLE_ACCOUNT_NUMBER',
  'LEG_CUST_TYPE',
  'LEG_ACCOUNT_TYPE',
  'FINACLE_SCHM_CODE',
  'SCHM_DESC',
  'LEG_ACCOUNT_STATUS' ,
  'FINACLE_ACCOUNT_STATUS' ,
  'ACCOUNT_STATUS_MATCH' ,
  'LEG_ACCOUNT_OPENDATE',
  'FINACLE_ACCOUNT_OPENDATE',
  'ACCOUNT_OPENDATE_MATCH',
  'LEG_LAST_TRANSACTION_DATE' ,
  'FINACLE_LAST_TRANSACTION_DATE' ,
  'LAST_TRANSACTION_DATE_MATCH' ,
  'LEG_HOLDMAIL_FLAG' ,
  'LEG_UNDELSTMT_FLAG' ,
  'FINACLE_HOLDMAIL/UNDELSTMT_FLAG' ,
  'LEG_MODE_OF_OPERATION' ,
  'FINACLE_MODE_OF_OPERATION' ,
  'MODE_OF_OPERATION_MATCH' ,
  'LEG_CREDIT_PREF_RATE',
  'FIN_CREDIT_PREF_RATE',
  'CREDIT_PREF_RATE_MATCH',
  'LEG_DEBIT_PREF_RATE',
  'FIN_DEBIT_PREF_RATE',
  'DEBIT_PREF_RATE_MATCH',
  'FIN_BASE_INTEREST_RATE',
  'INT_TABLE_CODE',
  'LEG_CURRENT_BALANCE',
  'FINACLE_CURRENT_BALANCE',
  'CURRENT_BALANCE_MATCH',
  'LEG_LEGDER_BALANCE' ,
  'FIN_LEDGER_BALANCE',
  'LEDGER_BALANCE_MATCH',
  'MEMOPAD FLAG',
  'LEG_PAST_DUE_DATE',
  'FIN_PAST_DUE_DATE',
  'LEG_DUE_AMT',
  'C5_CODE',
  'MANAGER_CODE',
  'LEG_STATEMENT_FREQUENCY',
  'FIN_STATEMENT_FREQUENCY',
  'CR_INT_FREQ_FIELD',
  'LEG_CR__INT_FREQ',
  'FIN_CR_INT_FREQ',
  'CR_INT_FREQ_MATCH' ,
  'LEG_C3CODE',
  'FIN_ASSET_CLASS',
  'CREDIT_TIER_CODE',
  'DEBIT_TIER_CODE',
  'LEG_ACCRUED_AMT',
  'FIN_ACCRUED_AMT',
  'ACCRUED_AMT_MATCH',
  'LEG_DIVISION',
'FIN_DIVISION',
'LEG_SUB_DIVISION',
'FIN_SUB_DIVISION'
  from dual
  union all
  select distinct
  to_char(map_acc.EXTERNAL_ACC),
  to_char(map_acc.leg_branch_id) ,
  to_char(gam.sol_id) ,
  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
  to_char(map_acc.leg_scan) ,
  to_char(map_acc.LEG_SCAS) ,
  to_char(scccy),
  to_char(gam.acct_crncy_code),
  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
  to_char(gam.cif_id),
  to_char(gam.foracid),
  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
  to_char(map_acc.leg_acct_type),
  to_char(gam.schm_code),
  to_char(gsp.SCHM_DESC),
  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
                   when scai20 = 'Y' then 'I'                           
             else 'A' end ,
  TO_CHAR(SMT.ACCT_STATUS) ,
  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
                   when scai20 = 'Y' then 'I'                           
             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end ,
  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end,
  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY')   , 
  case when (case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
  TO_CHAR(SCAI64) ,
  TO_CHAR(SCAIJ1) ,    
  to_char(alr.ACCT_LABEL)    ,
  case when SCAIC7='Y' then lpad('006',5,' ')
                   when scai92='Y' then lpad('011',5,' ')
              else lpad('999',5,' ') end ,
  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
  CASE WHEN (case when SCAIC7='Y' then '006'
                   when scai92='Y' then '011'
              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
  to_char(inte.S5RATC),
  to_char(itc.CUST_CR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.S5RATD),
  to_char(itc.CUST_DR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.BASE_PCNT_DR),
  to_char(itc.INT_TBL_CODE) ,
  to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ,
  to_char(clr_bal_amt) ,
  case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
  to_char((scbal - SCSUMA)/POWER(10,C8CED)), 
  to_char(clr_bal_amt + FUTURE_BAL_AMT),
  case when to_char((scbal - SCSUMA)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
  to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MON-YYYY') else lpad(' ',10,' ') end),
  to_char(gac.PD_XFER_DATE),
  to_char(nvl(abs(Suspence_amt),0)),
  to_char(scc5r),
  to_char(scaco),
  to_char(SCSFC),
  to_char(ast.PS_FREQ_TYPE),
  to_char(S5IFQC),
  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
             else lpad(' ',1,' ') end,
  to_char(eit.INT_FREQ_TYPE_CR),
  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
  to_char(trim(scc3r)) ,
  to_char(SUB_CLASSIFICATION_USER),
  to_char(inte.S5TRCC) ,
  to_char(inte.S5TRCD) ,
  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end,
  case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.division,
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.SUB_DIVISION
  from (select * from map_acc where map_acc.schm_type in( 'SBA','CAA') and map_acc.schm_code<>'PISLA')map_acc
      inner join (select * from scpf where trim(scaco)='199')scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
      inner join c8pf  on c8ccy = scccy
      inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
  INNER JOIN (select orgkey,staffflag from crmuser.accounts where staffflag='N' or trim(staffflag) is NULL) acct ON acct.orgkey = map_acc.fin_cif_id
      left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
      left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
      left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
      left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
      LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
             left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
      left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
      left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
      LEFT JOIN (select acid,ACCT_STATUS from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
  left join (select acid,ACCT_LABEL from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'Y' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss1  on map_acc.schm_code = gss1.schm_code
  left join (select schm_code,crncy_code from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
  left join (select schm_code,INT_PAID_FLG,INT_FREQ_TYPE_CR,SCHM_DESC  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
  left join (select INT_FREQ_TYPE_CR,entity_id,NRML_ACCRUED_AMOUNT_CR from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
      left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
      union 
      select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
      left join (
      select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
      union all
      select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
      union all
      select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
      left join (select acid from tbaadm.ta_cot where bank_id='01') cot on gam.acid=cot.acid
      left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
      left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas--code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
      left join freetext free on map_acc.fin_acc_num=free.acid
      left join custom_eit leit on trim(leit.foracid)=gam.foracid
      left join tbaadm.acd on B2K_ID=gam.acid
      left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
	    left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid;
--   select
--  'LEG_BRANCH',
--  'FINACLE_SOL_ID',
--  'BRANCH_ID_MATCH',
--  'LEG_CLIENTNO',
--  'LEG_SUFFIX',
--  'LEG_CURRENCY',
--  'FINACLE_CURRENCY',
--  'CURRENCY_MATCH',
--  'FINACLE_CIF_ID',
--  'FINACLE_ACCOUNT_NUMBER',
--  'LEG_CUST_TYPE',
--  'LEG_ACCOUNT_TYPE',
--  'FINACLE_SCHM_CODE',
--  'SCHM_DESC',
--  'LEG_ACCOUNT_STATUS' ,
--  'FINACLE_ACCOUNT_STATUS' ,
--  'ACCOUNT_STATUS_MATCH' ,
--  'LEG_ACCOUNT_OPENDATE',
--  'FINACLE_ACCOUNT_OPENDATE',
--  'ACCOUNT_OPENDATE_MATCH',
--  'LEG_LAST_TRANSACTION_DATE' ,
--  'FINACLE_LAST_TRANSACTION_DATE' ,
--  'LAST_TRANSACTION_DATE_MATCH' ,
--  'LEG_HOLDMAIL_FLAG' ,
--  'LEG_UNDELSTMT_FLAG' ,
--  'FINACLE_HOLDMAIL/UNDELSTMT_FLAG' ,
--  'LEG_MODE_OF_OPERATION' ,
--  'FINACLE_MODE_OF_OPERATION' ,
--  'MODE_OF_OPERATION_MATCH' ,
--  'LEG_CREDIT_PREF_RATE',
--  'FIN_CREDIT_PREF_RATE',
--  'CREDIT_PREF_RATE_MATCH',
--  'LEG_DEBIT_PREF_RATE',
--  'FIN_DEBIT_PREF_RATE',
--  'DEBIT_PREF_RATE_MATCH',
--  'FIN_BASE_INTEREST_RATE',
--  'INT_TABLE_CODE',
--  'LEG_CURRENT_BALANCE',
--  'FINACLE_CURRENT_BALANCE',
--  'CURRENT_BALANCE_MATCH',
--  'LEG_LEGDER_BALANCE' ,
--  'FIN_LEDGER_BALANCE',
--  'LEDGER_BALANCE_MATCH',
--  'MEMOPAD FLAG',
--  'LEG_PAST_DUE_DATE',
--  'FIN_PAST_DUE_DATE',
--  'LEG_DUE_AMT',
--  'C5_CODE',
--  'MANAGER_CODE',
--  'LEG_STATEMENT_FREQUENCY',
--  'FIN_STATEMENT_FREQUENCY',
--  'CR_INT_FREQ_FIELD',
--  'LEG_CR__INT_FREQ',
--  'FIN_CR_INT_FREQ',
--  'CR_INT_FREQ_MATCH' ,
--  'LEG_C3CODE',
--  'FIN_ASSET_CLASS',
--  'CREDIT_TIER_CODE',
--  'DEBIT_TIER_CODE',
--  'LEG_ACCRUED_AMT',
--  'FIN_ACCRUED_AMT',
--  'ACCRUED_AMT_MATCH'
--  from dual
--  union all
--  select distinct
--  to_char(map_acc.leg_branch_id) ,
--  to_char(gam.sol_id) ,
--  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
--  to_char(map_acc.leg_scan) ,
--  to_char(map_acc.LEG_SCAS) ,
--  to_char(scccy),
--  to_char(gam.acct_crncy_code),
--  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
--  to_char(gam.cif_id),
--  to_char(gam.foracid),
--  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
--  to_char(map_acc.leg_acct_type),
--  to_char(gam.schm_code),
--  to_char(gsp.SCHM_DESC),
--  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--                   when scai20 = 'Y' then 'I'                           
--             else 'A' end ,
--  TO_CHAR(SMT.ACCT_STATUS) ,
--  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--                   when scai20 = 'Y' then 'I'                           
--             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
--  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end ,
--  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
--  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
--  case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end,
--  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY')   , 
--  case when (case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
--  TO_CHAR(SCAI64) ,
--  TO_CHAR(SCAIJ1) ,    
--  to_char(alr.ACCT_LABEL)    ,
--  case when SCAIC7='Y' then lpad('006',5,' ')
--                   when scai92='Y' then lpad('011',5,' ')
--              else lpad('999',5,' ') end ,
--  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
--  CASE WHEN (case when SCAIC7='Y' then '006'
--                   when scai92='Y' then '011'
--              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
--  to_char(inte.S5RATC),
--  to_char(itc.CUST_CR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.S5RATD),
--  to_char(itc.CUST_DR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.BASE_PCNT_DR),
--  to_char(itc.INT_TBL_CODE) ,
--  to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ,
--  to_char(clr_bal_amt) ,
--  case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
--  to_char((scbal - SCSUMA)/POWER(10,C8CED)), 
--  to_char(clr_bal_amt + FUTURE_BAL_AMT),
--  case when to_char((scbal - SCSUMA)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
--  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
--  to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MON-YYYY') else lpad(' ',10,' ') end),
--  to_char(gac.PD_XFER_DATE),
--  to_char(nvl(abs(Suspence_amt),0)),
--  to_char(scc5r),
--  to_char(scaco),
--  to_char(SCSFC),
--  to_char(ast.PS_FREQ_TYPE),
--  to_char(S5IFQC),
--  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
--             else lpad(' ',1,' ') end,
--  to_char(eit.INT_FREQ_TYPE_CR),
--  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
--             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
--  to_char(trim(scc3r)) ,
--  to_char(SUB_CLASSIFICATION_USER),
--  to_char(inte.S5TRCC) ,
--  to_char(inte.S5TRCD) ,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end
--  from map_acc
--      inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
--      inner join c8pf  on c8ccy = scccy
--      inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
--  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
--      left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--      left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
--      left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
--      left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
--      LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
--  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
--  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--             left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
--      left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
--      left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
--      LEFT JOIN (select acid,ACCT_STATUS from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
--  left join (select acid,ACCT_LABEL from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
--  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'Y' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
--  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss1  on map_acc.schm_code = gss1.schm_code
--  left join (select schm_code,crncy_code from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
--  left join (select schm_code,INT_PAID_FLG,INT_FREQ_TYPE_CR,SCHM_DESC  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--  left join (select INT_FREQ_TYPE_CR,entity_id,NRML_ACCRUED_AMOUNT_CR from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
--      left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
--      union 
--      select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
--      left join (
--      select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
--      union all
--      select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
--      union all
--      select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
--      left join (select acid from tbaadm.ta_cot where bank_id='01') cot on gam.acid=cot.acid
--      left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
--      left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas--code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
--      left join freetext free on map_acc.fin_acc_num=free.acid
--      left join custom_eit leit on trim(leit.foracid)=gam.foracid
--      left join tbaadm.acd on B2K_ID=gam.acid
--      left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
--      where map_acc.schm_type in( 'SBA','CAA') and map_acc.schm_code<>'PISLA' 
--      and scaco='199' and (acct.staffflag='N' or acct.staffflag is NULL)
--      union all
--  select  distinct
--  to_char(map_acc.leg_branch_id) ,
--  to_char(gam.sol_id) ,
--  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
--  to_char(map_acc.leg_scan) ,
--  to_char(map_acc.LEG_SCAS) ,
--  to_char(scccy),
--  to_char(gam.acct_crncy_code),
--  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
--  to_char(gam.cif_id),
--  to_char(gam.foracid),
--  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
--  to_char(map_acc.leg_acct_type),
--  to_char(gam.schm_code),
--  to_char(gsp.SCHM_DESC),
--  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
--             when scai20 = 'Y' then 'I'                           
--             else 'A' end ,
--  TO_CHAR(SMT.ACCT_STATUS) ,
--  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
--             when scai20 = 'Y' then 'I'                           
--             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
--  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''   end ,
--  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
--  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
--  case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end,
--  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),    
--  case when (case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
--  TO_CHAR(SCAI64) ,
--  TO_CHAR(SCAIJ1) ,    
--  to_char(alr.ACCT_LABEL)    ,
--  case when SCAIC7='Y' then lpad('006',5,' ')
--                   when scai92='Y' then lpad('011',5,' ')
--              else lpad('999',5,' ') end ,
--  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
--  CASE WHEN (case when SCAIC7='Y' then '006'
--                   when scai92='Y' then '011'
--              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
--  to_char(inte.S5RATC),
--  to_char(itc.CUST_CR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.S5RATD),
--  to_char(itc.CUST_DR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.BASE_PCNT_DR),
--  to_char(itc.INT_TBL_CODE), 
--  to_char(to_number(V5BAL)/power(10,c8pf.c8ced)), 
--  to_char(clr_bal_amt) ,
--  case when to_char(to_number(V5BAL)/power(10,c8pf.c8ced)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
--  to_char((V5BAL)/POWER(10,C8CED)), 
--  to_char(clr_bal_amt + FUTURE_BAL_AMT),
--  case when to_char((V5BAL)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
--  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
--  to_char(' '),
--  to_char(gac.PD_XFER_DATE),
--  to_char(nvl(' ',0)),
--  to_char(scc5r),
--  to_char(scaco),
--  to_char(SCSFC),
--  to_char(ast.PS_FREQ_TYPE),
--  to_char(S5IFQC),
--  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
--             else lpad(' ',1,' ') end,
--  to_char(eit.INT_FREQ_TYPE_CR),
--  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
--             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
--  to_char(trim(scc3r)) ,
--  to_char(SUB_CLASSIFICATION_USER),
--  to_char(inte.S5TRCC) ,
--  to_char(inte.S5TRCD) ,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end
--  from v5pf
--  inner join map_acc on trim(map_acc.LEG_ACC_NUM)=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
--  inner join scpf on scpf.SCAB=v5pf.V5ABD and scpf.scan=v5pf.V5AND and scpf.scas=v5pf.V5ASD and scpf.scccy=v5pf.V5CCY
--  inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
--  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
--  inner join c8pf  on c8ccy = scccy
--  LEFT JOIN (select acid,acct_status from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
--  left join (select acct_label,acid from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
--  LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
--  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
--  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--  left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--  left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--  left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
--  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
--  left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
--  left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
--  left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
--  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--  left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
--  left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
--  left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--  left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
--  union 
--  select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
--  left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
--  inner join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(gfpf.gfcus)=trim(map_cif.gfcus)
--  left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas --code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
--  left join freetext free on map_acc.fin_acc_num=free.acid
--  left join (select * from tbaadm.icv where bank_id=get_param('BANK_ID') and int_tbl_code||crncy_code||int_tbl_ver_num in (select int_tbl_code||crncy_code||max(int_tbl_ver_num)  from tbaadm.icv where bank_id=get_param('BANK_ID') and start_date <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--  group by int_tbl_code,crncy_code))icv on itc.INT_TBL_CODE=icv.INT_TBL_CODE and icv. crncy_code=trim(scccy)
--  left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
--  left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
--  left join tbaadm.acd on B2K_ID=gam.acid
--  left join custom_eit leit on trim(leit.foracid)=gam.foracid
--  where map_acc.schm_type in('CAA')  and v5pf.v5bal<>0
--  and scaco='199' and (acct.staffflag='N' or acct.staffflag is NULL);
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_tda_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
ns_tda_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_NONSTAFF_TDA.dat
select
'EXTERNAL_NO'||'|'||
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
'SCHM_DESC'||'|'||
--'LEGACY_CUST_NAME' ||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'lEGACY_CR_PREF_RATE'||'|'||
'LEG_DEPOSIT_AMOUNT'||'|'||
'FINACLE_DEPOSIT_AMOUNT'||'|'||
'DEPOSIT_AMOUNT_MATCH'||'|'||
--'LEG_INT_TAB_CODE'||'|'||
--'LEG_EXTRACTED_INT_TBL_CODE'||'|'||
--'FINACLE_INT_TBL_CODE'||'|'||
--'INT_TBL_CODE_MATCH'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_OPEN_EFFECTIVE_DATE'||'|'||
'FINACLE_OPEN_EFFECTIVE_DATE'||'|'||
'OPEN_EFFECTIVE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_ACCOUNT' ||'|'||
'FINACLE_OPERATIVE_ACCOUNT' ||'|'||
'LEG_REPAYMENT_ACCOUNT' ||'|'||
'FINACLE_REPAYMENT_ACCOUNT' ||'|'||
'LEG_LAST_CR_INT_POST_DT'||'|'||
'FINACLE_LAST_CR_INT_POST_DT'||'|'||
'LAST_CR_INT_POST_DT_MATCH'||'|'||
'LEG_LAST_INT_RUN_DATE_CR'||'|'||
'FINACLE_LAST_INT_RUN_DATE_CR'||'|'||
'LAST_INT_RUN_DATE_CR_MATCH'||'|'||
--'LEG_NET_INT_CALC'||'|'||
--'FINACLE_NET_INT_CALC'||'|'||
--'LEG_CUMU_INTEREST_PAID'||'|'||
--'FINACLE_CUMU_INTEREST_PAID'||'|'||
--'CUMU_INTEREST_PAID_MATCH'||'|'||
'LEG_CUMU_INTE_CREDIT'||'|'||
'FINACLE_CUMU_INT_CREDIT'||'|'||
'CUMU_INT_CREDIT_MATCH'||'|'||
'LEG_MATURITY_DATE'||'|'||
'FINACLE_MATURITY_DATE'||'|'||
'MATURITY_DATE_MATCH'||'|'||
--'LEG_PRIN_REPAY_ACCT'||'|'||
--'FINACLE_PRIN_REPAY_ACCT'||'|'||
--'LEG_INT_CR_ACCT'||'|'||
--'FINACLE_INT_CR_ACCT'||'|'||
'LEG_AUTO_RENEWAL_FLAG'||'|'||
'FINACLE_AUTO_RENEWAL_FLG'||'|'||
'LEG_AUTO_CLOSURE_FLG'||'|'||
'FINACLE_AUTO_CLOSURE_FLG'||'|'||
--'LEG_RENEWAL_OPTION'||'|'||
--'FINACLE_RENEWAL_OPTION'||'|'||
--'RENEWAL_OPTION_MATCH'||'|'||
'FINACLE_INT_TABLE_RATE'||'|'||
'LEG_ABSOLUTE_RATE'||'|'||
'FINACLE_ABSOLUTE_RATE'||'|'||
'ABSOLUTE_RATE_MATCH'||'|'||
'FIN_PREF_RATE'||'|'||
'LEG_ACCOUNT_BALANCE'||'|'||
'FINACLE_CLEAR_BALANCE_AMOUNT'||'|'||
'ACCOUNT_BALANCE_MATCH'||'|'||
'LEG_LEGDER_BALANCE'||'|'||
'MANAGER_CODE'||'|'||
--'LEG_NOMINATED_ACC'||'|'||
--'FINACLE_NOMINATED_ACC'||'|'||
--'NOMINATED_ACC_MATCH'||'|'||
'CAPITALISED_INTEREST_FLAG'||'|'||
'LEG_DIVISION'||'|'||
'FIN_DIVISION'||'|'||
'LEG_SUB_DIVISION'||'|'||
'FIN_SUB_DIVISION'
from dual
union all
select 
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.currency) ||'|'||
to_char(gam.acct_crncy_code) ||'|'||
case when to_char(gam.acct_crncy_code) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
to_char(map_acc.leg_acc_num) ||'|'||
TO_CHAR(V5PF.V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
to_char(map_acc.leg_cust_type) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(map_acc.schm_code) ||'|'||
to_char(gsp.SCHM_DESC)||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
to_char(gam.ACCT_NAME) ||'|'||
--to_char(ACC_PREF_RATE) ||'|'||
to_char(case when (v5abd||v5and||v5asd=v5abi||v5ani||v5asi)  and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)||'|'||
----to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
----                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
----            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end) ||'|'||
to_char(tam.deposit_amount) ||'|'||
case when trim(case when (v5abd||v5and||v5asd=v5abi||v5ani||v5asi)  and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end) = to_char(tam.deposit_amount) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(csp.INT_TBL_CODE)||'|'||
--to_char(csp.INT_TBL_CODE)||'|'||
--to_char(itc.int_tbl_code)||'|'||
--case when csp.INT_TBL_CODE = itc.int_tbl_code then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else ' ' end)  ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else ' ' end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MON-YYYY')
            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else  '' end  ||'|'||
TO_CHAR (tam.open_effective_date, 'DD-MON-YYYY') ||'|'||
case when (case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MON-YYYY')
            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else  '' end)  = TO_CHAR (tam.open_effective_date, 'DD-MON-YYYY')  then 'TRUE' else 'FALSE' end ||'|'||
case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null and v5ani <> '111112' 
           then to_char(v5abi||v5ani||v5asi)
           when v5ani ='111112'
           then to_char(iv.omabf||iv.omanf||iv.omasf)
           when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
           then to_char(iv.omabf||iv.omanf||iv.omasf)
           else ''
           end ||'|'||
case
           when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null and v5ani <> '111112' 
           then to_char(get_oper_acct(v5abi||v5ani||v5asi))
           when v5ani ='111112'
           then to_char(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) 
           when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
           then to_char(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) 
           else '' end ||'|'||
TO_CHAR(pm.omabf||pm.omanf||pm.omasf) ||'|'||
TO_CHAR(get_oper_acct(pm.omabf||pm.omanf||pm.omasf))  ||'|'||           
case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---- commented on 09-09-2017 based on sandeep requirement and finding from day 1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end  ||'|'||
TO_CHAR (eit.interest_calc_upto_date_cr, 'DD-MM-YYYY' ) ||'|'||
case when (case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---- commented on 09-09-2017 based on sandeep requirement and finding from day 1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end) = (TO_CHAR (eit.interest_calc_upto_date_cr, 'DD-MM-YYYY' )) then 'TRUE' else 'FALSE' end ||'|'||
case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---commented on 09-09-2017 based on sandeep requirement and day1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end  ||'|'||
TO_CHAR(eit.last_interest_run_date_cr,'DD-MM-YYYY')||'|'||
case when (case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---commented on 09-09-2017 based on sandeep requirement and day1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end) = (TO_CHAR(eit.last_interest_run_date_cr,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
--'LEG_NET_INT_CALC'||'|'||
--'FINACLE_NET_INT_CALC'||'|'||
--case when v5abd||v5and||v5asd<>v5abi||v5ani||v5asi then nvl(to_char(to_number((clmamount)/POWER(10,C8CED))),'0')
--            else ' ' end ||'|'||
--to_char(tam.cumulative_int_paid)||'|'||
--case when (case when v5abd||v5and||v5asd<>v5abi||v5ani||v5asi then nvl(to_char(to_number((clmamount)/POWER(10,C8CED))),'0')
--            else ' ' end) = to_char(tam.cumulative_int_paid) then 'TRUE' else 'FALSE' end ||'|'||
case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi then to_char(to_number((v5am4)/POWER(10,C8CED))) else ' ' end ||'|'||
to_char(tam.cumulative_int_credited)||'|'||
CASE WHEN (case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi then to_char(to_number((v5am4)/POWER(10,C8CED))) else ' ' end)  = to_char(tam.cumulative_int_credited) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(case when v5mdt<>0 and   get_date_fm_btrv(v5mdt) <> 'ERROR' and v5mdt<>'9999999' then
            to_char(to_date(get_date_fm_btrv(v5mdt),'YYYYMMDD'),'DD-MM-YYYY')
            else to_char(to_date(get_date_fm_btrv(V5NRD),'YYYYMMDD'),'DD-MM-YYYY') end) ||'|'||   --- challenge
TO_CHAR (tam.maturity_date, 'DD-MON-YYYY') ||'|'||
CASE WHEN (case when v5mdt<>0 and   get_date_fm_btrv(v5mdt) <> 'ERROR' and v5mdt<>'9999999' then
            to_char(to_date(get_date_fm_btrv(v5mdt),'YYYYMMDD'),'DD-MM-YYYY')
            else to_char(to_date(get_date_fm_btrv(V5NRD),'YYYYMMDD'),'DD-MM-YYYY') end) = TO_CHAR (tam.maturity_date, 'DD-Mm-YYYY') THEN 'TRUE' ELSE 'FALSE' END  ||'|'||
--'LEG_PRIN_REPAY_ACCT'||'|'||
--'FINACLE_PRIN_REPAY_ACCT'||'|'||
--'LEG_INT_CR_ACCT'||'|'||
--'FINACLE_INT_CR_ACCT'||'|'||
rpad(case when v5pf.v5arc in ('A','P') then 'N'
                when HYDBNM||HYDLP||HYDLR is not null then 'U' 
                when v5pf.v5mdt=9999999 then 'U'
                else 'N' end,1,' ') ||'|'||
to_char(tam.auto_renewal_flg) ||'|'||
rpad(
rpad(case when v5pf.v5arc in ('A','P') then 'N'
                when HYDBNM||HYDLP||HYDLR is not null then 'N' 
                when v5pf.v5mdt=9999999 then 'N'
                else 'Y' end,1,' '),1,' ') ||'|'||
to_char(tam.close_on_maturity_flg) ||'|'||
to_char(itc.INT_TBL_CODE) ||'|'||
to_char(case when trim(v5pf.v5rat)='0' then lpad(to_char(nvl(trim(D4BRAR),0)),8,' ')
when  TO_number(trim(v5pf.v5rat)) between 0.001 and 0.999 then lpad('0'||to_char(trim(v5pf.v5rat)),8,' ')
else lpad(to_char(trim(v5pf.v5rat)),8,' ')
end)||'|'||
case when trim(dep_rate.v5pf_acc_num) is null then to_char(itc.ID_CR_PREF_PCNT + itc.NRML_PCNT_CR) else to_char(itc.ID_CR_PREF_PCNT + tvs.NRML_INT_PCNT) end||'|'||
--to_char(itc.ID_CR_PREF_PCNT + tvs.NRML_INT_PCNT)||'|'||
case when to_number(case when v5pf.v5rat='0' then lpad(to_char(nvl(D4BRAR,0)),8,' ')
when  TO_number(v5pf.v5rat) between 0.001 and 0.999 then lpad('0'||to_char(v5pf.v5rat),8,' ')
else lpad(to_char(v5pf.v5rat),8,' ')
end) = to_number(case when trim(dep_rate.v5pf_acc_num) is null then to_char(itc.ID_CR_PREF_PCNT + itc.NRML_PCNT_CR) else to_char(itc.ID_CR_PREF_PCNT + tvs.NRML_INT_PCNT) end) then 'TRUE' else 'FALSE' end ||'|'||
to_char(itc.ID_CR_PREF_PCNT) ||'|'||
to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)  ||'|'||
to_char(TO_NUMBER (tam.deposit_amount))||'|'||
case when to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)  =to_char(TO_NUMBER (tam.deposit_amount))  then 'TRUE' else 'FALSE' end  ||'|'||
to_char((scbal - SCSUMA)/POWER(10,C8CED))||'|'||
to_char(scaco) ||'|'||
--case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null            
--then rpad(get_oper_acct(v5abi||v5ani||v5asi),16,' ')                     
--when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--then rpad(get_oper_acct(iv.omabf||iv.omanf||iv.omasf),16,' ') 
--else rpad(' ',16,' ') end||'|'||
--gam_oper.foracid||'|'||
--case when trim(case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null            
--then rpad(get_oper_acct(v5abi||v5ani||v5asi),16,' ')                     
--when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--then rpad(get_oper_acct(iv.omabf||iv.omanf||iv.omasf),16,' ') 
--else rpad(' ',16,' ') end) = (gam_oper.foracid) then 'TRUE' else 'FALSE' end   ||'|'||
to_char(case when map_acc.schm_code in ('TDGTD','TDATD') then 'N' else 'Y' end)||'|'||
case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end||'|'||
c_gac.division||'|'||
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end||'|'||
c_gac.SUB_DIVISION
from (select * from v5pf where v5pf.v5tdt='D' and v5pf.v5bal<>'0')v5pf
inner join scpf on trim(scpf.SCAB)=trim(v5pf.V5ABD) and trim(scpf.scan)=trim(v5pf.V5AND) and trim(scpf.scas)=trim(v5pf.V5ASD) and scpf.scccy=v5pf.V5CCY
inner join (select * from map_acc where schm_type='TDA')map_acc on map_acc.LEG_ACC_NUM=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
left join map_cif mc on mc.fin_cif_id=map_acc.fin_cif_id
inner join c8pf on c8ccy =scpf.scccy
LEFT JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
LEFT JOIN (select * from TBAADM.ALR where bank_id=get_param('BANK_ID'))ALR ON ALR.ACID = GAM.ACID
LEFT JOIN (select * from tbaadm.tam where bank_id=get_param('BANK_ID'))tam ON tam.acid = gam.acid
left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on tam.REPAYMENT_ACID=gam_oper.acid
LEFT JOIN (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit ON eit.entity_id = gam.acid 
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id = gam.acid AND itc.entity_type = 'ACCNT'
--left join (select tv1.* from (select * from tbaadm.tvs where bank_id='01') tv1 
--inner join (select int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) int_ver from tbaadm.tvs where bank_id='01'group by  int_tbl_code,crncy_code) tv2 
--on tv1.int_tbl_code=tv2.int_tbl_code and tv1.crncy_code=tv2.crncy_code and tv1.INT_TBL_VER_NUM=tv2.int_ver) tvs on tvs.INT_TBL_CODE=itc.INT_TBL_CODE and tvs.crncy_code=map_acc.currency
left join crmuser.accounts b on b.orgkey = map_acc.fin_cif_id     
left join ospf on v5brnm=osbrnm and v5dlp=osdlp and v5dlr=osdlr
left join (select * from otpf where ottdt='D')otpf on v5brnm=otbrnm and v5dlp=otdlp and v5dlr=otdlr
left join ompf_iv iv on v5brnm=iv.ombrnm and v5dlp=iv.omdlp and v5dlr=iv.omdlr
left join ompf_pm pm on v5brnm=pm.ombrnm and v5dlp=pm.omdlp and v5dlr=pm.omdlr
left join (select v5brnm,v5dlp,v5dlr,sum(v4aim1)+sum(v4aim2) clmamount  from v5pf
inner join v4pf on v5brnm=v4brnm and v5dlp=v4dlp and v5dlr=v4dlr
inner join (select * from otpf where ottdt='D')otpf on otbrnm=v4brnm and otdlp=v4dlp and otdlr=v4dlr
where to_date(get_date_fm_btrv(V4DTE),'YYYYMMDD') > case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD')
when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end
and v5pf.v5tdt='D' and v5pf.v5bal<>'0'        
Group by v5brnm,v5dlp,v5dlr)int_amt on int_amt.v5brnm =v5pf.v5brnm and int_amt.v5dlp=v5pf.v5dlp  and  int_amt.v5dlr=v5pf.v5dlr
left join d4pf on d4brr=V5PF.v5brr
left join jrpf on trim(jrpf.jrprc) =trim(v5pf.v5prc) 
left join (select* from hypf where hydlr is not null) hypf on HYDBNM||HYDLP||HYDLR = map_acc.leg_acc_num
left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code = map_acc.CURRENCY  
left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
left join (select * from tbaadm.TSP where bank_id = get_param('BANK_ID') and del_flg = 'N' )TSP  on map_acc.schm_code = TSP.schm_code AND Tsp.crncy_code = map_acc.CURRENCY 
left join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(mc.gfclc),' ') and  trim(gfpf.gfcus)=trim(mc.gfcus)
left join (select distinct v5pf_acc_num,tbl_code from dep_rate)dep_rate on  v5pf_acc_num=map_acc.leg_acc_num
left join (select tv1.* from (select * from tbaadm.tvs where bank_id='01') tv1 
inner join (select int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) int_ver from tbaadm.tvs where bank_id='01'group by  int_tbl_code,crncy_code) tv2 
on tv1.int_tbl_code=tv2.int_tbl_code and tv1.crncy_code=tv2.crncy_code and tv1.INT_TBL_VER_NUM=tv2.int_ver) tvs on tvs.INT_TBL_CODE=dep_rate.TBL_CODE and tvs.crncy_code=map_acc.currency 
left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid
where (B.STAFFFLAG ='N' or b.staffflag is null);
--select
--'LEG_BRCH_ID'||'|'||
--'FINACLE_SOL_ID'||'|'||
--'LEG_CLIENT_NO'||'|'||
--'LEG_SUFFIX'||'|'||
--'LEG_CCY'||'|'||
--'FINACLE_CCY'||'|'||
--'CCY_MATCH'||'|'||
--'FINACLE_CIF_ID'||'|'||
--'LEG_CONTRACT'||'|'||
--'LEG_DEAL_REF_NUMBER' ||'|'||
--'FINACLE_ACCT_NUM'||'|'||
--'LEG_CUST_TYPE'||'|'||
--'LEG_ACCT_TYPE'||'|'||
--'FINACLE_SCHEME_CODE'||'|'||
--'SCHM_DESC'||'|'||
--'FINACLE_CUST_NAME' ||'|'||
--'FINACLE_CR_PREF_RATE'||'|'||
--'LEG_DEPOSIT_AMOUNT'||'|'||
--'FINACLE_DEPOSIT_AMOUNT'||'|'||
--'DEPOSIT_AMOUNT_MATCH'||'|'||
--'LEG_ACCT_OPN_DATE'||'|'||
--'FINACLE_ACCT_OPN_DATE'||'|'||
--'ACCT_OPN_DATE_MATCH'||'|'||
--'LEG_OPEN_EFFECTIVE_DATE'||'|'||
--'FINACLE_OPEN_EFFECTIVE_DATE'||'|'||
--'OPEN_EFFECTIVE_DATE_MATCH'||'|'||
--'LEG_OPERATIVE_ACCOUNT' ||'|'||
--'FINACLE_OPERATIVE_ACCOUNT' ||'|'||
--'LEG_REPAYMENT_ACCOUNT' ||'|'||
--'FINACLE_REPAYMENT_ACCOUNT' ||'|'||
--'LEG_LAST_CR_INT_POST_DT'||'|'||
--'FINACLE_LAST_CR_INT_POST_DT'||'|'||
--'LEG_LAST_INT_RUN_DATE_CR'||'|'||
--'FINACLE_LAST_INT_RUN_DATE_CR'||'|'||
--'LEG_CUMU_INTE_CREDIT'||'|'||
--'FINACLE_CUMU_INT_CREDIT'||'|'||
--'CUMU_INT_CREDIT_MATCH'||'|'||
--'LEG_MATURITY_DATE'||'|'||
--'FINACLE_MATURITY_DATE'||'|'||
--'MATURITY_DATE_MATCH'||'|'||
--'LEG_AUTO_RENEWAL_FLAG'||'|'||
--'FINACLE_AUTO_RENEWAL_FLG'||'|'||
--'LEG_AUTO_CLOSURE_FLG'||'|'||
--'FINACLE_AUTO_CLOSURE_FLG'||'|'||
--'FINACLE_INT_TABLE_RATE'||'|'||
--'LEG_ABSOLUTE_RATE'||'|'||
--'FINACLE_ABSOLUTE_RATE'||'|'||
--'ABSOLUTE_RATE_MATCH'||'|'||
--'LEG_ACCOUNT_BALANCE'||'|'||
--'FINACLE_CLEAR_BALANCE_AMOUNT'||'|'||
--'ACCOUNT_BALANCE_MATCH'||'|'||
--'LEG_LEGDER_BALANCE'||'|'||
--'MANAGER_CODE'||'|'||
--'LEG_NOMINATED_ACC'||'|'||
--'FINACLE_NOMINATED_ACC'||'|'||
--'NOMINATED_ACC_MATCH'
--from dual
--union all
--select distinct
--to_char(map_acc.leg_branch_id) ||'|'||
--to_char(gam.sol_id) ||'|'||
--to_char(map_acc.leg_scan) ||'|'||
--to_char(map_acc.LEG_SCAS) ||'|'||
--to_char(map_acc.currency) ||'|'||
--to_char(gam.acct_crncy_code) ||'|'||
--case when to_char(gam.acct_crncy_code) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(gam.cif_id) ||'|'||
--to_char(map_acc.leg_acc_num) ||'|'||
--TO_CHAR(V5PF.V5DLR) ||'|'||
--to_char(gam.foracid) ||'|'|| 
--to_char(map_acc.leg_cust_type) ||'|'||
--to_char(map_acc.leg_acct_type) ||'|'|| 
--to_char(map_acc.schm_code) ||'|'||
--to_char(gsp.SCHM_DESC)||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
--to_char(id_Dr_pref_pcnt) ||'|'||
--to_char(case when (v5abd||v5and||v5asd=v5abi||v5ani||v5asi)  and nvl(clmamount,0)  <> 0 
--                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
--            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)||'|'||
--to_char(tam.deposit_amount) ||'|'||
--case when trim(case when (v5abd||v5and||v5asd=v5abi||v5ani||v5asi)  and nvl(clmamount,0)  <> 0 
--                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
--            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end) = to_char(tam.deposit_amount) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
--            else ' ' end)  ||'|'||
--TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
--case when  to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
--            else ' ' end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
--case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MON-YYYY')
--            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
--            else  '' end  ||'|'||
--TO_CHAR (tam.open_effective_date, 'DD-MON-YYYY') ||'|'||
--case when (case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MON-YYYY')
--            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
--            else  '' end)  = TO_CHAR (tam.open_effective_date, 'DD-MON-YYYY')  then 'TRUE' else 'FALSE' end ||'|'||
--case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null and v5ani <> '111112' 
--           then to_char(v5abi||v5ani||v5asi)
--           when v5ani ='111112'
--           then to_char(iv.omabf||iv.omanf||iv.omasf)
--           when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--           then to_char(iv.omabf||iv.omanf||iv.omasf)
--           else ''
--           end ||'|'||
--case
--           when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null and v5ani <> '111112' 
--           then to_char(get_oper_acct(v5abi||v5ani||v5asi))
--           when v5ani ='111112'
--           then to_char(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) 
--           when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--           then to_char(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) 
--           else '' end ||'|'||
--TO_CHAR(pm.omabf||pm.omanf||pm.omasf) ||'|'||
--TO_CHAR(get_oper_acct(pm.omabf||pm.omanf||pm.omasf))  ||'|'||           
--case when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
--                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
--                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
--            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end  ||'|'||
--TO_CHAR (eit.interest_calc_upto_date_cr, 'DD-MON-YYYY' ) ||'|'||
--case when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
--                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
--                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
--            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end  ||'|'||
--TO_CHAR(eit.last_interest_run_date_cr,'DD-MON-YYYY')||'|'||
--case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi then to_char(to_number((v5am4)/POWER(10,C8CED))) else ' ' end ||'|'||
--to_char(tam.cumulative_int_credited)||'|'||
--CASE WHEN (case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi then to_char(to_number((v5am4)/POWER(10,C8CED))) else ' ' end)  = to_char(tam.cumulative_int_credited) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
--to_char(case when v5mdt<>0 and   get_date_fm_btrv(v5mdt) <> 'ERROR' and v5mdt<>'9999999' then
--            to_char(to_date(get_date_fm_btrv(v5mdt),'YYYYMMDD'),'DD-MM-YYYY')
--            else to_char(to_date(get_date_fm_btrv(V5NRD),'YYYYMMDD'),'DD-MM-YYYY') end) ||'|'||   --- challenge
--TO_CHAR (tam.maturity_date, 'DD-MON-YYYY') ||'|'||
--CASE WHEN (case when v5mdt<>0 and   get_date_fm_btrv(v5mdt) <> 'ERROR' and v5mdt<>'9999999' then
--            to_char(to_date(get_date_fm_btrv(v5mdt),'YYYYMMDD'),'DD-MM-YYYY')
--            else to_char(to_date(get_date_fm_btrv(V5NRD),'YYYYMMDD'),'DD-MM-YYYY') end) = TO_CHAR (tam.maturity_date, 'DD-Mm-YYYY') THEN 'TRUE' ELSE 'FALSE' END  ||'|'||
--rpad(case when v5pf.v5arc in ('A','P') then 'N'
--                when HYDBNM||HYDLP||HYDLR is not null then 'U' 
--                when v5pf.v5mdt=9999999 then 'U'
--                else 'N' end,1,' ') ||'|'||
--to_char(tam.auto_renewal_flg) ||'|'||
--rpad(
--rpad(case when v5pf.v5arc in ('A','P') then 'N'
--                when HYDBNM||HYDLP||HYDLR is not null then 'N' 
--                when v5pf.v5mdt=9999999 then 'N'
--                else 'Y' end,1,' '),1,' ') ||'|'||
--to_char(tam.close_on_maturity_flg) ||'|'||
--to_char(csp.INT_TBL_CODE) ||'|'||
--to_char(case when trim(v5pf.v5rat)='0' then lpad(to_char(nvl(trim(D4BRAR),0)),8,' ')
--when  TO_number(trim(v5pf.v5rat)) between 0.001 and 0.999 then lpad('0'||to_char(trim(v5pf.v5rat)),8,' ')
--else lpad(to_char(trim(v5pf.v5rat)),8,' ')
--end)||'|'||
--to_char(ID_CR_PREF_PCNT + NRML_PCNT_CR)||'|'||
--case when (case when v5pf.v5rat='0' then lpad(to_char(nvl(D4BRAR,0)),8,' ')
--when  TO_number(v5pf.v5rat) between 0.001 and 0.999 then lpad('0'||to_char(v5pf.v5rat),8,' ')
--else lpad(to_char(v5pf.v5rat),8,' ')
--end) = (ID_CR_PREF_PCNT + NRML_PCNT_CR) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
--                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
--            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)  ||'|'||
--to_char(TO_NUMBER (tam.deposit_amount))||'|'||
--case when to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
--                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
--            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)  =to_char(TO_NUMBER (tam.deposit_amount))  then 'TRUE' else 'FALSE' end  ||'|'||
--to_char((scbal - SCSUMA)/POWER(10,C8CED))||'|'||
--to_char(scaco) ||'|'||
--case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null            
--then rpad(get_oper_acct(v5abi||v5ani||v5asi),16,' ')                     
--when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--then rpad(get_oper_acct(iv.omabf||iv.omanf||iv.omasf),16,' ') 
--else rpad(' ',16,' ') end||'|'||
--gam_oper.foracid||'|'||
--case when trim(case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null            
--then rpad(get_oper_acct(v5abi||v5ani||v5asi),16,' ')                     
--when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--then rpad(get_oper_acct(iv.omabf||iv.omanf||iv.omasf),16,' ') 
--else rpad(' ',16,' ') end) = (gam_oper.foracid) then 'TRUE' else 'FALSE' end           
--from v5pf
--inner join scpf on trim(scpf.SCAB)=trim(v5pf.V5ABD) and trim(scpf.scan)=trim(v5pf.V5AND) and trim(scpf.scas)=trim(v5pf.V5ASD) and scpf.scccy=v5pf.V5CCY
--inner join map_acc on map_acc.LEG_ACC_NUM=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
--left join map_cif mc on mc.fin_cif_id=map_acc.fin_cif_id
--inner join c8pf on c8ccy =scpf.scccy
--LEFT JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
--LEFT JOIN (select * from TBAADM.ALR where bank_id=get_param('BANK_ID'))ALR ON ALR.ACID = GAM.ACID
--LEFT JOIN (select * from tbaadm.tam where bank_id=get_param('BANK_ID'))tam ON tam.acid = gam.acid
--left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on tam.REPAYMENT_ACID=gam_oper.acid
--LEFT JOIN (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit ON eit.entity_id = gam.acid 
--left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id = gam.acid AND itc.entity_type = 'ACCNT'
--left join crmuser.accounts b on b.orgkey = map_acc.fin_cif_id     
--left join ospf on v5brnm=osbrnm and v5dlp=osdlp and v5dlr=osdlr
--left join (select * from otpf where ottdt='D')otpf on v5brnm=otbrnm and v5dlp=otdlp and v5dlr=otdlr
--left join ompf_iv iv on v5brnm=iv.ombrnm and v5dlp=iv.omdlp and v5dlr=iv.omdlr
--left join ompf_pm pm on v5brnm=pm.ombrnm and v5dlp=pm.omdlp and v5dlr=pm.omdlr
--left join (select v5brnm,v5dlp,v5dlr,sum(v4aim1)+sum(v4aim2) clmamount  from v5pf
--inner join v4pf on v5brnm=v4brnm and v5dlp=v4dlp and v5dlr=v4dlr
--inner join (select * from otpf where ottdt='D')otpf on otbrnm=v4brnm and otdlp=v4dlp and otdlr=v4dlr
--where to_date(get_date_fm_btrv(V4DTE),'YYYYMMDD') > case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD')
--when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end
--and v5pf.v5tdt='D' and v5pf.v5bal<>'0'        
--Group by v5brnm,v5dlp,v5dlr)int_amt on int_amt.v5brnm =v5pf.v5brnm and int_amt.v5dlp=v5pf.v5dlp  and  int_amt.v5dlr=v5pf.v5dlr
--left join d4pf on d4brr=V5PF.v5brr
--left join jrpf on trim(jrpf.jrprc) =trim(v5pf.v5prc) 
--left join (select* from hypf where hydlr is not null) hypf on HYDBNM||HYDLP||HYDLR = map_acc.leg_acc_num
--left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code = map_acc.CURRENCY  
--left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
--left join (select * from tbaadm.TSP where bank_id = get_param('BANK_ID') and del_flg = 'N' )TSP  on map_acc.schm_code = TSP.schm_code AND Tsp.crncy_code = map_acc.CURRENCY 
--left join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(mc.gfclc),' ') and  trim(gfpf.gfcus)=trim(mc.gfcus)
--where map_acc.SCHM_TYPE='TDA' and v5pf.v5tdt='D' and v5pf.v5bal<>'0'
--and (B.STAFFFLAG ='N' or b.staffflag is null);
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
past_due_laa.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
past_due_laa.sql 
select distinct
LEG_Branch_id||leg_scan||leg_scas LEG_ACC_NUMBER,
leg_acc_num LEG_DEAL_NUMBER,
map_acc.schm_code,
LEG_ACCT_TYPE,
foracid,
FIN_CIF_ID,
otdla/c8pwd AMOUNT_OUTSTANDING,
abs(lsamt.sp/c8pwd) LEG_PAST_DUE_AMT,
abs(LDT.DMD_AMT1) FIN_PAST_DUE_AMT,
case when nvl(abs(LDT.DMD_AMT1),0) = nvl(abs(lsamt.sp/c8pwd),0) then 'TRUE' else 'FALSE' end PAST_DUE_AMT_MATCH,
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end LEG_PD_DAYS,
gac.DPD_CNTR FIN_PD_DAYS,
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end),0) = nvl(gac.DPD_CNTr,0) then 'TRUE' else 'FALSE' end PD_DAYS_MATCH,
to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end) LEG_PD_DATE,
	to_char(dmd_date1,'DD-MON-YYYY') FIN_PD_DATE,
case when nvl(trim(to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end)),'*')=nvl(to_char(dmd_date1,'DD-MON-YYYY'),'*') then 'TRUE' else 'FALSE' end PD_DATE_MATCH,
--case when ls_fee.lsupp <> 0 then to_char(abs(to_number(ls_fee.lsupp))/POWER(10,c8pf.C8CED)) else '0' end LEG_SUSPENSE_AMT,
to_char(nvl(INT_SUSPENSE_AMT,0)) FIN_SUSPENSE_AMT
--case when (case when ls_fee.lsupp <> 0 then to_char(abs(to_number(ls_fee.lsupp))/POWER(10,c8pf.C8CED)) else '0' end)=to_char(nvl(SYS_CALC_CHRGE_AMT,0)) then 'TRUE' else 'FALSE' end SUSPENSE_MATCH
from (select * from map_acc where schm_type='LAA')map_acc
inner join c8pf on c8ccy = currency
left join (select trim(lsbrnm)||trim(lsdlp)||trim(lsdlr) del_num,sum((abs(lsamtd)-abs(lsamtp)))sp,min(lsdte)dte from lspf where lspdte='9999999' and TO_NUMBER(lsdte)<=TO_NUMBER(get_param('EODCYYMMDD')) and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by trim(lsbrnm)||trim(lsdlp)||trim(lsdlr))lsamt on lsamt.del_num =leg_acc_num
inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = map_acc.leg_acc_num
inner JOIN (select * from tbaadm.gam where gam.bank_id='01' and schm_type='LAA')gam ON gam.foracid = map_acc.fin_acc_num 
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
LEFT JOIN (select * from tbaadm.gac where bank_id='01')gac ON gac.acid = gam.acid 
left join (select lsbrnm||trim(lsdlp)||trim(lsdlr) del_num ,sum(lsamtd - lsamtp) sp,min(lsdte)dte from lspf where lsmvt='P' and (LSAMTD - LSAMTP) < 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)ls on ls.del_num=leg_acc_num
left join (select * from TBAADM.cot where bank_id='01')chat on chat.acid=gam.acid
 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
past_due_odcc.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
past_due_odcc.sql 
select distinct 
foracid,
Suspence_amt LEG_PAST_DUE_AMT,
DISCRET_ADVN_AMT FIN_PAST_DUE_AMT,
case when nvl(abs(Suspence_amt),'0')=nvl(DISCRET_ADVN_AMT,'0') then 'TRUE' else 'FALSE' end PAST_DUE_MATCH,
to_char(to_date(get_param('EOD_DATE'),'DD-MM-YYYY') - case when past.acc_num is not null then to_date(pass_due_dt,'YYYYMMDD') else to_date(get_param('EOD_DATE'),'DD-MM-YYYY') end) LEG_PD_DAYS,
DB_STAT_DATE-DISCRET_ADVN_DUE_DATE FINACLE_PD_DAYS,
case when nvl(to_char(to_date(get_param('EOD_DATE'),'DD-MM-YYYY') - case when past.acc_num is not null then to_date(pass_due_dt,'YYYYMMDD') else to_date(get_param('EOD_DATE'),'DD-MM-YYYY') end),0) = nvl(DB_STAT_DATE-DISCRET_ADVN_DUE_DATE,0) then 'TRUE' else 'FALSE' end PD_DAYS_MATCH,
to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MM-YYYY') else lpad(' ',10,' ') end) LEG_PD_DATE,
DISCRET_ADVN_DUE_DATE FIN_PD_DATE,
case when nvl(trim(to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MM-YYYY') else lpad(' ',10,' ') end)),'*')=nvl(to_char(DISCRET_ADVN_DUE_DATE,'DD-MM-YYYY'),'*') then 'TRUE' else 'FALSE' end PD_DATE_MATCH
from (select * from map_acc where schm_type in ('CAA','ODA'))map_acc
left join (select acc_num,past_due_flg,suspence_amt,min(PASS_DUE_DT) PASS_DUE_DT from  (
    select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
    union all
    select lp10_acct acc_num,'Y' past_due_flg, LP10_LXD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
    union all
    select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0 and LP10_LED <> 0
    union all
    select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)
    group by acc_num,past_due_flg,suspence_amt)past on fin_acc_num=trim(acc_num)
inner JOIN (select * from tbaadm.gam where gam.bank_id='01' and schm_type in ('CAA','ODA') )gam ON gam.foracid = map_acc.fin_acc_num
LEFT JOIN (select * from tbaadm.gac where bank_id='01')gac ON gac.acid = gam.acid     
left join (select * from TBAADM.dat where bank_id='01' and DISCRET_ADVN_DUE_DATE<'20-oct-2017')dat on dat.acid=gam.acid
left join (select * from tbaadm.gct where bank_id='01')gct on gct.bank_id=dat.bank_id 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
PCA_DISB.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
PCA_DISB.sql 
drop table pca_ac_fin_int_rt_less12_Rep;
create table pca_ac_fin_int_rt_less12_rep
as
SELECT a.*,REPRICING_PLAN,csp.int_tbl_code tbl_code,X.base_pcnt_dr,X.base_pcnt_cr,nvl(c.nrml_int_pcnt,0) cr_nrml_int_pcnt, nvl(d.nrml_int_pcnt,0) dr_nrml_int_pcnt,acc_pref_rate - (nvl(X.base_pcnt_dr,0) + nvl(d.nrml_int_pcnt,0))actual_pref_rate
from pca_int_tbl a
LEFT JOIN (SELECT * FROM TBAADM.GSP WHERE DEL_FLG= 'N' AND bank_id = get_param('BANK_ID'))GSP ON A.SCHM_CODE = GSP.SCHM_CODE
left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on a.schm_code = csp.schm_code and a.v5ccy = csp.crncy_code
left join (select c.* from migr_int_icv c where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))b on  csp.int_tbl_code =b.int_tbl_code and  csp.CRNCY_CODE = b.CRNCY_CODE 
and acct_open_date between b.start_date and b.MODIFY_END_DATE
left join (select c.* from migr_int_icv c where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))X on  X.int_tbl_code =b.BASE_int_tbl_code  
and  X.CRNCY_CODE = b.CRNCY_CODE and acct_open_date between X.start_date and X.MODIFY_END_DATE 
left join (select a.* from tbaadm.IVS a 
    inner join (select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM from tbaadm.IVS where del_flg = 'N' and bank_id = get_param('BANK_ID') and int_slab_dr_cr_flg = 'C' group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on csp.int_tbl_code =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
left join (select a.* from tbaadm.IVS a
inner join (
select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
from tbaadm.IVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
and int_slab_dr_cr_flg = 'D'
group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D'
where del_flg = 'N' and bank_id = get_param('BANK_ID') )d  on csp.int_tbl_code =d.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = trim(INT_ACC_NUM);
create index pca_int_tbl_idx_2_rp on pca_ac_fin_int_rt_less12_rep(int_acc_num);
drop table pca_acc_fin_int_rate_less121;
create table pca_acc_fin_int_rate_less121 as
select pc.*,ID_DR_PREF_PCNT from pca_ac_fin_int_rt_less12_Rep pc
left join v5pf on trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)=int_acc_num
left join map_acc on  trim(v5abd)||trim(v5and)||trim(v5asd) = leg_branch_id||leg_scan||leg_scas
left join tbaadm.gam on foracid=fin_acc_num
left join (select * from tbaadm.disb where bank_id='01')disb on  rpc_acid=gam.acid  and trim(disb.remarks)=trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)
LEFT JOIN (select i1.* from tbaadm.itc i1
  left join (select * from tbaadm.itc where bank_id='01' and entity_type='RDISB')i2 on (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM > i2.INT_TBL_CODE_SRL_NUM)
  where i1.bank_id='01' and i2.entity_id is null)itc  ON  ITC.ENTITY_TYPE='RDISB' and   disb.DISB_ID=itc.entity_id ;
--drop table pca_int_rate_more12_rep;
--create table pca_int_rate_more12_rep
--as
--SELECT a.*,REPRICING_PLAN,'PCAEX' tbl_code,X.base_pcnt_dr,X.base_pcnt_cr,nvl(c.nrml_int_pcnt,0) cr_nrml_int_pcnt, nvl(d.nrml_int_pcnt,0) dr_nrml_int_pcnt,acc_pref_rate - (nvl(X.base_pcnt_dr,0) + nvl(d.nrml_int_pcnt,0))actual_pref_rate
--from pca_int_tbl a
--LEFT JOIN (SELECT * FROM TBAADM.GSP WHERE DEL_FLG= 'N' AND bank_id = get_param('BANK_ID'))GSP ON A.SCHM_CODE = GSP.SCHM_CODE
--left join(select * from tbaadm.csp where del_flg = 'N' and bank_id = get_param('BANK_ID'))csp on a.schm_code = csp.schm_code and a.v5ccy = csp.crncy_code
--left join (select c.* from migr_int_icv c where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))b on  'PCAEX' =b.int_tbl_code and  csp.CRNCY_CODE = b.CRNCY_CODE 
--and acct_open_date between b.start_date and b.MODIFY_END_DATE
--left join (select c.* from migr_int_icv c where c.del_flg = 'N' and c.bank_id = get_param('BANK_ID') and START_DATE <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY'))X on  X.int_tbl_code =b.BASE_int_tbl_code  
--and  X.CRNCY_CODE = b.CRNCY_CODE and acct_open_date between X.start_date and X.MODIFY_END_DATE
--left join (select a.* from tbaadm.IVS a 
--    inner join (select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM from tbaadm.IVS where del_flg = 'N' and bank_id = get_param('BANK_ID') and int_slab_dr_cr_flg = 'C' group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
--AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'C'
--where del_flg = 'N' and bank_id = get_param('BANK_ID') )C  on 'PCAEX' =C.int_tbl_code  and  csp.CRNCY_CODE = C.CRNCY_CODE 
--left join (select a.* from tbaadm.IVS a
--inner join (
--select  int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) INT_TBL_VER_NUM, MIN(INT_SLAB_SRL_NUM)INT_SLAB_SRL_NUM
--from tbaadm.IVS where del_flg = 'N' and bank_id = get_param('BANK_ID') 
--and int_slab_dr_cr_flg = 'D'
--group by int_tbl_code,crncy_code) b on a.int_tbl_code=b.int_tbl_code and a.crncy_code=b.crncy_code and a.INT_TBL_VER_NUM=b.INT_TBL_VER_NUM
--AND A.INT_SLAB_SRL_NUM = B.INT_SLAB_SRL_NUM AND A.int_slab_dr_cr_flg = 'D'
--where del_flg = 'N' and bank_id = get_param('BANK_ID') )d  on 'PCAEX' =d.int_tbl_code  and  csp.CRNCY_CODE = d.CRNCY_CODE
--inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = trim(INT_ACC_NUM)
--and (case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' and otmdt<>'0' and get_date_fm_btrv(otmdt) <> 'ERROR' and otmdt <> '9999999' then 
--     case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
--     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end
--     else 0 end)>12;
--create index pca_int_tbl_idx_3_rep on pca_int_rate_more12_rep(int_acc_num);
--drop table pca_acc_fin_int_rate_more121;
--create table pca_acc_fin_int_rate_more121 as
--select pc.*,ID_DR_PREF_PCNT from pca_int_rate_more12_rep pc
--left join v5pf on trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)=int_acc_num
--left join map_acc on  trim(v5abd)||trim(v5and)||trim(v5asd) = leg_branch_id||leg_scan||leg_scas
--left join tbaadm.gam on foracid=fin_acc_num
--left join (select * from tbaadm.disb where bank_id='01')disb on  rpc_acid=gam.acid  and trim(disb.remarks)=trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)
--LEFT JOIN (select i1.* from tbaadm.itc i1
--  left join (select * from tbaadm.itc where bank_id='01' and entity_type='RDISB')i2 on (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM > i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null)itc  ON  ITC.ENTITY_TYPE='RDISB' and   disb.DISB_ID=itc.entity_id ;
select distinct
to_char(map_acc.EXTERNAL_ACC) EXTERNAL_ACC_NO,
leg_branch_id LEG_BRANCH,
to_char(SOL_DESC) SOL_DESCRIPTION,
to_char(map_acc.leg_scan) LEG_SCAN,
to_char(map_acc.leg_scas) LEG_SCAS,
to_char(DISB_ID) DISB_ID,
to_char(map_acc.CURRENCY) LEG_CURRENCY,
to_char(gam.acct_crncy_code) FIN_CURRENCY,
case when map_acc.CURRENCY=gam.acct_crncy_code then 'TRUE' else 'FALSE' end CURRENCY_MATCH,
to_char(gam.sol_id) FIN_SOL,
to_char(gam.cif_id) FIN_CIF_ID,
TO_CHAR(MAP_ACC.LEG_ACC_NUM) LEG_ACC_NUM,
to_char(gam.foracid) FIN_ACC_NUM,
TO_CHAR(MAP_ACC.LEG_CUST_TYPE) LEG_CUST_TYPE,  
to_char(gam.schm_code) FIN_SCHEME_CODE,
TO_CHAR(GSP.SCHM_DESC) SCHEME_DESCRIPTION,
  --DS_AMT           NVARCHAR2(17),
      to_number((otdla)/POWER(10,c8pf.C8CED)) LEG_DISB_AMT,
      disb.DISB_AMT FIN_DISB_AMT,
      case when (to_number((otdla)/POWER(10,c8pf.C8CED)))= disb.DISB_AMT then 'TRUE' else 'FALSE' end  DISB_AMT_MATCH,
    --DS_DATE          NVARCHAR2(10),
  case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY') 
    else ' ' end LEG_DISB_DATE,
    disb.DISB_DATE FIN_DISB_DATE,
    case when (case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY') 
    else ' ' end)=to_char(disb.DISB_DATE,'DD-MM-YYYY') then 'TRUE' else 'FALSE' end  DISB_DATE_MATCH, 
  --DS_DUE_DATE      NVARCHAR2(10),
  case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MM-YYYY')
     else ' ' end LEG_DUE_DATE,
     disb.DUE_DATE FIN_DUE_DATE,
     case when (case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MM-YYYY')
     else ' ' end) =to_char(disb.DUE_DATE,'DD-MM-YYYY') then 'TRUE' else 'FALSE' end DUE_DATE_MATCH, 
--OPER_ACC_NUM     NVARCHAR2(16),
  case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end LEG_OPER_ACC,
  oper_gam.foracid FIN_OPER_ACC,
  case when (case when oper.fin_acc_num is not null then oper.fin_acc_num else ' ' end) = (oper_gam.foracid) then 'TRUE' else 'FALSE' end OPER_ACC_MATCH,
  --INT_CODE         NVARCHAR2(5),
itc.INT_TBL_CODE INT_TABLE_CODE,
--PEGGED_FLG       NVARCHAR2(1),
GSP.PEG_INT_FOR_AC_FLG PEGGED_FLAG,
--ACC_PR_INT_DR    NVARCHAR2(10),
less.ACTUAL_PREF_RATE LEG_PREF_RATE,
itc.ID_DR_PREF_PCNT FIN_PREF_RATE,
case when less.ACTUAL_PREF_RATE=itc.ID_DR_PREF_PCNT then 'TRUE' else 'FALSE' end PREF_RATE_MATCH,  
less.ACC_PREF_RATE LEG_NET_RATE,
nvl(less.BASE_PCNT_DR,0)+nvl(less.DR_NRML_INT_PCNT,0)+ nvl(less.ACTUAL_PREF_RATE,0) FIN_NET_RATE,
case when to_char(less.ACC_PREF_RATE)=to_char(nvl(less.BASE_PCNT_DR,0)+nvl(less.DR_NRML_INT_PCNT,0)+ nvl(less.ACTUAL_PREF_RATE,0)) then 'TRUE' else 'FALSE' end NET_RATE_MATCH, 
    --REMARKS          NVARCHAR2(70)
  trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr) LEG_REMARKS,
  trim(disb.remarks) FIN_REMARKS,
  case when trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr) = trim(disb.remarks) then 'TRUE' else 'FALSE' end REMARKS_MATCH
  from map_acc
  inner join v5pf on trim(v5abd)||trim(v5and)||trim(v5asd) = leg_branch_id||leg_scan||leg_scas 
  left join ospf on trim(v5brnm)||trim(v5dlp)||trim(v5dlr)=trim(osbrnm)||trim(osdlp)||trim(osdlr)
  inner join otpf on otbrnm||trim(otdlp)||trim(otdlr) = trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
  inner join c8pf on c8ccy = otccy
  left join pca_acc_fin_int_rate_less12 less on trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)=less.int_acc_num
  --left join pca_acc_fin_int_rate_more12 more on trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)=more.int_acc_num
  left join (select * from tbaadm.gsp where gsp.del_flg <> 'Y' and gsp.bank_id=get_param('BANK_ID'))gsp on gsp.schm_code = map_acc.schm_code  
  left join pca_operacc oper on  trim(oper.ompf_leg_num)=trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)
  left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY
  left join (select * from tbaadm.gam where bank_id='01')gam on gam.foracid=map_acc.fin_acc_num
  left join (select * from tbaadm.disb where bank_id='01')disb on  rpc_acid=gam.acid  and trim(disb.remarks)=trim(v5brnm)||trim(v5pf.v5dlp)||trim(v5dlr)
  LEFT JOIN (select * from TBAADM.SOL where bank_id=get_param('BANK_ID'))sol ON sol.SOL_ID = MAP_ACC.FIN_SOL_ID
  LEFT JOIN (select i1.* from tbaadm.itc i1
  left join (select * from tbaadm.itc where bank_id='01' and entity_type='RDISB')i2 on (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM > i2.INT_TBL_CODE_SRL_NUM)
  where i1.bank_id='01' and i2.entity_id is null)itc  ON  ITC.ENTITY_TYPE='RDISB' and   disb.DISB_ID=itc.entity_id
    left join (select * from tbaadm.gac where bank_id='01')gac on gac.acid=gam.acid
  left join (select * from tbaadm.gam where bank_id='01')oper_gam on oper_gam.acid=gac.INT_DR_ACID
  --left join (select * from tbaadm.itc where bank_id='01' and entity_type='RDISB')itc on disb.DISB_ID=itc.entity_id
  where map_acc.schm_type='PCA' and map_acc.schm_code='LDADV'
  and v5bal<>0 and v5act='LB' and  ((v5arc <> 'A' OR v5arc IS NULL) ) and (oscanr <> 'C' OR oscanr IS NULL OR oscanr = '') 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
retail_lein.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
retail_lein.sql 
select
'EXTERNAL_ACC_NO'||'|'||
'LIEN_TYPE'||'|'||
'LEG_BRANCH_ID'||'|'||                 
'LEG_CLIENT_NO'||'|'||                 
'LEG_SUFFIX'||'|'||                    
'LEG_ACCOUNT_TYPE'||'|'||              
'FINACLE_SOL_ID'||'|'||                
'FINACLE_CIF_ID'||'|'||                
'LEG_CUST_TYPE'||'|'||                 
'FINACLE_ACC_NUM'||'|'||               
'LEG_LIEN_AMT'||'|'||                  
'FINACLE_LIEN_AMT'||'|'||              
'LIEN_AMT_MATCH'||'|'||                
'LEG_CCY'||'|'||                       
'FINACLE_CCY'||'|'||                   
'CCY_MATCH'||'|'||                     
'LEG_START_DATE'||'|'||                
'FINACLE_START_DATE'||'|'||            
'START_DATE_MATCH'||'|'||              
'LEG_EXP_DATE'||'|'||                  
'FINACLE_LIEN_EXP_DATE'||'|'||         
'EXPIRY_DATE_MATCH'||'|'||    
'LEG_REQUESTED_BY_DESC'||'|'||         
'FINACLE_REQUESTED_BY_DESC'||'|'||     
'REQUESTED_BY_DESC_MATCH'||'|'||       
'LEG_LIEN_REMARK'||'|'||               
'FINACLE_LIEN_REMARK'||'|'||           
'LIEN_REMARK_MATCH'||'|'||             
'LEG_REQUEST_DEPT'||'|'||              
'FINACLE_REQUEST_DEPT'||'|'||          
'REQUEST_DEPT_MATCH'||'|'||            
'REQUEST_DEPT_DESCRIPTION'||'|'||      
'LEG_CONTACT_NUM'||'|'||               
'FINACLE_CONTACT_NUM'||'|'||           
'CONTACT_NUM_MATCH'||'|'||             
'SCHEME_TYPE'||'|'||                   
'SCHEME_CODE'||'|'||                   
'LIEN_REASON_CODE'||'|'||              
'LIEN_REASON'
from dual
union all
select distinct 
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(B2K_TYPE)||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char(map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.LEG_ACCT_TYPE) ||'|'||
to_char(map_acc.FIN_SOL_ID) ||'|'||
to_char(map_acc.FIN_CIF_ID) ||'|'||
to_char(map_acc.LEG_CUST_TYPE) ||'|'||
to_char(FIN_ACC_NUM) ||'|'||
to_char(LIEN_AMOUNT)||'|'||
to_char(to_number(alt.LIEN_AMT )+ to_number(alt.FUTURE_ULIEN_AMT)) ||'|'||
case when to_number(LIEN_AMOUNT)=to_number(alt.LIEN_AMT )+ to_number(alt.FUTURE_ULIEN_AMT) then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.ACCT_CRNCY_CODE)||'|'||
to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end)||'|'||
to_char(lt.LIEN_START_DATE)||'|'||
to_char(alt.lien_start_date)||'|'||
case when to_date(to_char(lt.LIEN_START_DATE),'dd-mm-yyyy') = (alt.lien_start_date) then 'TRUE' else 'FALSE' end ||'|'||
to_date(to_char(lt.LIEN_EXPIRY_DATE),'dd-mm-yyyy')||'|'||
to_char(alt.LIEN_EXPIRY_DATE)||'|'||
case when to_date(to_char(lt.LIEN_EXPIRY_DATE),'dd-mm-yyyy') = (alt.LIEN_EXPIRY_DATE) then 'TRUE' else 'FALSE' end ||'|'||
to_char(lt.REQUESTED_BY_DESC)||'|'||
to_char(alt.REQUESTED_BY_DESC)||'|'||
case when trim(to_char(lt.REQUESTED_BY_DESC)) = trim(to_char(alt.REQUESTED_BY_DESC)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(lt.LIEN_REMARKS)||'|'||
to_char(alt.lien_remarks) ||'|'||
case when trim(to_char(lt.LIEN_REMARKS))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end||'|'||
to_char(lt.REQUESTED_DEPARTMENT)||'|'||
TO_CHAR(alt.REQUEST_DEPARTMENT)||'|'||
case when trim(to_char(lt.REQUESTED_DEPARTMENT)) = trim(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end ||'|'||
TO_CHAR(C2RNM)||'|'||
to_char(lt.CONTACT_NUM)||'|'||
TO_CHAR(alt.CONTACT_NUM)||'|'||
case when trim(to_char(lt.CONTACT_NUM))=trim(TO_CHAR(alt.CONTACT_NUM)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.SCHM_TYPE)||'|'||
to_char(map_acc.SCHM_CODE)||'|'||
to_char(alt.LIEN_REASON_CODE)||'|'||
TO_CHAR(RCT.REF_DESC)
from (select * from lien_o_table) lt
left join map_acc on map_acc.fin_acc_num=trim(lt.account_number)
left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid =trim(lt.account_number) 
left JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid and to_number(lt.lien_amount)=to_number(alt.LIEN_AMT )+ to_number(alt.FUTURE_ULIEN_AMT) 
and nvl(trim(lt.CONTACT_NUM),'*')=nvl(trim(alt.CONTACT_NUM),'*') and  nvl(trim(lt.REQUESTED_BY_DESC),'*')=nvl(trim(alt.REQUESTED_BY_DESC),'*') and nvl(trim(lt.lien_remarks),'*')=nvl(trim(alt.lien_remarks),'*')
and to_date(lt.LIEN_EXPIRY_DATE,'DD-MM-YYYY')=alt.LIEN_EXPIRY_DATE
left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
LEFT JOIN C2PF ON C2ACO=trim(REQUESTED_DEPARTMENT)
--drop table lien_rpt;
--commit;
--create table lien_rpt
--(
--LIEN_TYPE  NVARCHAR2(90),
--LEG_BRANCH_ID NVARCHAR2(90),
--LEG_CLIENT_NO NVARCHAR2(90),
--LEG_SUFFIX NVARCHAR2(90),
--LEG_ACCOUNT_TYPE NVARCHAR2(90),
--FINACLE_SOL_ID NVARCHAR2(90),
--FINACLE_CIF_ID NVARCHAR2(90),
--LEG_CUST_TYPE NVARCHAR2(90),
--FINACLE_ACC_NUM NVARCHAR2(90),
--LEG_LIEN_AMT NVARCHAR2(90),
--FINACLE_LIEN_AMT NVARCHAR2(90),
--LIEN_AMT_MATCH NVARCHAR2(90),
--LEG_CCY NVARCHAR2(90),
--FINACLE_CCY NVARCHAR2(90),
--CCY_MATCH NVARCHAR2(90),
--LEG_START_DATE NVARCHAR2(90),
--FINACLE_START_DATE NVARCHAR2(90),
--START_DATE_MATCH NVARCHAR2(90),
--LEG_EXP_DATE NVARCHAR2(90),
--FINACLE_LIEN_EXP_DATE NVARCHAR2(90),
--LEG_REQUESTED_BY_DESC  NVARCHAR2(90),
--FINACLE_REQUESTED_BY_DESC  NVARCHAR2(90),
--REQUESTED_BY_DESC_MATCH  NVARCHAR2(90),
--LEG_LIEN_REMARK NVARCHAR2(90),
--FINACLE_LIEN_REMARK NVARCHAR2(90),
--LIEN_REMARK_MATCH NVARCHAR2(90),
--LEG_REQUEST_DEPT  NVARCHAR2(90),
--FINACLE_REQUEST_DEPT  NVARCHAR2(90),
--REQUEST_DEPT_MATCH  NVARCHAR2(90),
--REQUEST_DEPT_DESCRIPTION NVARCHAR2(90),
--LEG_CONTACT_NUM  NVARCHAR2(90),
--FINACLE_CONTACT_NUM  NVARCHAR2(90),
--CONTACT_NUM_MATCH  NVARCHAR2(90),
--SCHEME_TYPE NVARCHAR2(90),
--SCHEME_CODE NVARCHAR2(90),
--LIEN_REASON_CODE NVARCHAR2(90),
--LIEN_REASON NVARCHAR2(90)
--);
--commit;
--insert into lien_rpt
--select
--'LIEN_TYPE' ,
--'LEG_BRANCH_ID',
--'LEG_CLIENT_NO',
--'LEG_SUFFIX',
--'LEG_ACCOUNT_TYPE',
--'FINACLE_SOL_ID',
--'FINACLE_CIF_ID',
--'LEG_CUST_TYPE',
--'FINACLE_ACC_NUM',
--'LEG_LIEN_AMT',
--'FINACLE_LIEN_AMT',
--'LIEN_AMT_MATCH',
--'LEG_CCY',
--'FINACLE_CCY',
--'CCY_MATCH',
--'LEG_START_DATE',
--'FINACLE_START_DATE',
--'START_DATE_MATCH',
--'LEG_EXP_DATE',
--'FINACLE_LIEN_EXP_DATE',
--'LEG_REQUESTED_BY_DESC' ,
--'FINACLE_REQUESTED_BY_DESC' ,
--'REQUESTED_BY_DESC_MATCH' ,
--'LEG_LIEN_REMARK',
--'FINACLE_LIEN_REMARK',
--'LIEN_REMARK_MATCH',
--'LEG_REQUEST_DEPT' ,
--'FINACLE_REQUEST_DEPT' ,
--'REQUEST_DEPT_MATCH' ,
--'REQUEST_DEPT_DESCRIPTION',
--'LEG_CONTACT_NUM' ,
--'FINACLE_CONTACT_NUM' ,
--'CONTACT_NUM_MATCH' ,
--'SCHEME_TYPE',
--'SCHEME_CODE',
--'LIEN_REASON_CODE',
--'LIEN_REASON'
--from dual;
--commit;
--insert into lien_rpt
--select
--to_char('ULIEN') ,
--to_char(map_acc.LEG_BRANCH_ID) ,
--to_char(map_acc.LEG_SCAN) ,
--to_char(map_acc.LEG_SCAS) ,
--to_char(map_acc.LEG_ACCT_TYPE) ,
--to_char(map_acc.FIN_SOL_ID) ,
--to_char(map_acc.FIN_CIF_ID) ,
--to_char(map_acc.LEG_CUST_TYPE) ,
--to_char(FIN_ACC_NUM) ,
--trim(to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))) ,
--to_char(alt.LIEN_AMT) ,
--to_char(case when trim((to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ,
--to_char(map_acc.CURRENCY) ,
--to_char(gam.ACCT_CRNCY_CODE),
--to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end),
--to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY'),
--to_char(alt.lien_start_date),
--case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end,
--to_char(case
--        when juhed = '9999999' then ''
--        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end),
--to_char(alt.LIEN_EXPIRY_DATE),
--trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
--                 else ' ' end||
--                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
--                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
--                  else ' ' end,80,' '))),
--to_char(alt.REQUESTED_BY_DESC),
--to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
--                 else ' ' end||
--                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
--                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
--                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end),
--to_char(trim(JUHDD1)),
--to_char(alt.lien_remarks),
--case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end,                  
--trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ,
--TO_CHAR(alt.REQUEST_DEPARTMENT)  ,
--TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ,
--TO_CHAR(C2RNM),
--TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
--                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
--                 end) ,
--TO_CHAR(alt.CONTACT_NUM)  ,
--case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
--                 then lpad(substr(trim(JUHDD2)||' '||trim(JUHDD3)||' '||trim(JUHDD4),1,80),80,' ')
--                end))),'.')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),'.') then 'TRUE' else 'FALSE' end ,
--to_char(map_acc.SCHM_TYPE),
--to_char(map_acc.SCHM_CODE),
--to_char(alt.LIEN_REASON_CODE),
--TO_CHAR(RCT.REF_DESC)
--from map_acc
--  inner join jupf on trim(jupf.jubbn)=leg_branch_id and trim(jupf.jubno)=leg_scan and trim(jupf.jusfx)=leg_scas  
--  inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas  
--  inner join c8pf on c8ccy = scccy
--  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
--  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
--  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number(trim(juhamt)/POWER(10,C8CED)) and alt.LIEN_START_DATE=to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY') and to_char(trim(JUHDD1))=alt.lien_remarks
--  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
--  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
--  left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
--  LEFT JOIN C2PF ON C2ACO=trim(JUACO)
--  where case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
--  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--  and map_acc.schm_type not in('OOO','TDA','TFS','OAB');
--  commit;
--insert into lien_rpt
--select
--to_char('ULIEN') ,
--to_char(map_acc.LEG_BRANCH_ID) ,
--to_char(map_acc.LEG_SCAN) ,
--to_char(map_acc.LEG_SCAS) ,
--to_char(map_acc.LEG_ACCT_TYPE) ,
--to_char(map_acc.FIN_SOL_ID) ,
--to_char(map_acc.FIN_CIF_ID) ,
--to_char(map_acc.LEG_CUST_TYPE) ,
--to_char(map_acc.FIN_ACC_NUM) ,
--trim(to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))) ,
--to_char(alt.LIEN_AMT) ,
--to_char(case when trim((to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ,
--to_char(map_acc.CURRENCY) ,
--to_char(gam.ACCT_CRNCY_CODE),
--to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end),
--to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY'),
--to_char(alt.lien_start_date),
--case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end,
--to_char(case
--        when juhed = '9999999' then ''
--        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end),
--to_char(alt.LIEN_EXPIRY_DATE),
--trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
--                 else ' ' end||
--                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
--                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
--                  else ' ' end,80,' '))),
--to_char(alt.REQUESTED_BY_DESC),
--to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
--                 else ' ' end||
--                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
--                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
--                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end),
--to_char(trim(JUHDD1)),
--to_char(alt.lien_remarks),
--case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end,                  
--trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ,
--TO_CHAR(alt.REQUEST_DEPARTMENT)  ,
--TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ,
--TO_CHAR(C2RNM),
--TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
--                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
--                 end) ,
--TO_CHAR(alt.CONTACT_NUM)  ,
--case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
--                 then lpad(substr(trim(JUHDD2)||' '||trim(JUHDD3)||' '||trim(JUHDD4),1,80),80,' ')
--                end))),'.')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),'.') then 'TRUE' else 'FALSE' end ,
--to_char(map_acc.SCHM_TYPE),
--to_char(map_acc.SCHM_CODE),
--to_char(alt.LIEN_REASON_CODE),
--TO_CHAR(RCT.REF_DESC)  
--  from map_acc
--  inner join jupf on trim(jupf.jubbn)=leg_branch_id and trim(jupf.jubno)=leg_scan and trim(jupf.jusfx)=leg_scas  
--  inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas
--    inner join (select * from lien_depo where LIEN_ACCOUNT in( 
--    select LIEN_ACCOUNT from lien_depo
--    group by LIEN_ACCOUNT
--    having count(*)=1))dep_lien on dep_lien.LIEN_ACCOUNT=leg_branch_id||leg_scan||leg_scas  
--  inner join c8pf on c8ccy = scccy
--  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
--  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
--  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number(trim(juhamt)/POWER(10,C8CED)) and alt.LIEN_START_DATE=to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY') and to_char(trim(JUHDD1))=alt.lien_remarks
--  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
--  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
--  left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
--  LEFT JOIN C2PF ON C2ACO=trim(JUACO)
--  where case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
--  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--  and map_acc.schm_type ='TDA';
--  commit;
--insert into lien_rpt  
--select
--to_char('ULIEN') ,
--to_char(map_acc.LEG_BRANCH_ID) ,
--to_char(map_acc.LEG_SCAN) ,
--to_char(map_acc.LEG_SCAS) ,
--to_char(map_acc.LEG_ACCT_TYPE) ,
--to_char(map_acc.FIN_SOL_ID) ,
--to_char(map_acc.FIN_CIF_ID) ,
--to_char(map_acc.LEG_CUST_TYPE) ,
--to_char(map_acc.FIN_ACC_NUM) ,
--to_char(to_number((DEPOSIT_AMOUNT)/POWER(10,C8CED))) ,
--to_char(alt.LIEN_AMT) ,
--to_char(case when trim((to_char(lpad(to_number((DEPOSIT_AMOUNT)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ,
--to_char(map_acc.CURRENCY) ,
--to_char(gam.ACCT_CRNCY_CODE),
--to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end),
--to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY'),
--to_char(alt.lien_start_date),
--case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end,
--to_char(case
--        when juhed = '9999999' then ''
--        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end),
--to_char(alt.LIEN_EXPIRY_DATE),
--trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
--                 else ' ' end||
--                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
--                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
--                  else ' ' end,80,' '))),
--to_char(alt.REQUESTED_BY_DESC),
--to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
--                 else ' ' end||
--                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
--                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
--                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end),
--to_char(trim(JUHDD1)),
--to_char(alt.lien_remarks),
--case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end,                  
--trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ,
--TO_CHAR(alt.REQUEST_DEPARTMENT)  ,
--TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ,
--TO_CHAR(C2RNM),
--TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
--                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
--                 end) ,
--TO_CHAR(alt.CONTACT_NUM)  ,
--case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
--                 then lpad(substr(trim(JUHDD2)||' '||trim(JUHDD3)||' '||trim(JUHDD4),1,80),80,' ')
--                end))),'.')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),'.') then 'TRUE' else 'FALSE' end ,
--to_char(map_acc.SCHM_TYPE),
--to_char(map_acc.SCHM_CODE),
--to_char(alt.LIEN_REASON_CODE),
--TO_CHAR(RCT.REF_DESC) 
-- from map_acc
--inner join jupf on trim(jupf.jubbn)=leg_branch_id and trim(jupf.jubno)=leg_scan and trim(jupf.jusfx)=leg_scas  
--inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas
--inner join (select *  from lien_depo where LIEN_ACCOUNT in( 
--    select LIEN_ACCOUNT from lien_depo
--    group by LIEN_ACCOUNT ,LIEN_AMT
--    having count(*)>1 AND SUM(DEPOSIT_AMOUNT)=LIEN_AMT ))dep_lien on dep_lien.FIN_ACC_NUM=map_acc.fin_acc_num  
--  inner join c8pf on c8ccy = map_acc.currency
--  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
--  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
--  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number((DEPOSIT_AMOUNT)/POWER(10,C8CED)) and alt.LIEN_START_DATE=to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY') and to_char(trim(JUHDD1))=alt.lien_remarks
--  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
--  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
--  left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
--  LEFT JOIN C2PF ON C2ACO=trim(JUACO)
--where case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
--else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--and map_acc.schm_type ='TDA';
--commit; 
--insert into lien_rpt
--select
--to_char('ULIEN') ,
--to_char(map_acc.LEG_BRANCH_ID) ,
--to_char(map_acc.LEG_SCAN) ,
--to_char(map_acc.LEG_SCAS) ,
--to_char(map_acc.LEG_ACCT_TYPE) ,
--to_char(map_acc.FIN_SOL_ID) ,
--to_char(map_acc.FIN_CIF_ID) ,
--to_char(map_acc.LEG_CUST_TYPE) ,
--to_char(FIN_ACC_NUM) ,
-- lpad(case when lien_rpt.FINACLE_ACC_NUM is null then  to_char(CEILING_LIMIT)
--when to_number(CEILING_LIMIT) > to_number(LEG_LIEN_AMT) then to_char(to_number(CEILING_LIMIT) - to_number(LEG_LIEN_AMT))
--end,17,' ') ,
--to_char(alt.LIEN_AMT) ,
--case when trim(lpad(case when lien_rpt.FINACLE_ACC_NUM is null then  to_char(CEILING_LIMIT)
--when to_number(CEILING_LIMIT) > to_number(LEG_LIEN_AMT) then to_char(to_number(CEILING_LIMIT) - to_number(LEG_LIEN_AMT))
--end,17,' '))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end ,
--to_char(map_acc.CURRENCY) ,
--to_char(gam.ACCT_CRNCY_CODE),
--to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end),
--lpad(case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
--            rpad(to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--            else  rpad(' ',10,' ')
--            end,10,' '),
--to_char(alt.lien_start_date),
--case when trim(lpad(case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
--            rpad(to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
--            rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--            else  rpad(' ',10,' ')
--            end,10,' '))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end,
--lpad('01-01-2099',10,' '),
--to_char(alt.LIEN_EXPIRY_DATE),
--' ',
--to_char(alt.REQUESTED_BY_DESC),
--to_char(case when trim('')=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end),
--'Deposit Lien',
--to_char(alt.lien_remarks),
--case when trim('Deposit Lien')=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end,
--' ',
--TO_CHAR(alt.REQUEST_DEPARTMENT)  ,
--case when trim(' ')=trim(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end ,
--TO_CHAR(' '),
--to_char(lien_rpt.LEG_CONTACT_NUM) ,
--TO_CHAR(alt.CONTACT_NUM)  ,
--case when nvl(trim(to_char(lien_rpt.LEG_CONTACT_NUM)),'.') = nvl(trim(TO_CHAR(alt.CONTACT_NUM)),'.') then 'TRUE' else 'FALSE' end ,
--to_char(map_acc.SCHM_TYPE),
--to_char(map_acc.SCHM_CODE),
--to_char(alt.LIEN_REASON_CODE),
--TO_CHAR(RCT.REF_DESC)
--from col_dep_o_table a
--left join lien_rpt  on   trim(a.DEPOSIT_ACCOUNT_NUMBER)=trim(lien_rpt.FINACLE_ACC_NUM)
--inner join map_acc on fin_acc_num=trim(a.DEPOSIT_ACCOUNT_NUMBER)
--inner join v5pf on LEG_ACC_NUM=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
--left join (select * from otpf where ottdt='D')otpf on v5brnm=otbrnm and v5dlp=otdlp and v5dlr=otdlr
--inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
--left JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid and
--trim(lpad(case when lien_rpt.FINACLE_ACC_NUM is null then  to_char(CEILING_LIMIT)
--when to_number(CEILING_LIMIT) > to_number(LEG_LIEN_AMT) then to_char(to_number(CEILING_LIMIT) - to_number(LEG_LIEN_AMT))
--end,17,' '))=(to_char(alt.LIEN_AMT))
--left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
--WHERE  to_number(CEILING_LIMIT) > to_number(LEG_LIEN_AMT) OR trim(lien_rpt.FINACLE_ACC_NUM) IS NULL;
--commit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
retail_lein_OLD.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
retail_lein_OLD.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_LIEN.dat
select
'LIEN_TYPE' ||'|'||
'LEG_BRANCH_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_ACCOUNT_TYPE'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CUST_TYPE'||'|'||
'FINACLE_ACC_NUM'||'|'||
'LEG_LIEN_AMT'||'|'||
'FINACLE_LIEN_AMT'||'|'||
'LIEN_AMT_MATCH'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'LEG_START_DATE'||'|'||
'FINACLE_START_DATE'||'|'||
'START_DATE_MATCH'||'|'||
'LEG_EXP_DATE'||'|'||
'FINACLE_LIEN_EXP_DATE'||'|'||
'LEG_REQUESTED_BY_DESC' ||'|'||
'FINACLE_REQUESTED_BY_DESC' ||'|'||
'REQUESTED_BY_DESC_MATCH' ||'|'||
'LEG_LIEN_REMARK'||'|'||
'FINACLE_LIEN_REMARK'||'|'||
'LIEN_REMARK_MATCH'||'|'||
'LEG_REQUEST_DEPT' ||'|'||
'FINACLE_REQUEST_DEPT' ||'|'||
'REQUEST_DEPT_MATCH' ||'|'||
'REQUEST_DEPT_DESCRIPTION'||'|'||
'LEG_CONTACT_NUM' ||'|'||
'FINACLE_CONTACT_NUM' ||'|'||
'CONTACT_NUM_MATCH' ||'|'||
'SCHEME_TYPE'||'|'||
'SCHEME_CODE'||'|'||
'LIEN_REASON_CODE'||'|'||
'LIEN_REASON'
from dual
union all
select
to_char('ULIEN') ||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char(map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.LEG_ACCT_TYPE) ||'|'||
to_char(map_acc.FIN_SOL_ID) ||'|'||
to_char(map_acc.FIN_CIF_ID) ||'|'||
to_char(map_acc.LEG_CUST_TYPE) ||'|'||
to_char(FIN_ACC_NUM) ||'|'||
trim(to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))) ||'|'||
to_char(alt.LIEN_AMT) ||'|'||
to_char(case when trim((to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.ACCT_CRNCY_CODE)||'|'||
to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end)||'|'||
to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY')||'|'||
to_char(alt.lien_start_date)||'|'||
case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(case
        when juhed = '9999999' then ''
        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end)||'|'||
to_char(alt.LIEN_EXPIRY_DATE)||'|'||
trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' ')))||'|'||
to_char(alt.REQUESTED_BY_DESC)||'|'||
to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end)||'|'||
to_char(trim(JUHDD1))||'|'||
to_char(alt.lien_remarks)||'|'||
case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end||'|'||                  
trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ||'|'||
TO_CHAR(alt.REQUEST_DEPARTMENT)  ||'|'||
TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ||'|'||
TO_CHAR(C2RNM)||'|'||
TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
                 end) ||'|'||
TO_CHAR(alt.CONTACT_NUM)  ||'|'||
case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||' '||trim(JUHDD3)||' '||trim(JUHDD4),1,80),80,' ')
                end))),'.')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),'.') then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.SCHM_TYPE)||'|'||
to_char(map_acc.SCHM_CODE)||'|'||
to_char(alt.LIEN_REASON_CODE)||'|'||
TO_CHAR(RCT.REF_DESC)
from map_acc
  inner join jupf on trim(jupf.jubbn)=leg_branch_id and trim(jupf.jubno)=leg_scan and trim(jupf.jusfx)=leg_scas  
  inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas  
  inner join c8pf on c8ccy = scccy
  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number(trim(juhamt)/POWER(10,C8CED)) and alt.LIEN_START_DATE=to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY') and to_char(trim(JUHDD1))=alt.lien_remarks
  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
  left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
  LEFT JOIN C2PF ON C2ACO=trim(JUACO)
  where case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
  and map_acc.schm_type not in('OOO','TDA','TFS','OAB')
union all
select
to_char('ULIEN') ||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char(map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.LEG_ACCT_TYPE) ||'|'||
to_char(map_acc.FIN_SOL_ID) ||'|'||
to_char(map_acc.FIN_CIF_ID) ||'|'||
to_char(map_acc.LEG_CUST_TYPE) ||'|'||
to_char(map_acc.FIN_ACC_NUM) ||'|'||
trim(to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))) ||'|'||
to_char(alt.LIEN_AMT) ||'|'||
to_char(case when trim((to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.ACCT_CRNCY_CODE)||'|'||
to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end)||'|'||
to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY')||'|'||
to_char(alt.lien_start_date)||'|'||
case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(case
        when juhed = '9999999' then ''
        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end)||'|'||
to_char(alt.LIEN_EXPIRY_DATE)||'|'||
trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' ')))||'|'||
to_char(alt.REQUESTED_BY_DESC)||'|'||
to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end)||'|'||
to_char(trim(JUHDD1))||'|'||
to_char(alt.lien_remarks)||'|'||
case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end||'|'||                  
trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ||'|'||
TO_CHAR(alt.REQUEST_DEPARTMENT)  ||'|'||
TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ||'|'||
TO_CHAR(C2RNM)||'|'||
TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
                 end) ||'|'||
TO_CHAR(alt.CONTACT_NUM)  ||'|'||
case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||' '||trim(JUHDD3)||' '||trim(JUHDD4),1,80),80,' ')
                end))),'.')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),'.') then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.SCHM_TYPE)||'|'||
to_char(map_acc.SCHM_CODE)||'|'||
to_char(alt.LIEN_REASON_CODE)||'|'||
TO_CHAR(RCT.REF_DESC)  
  from map_acc
  inner join jupf on trim(jupf.jubbn)=leg_branch_id and trim(jupf.jubno)=leg_scan and trim(jupf.jusfx)=leg_scas  
  inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas
    inner join (select * from lien_depo where LIEN_ACCOUNT in( 
    select LIEN_ACCOUNT from lien_depo
    group by LIEN_ACCOUNT
    having count(*)=1))dep_lien on dep_lien.LIEN_ACCOUNT=leg_branch_id||leg_scan||leg_scas  
  inner join c8pf on c8ccy = scccy
  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number(trim(juhamt)/POWER(10,C8CED)) and alt.LIEN_START_DATE=to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY') and to_char(trim(JUHDD1))=alt.lien_remarks
  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
  left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
  LEFT JOIN C2PF ON C2ACO=trim(JUACO)
  where case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
  and map_acc.schm_type ='TDA'
  union all
select
to_char('ULIEN') ||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char(map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.LEG_ACCT_TYPE) ||'|'||
to_char(map_acc.FIN_SOL_ID) ||'|'||
to_char(map_acc.FIN_CIF_ID) ||'|'||
to_char(map_acc.LEG_CUST_TYPE) ||'|'||
to_char(map_acc.FIN_ACC_NUM) ||'|'||
trim(to_char(lpad(to_number((juhamt)/POWER(10,C8CED)),17,' '))) ||'|'||
to_char(alt.LIEN_AMT) ||'|'||
to_char(case when trim((to_char(lpad(to_number((DEPOSIT_AMOUNT)/POWER(10,C8CED)),17,' '))))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.ACCT_CRNCY_CODE)||'|'||
to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end)||'|'||
to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY')||'|'||
to_char(alt.lien_start_date)||'|'||
case when trim((to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YY')))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(case
        when juhed = '9999999' then ''
        else lpad(to_char(to_date(get_date_fm_btrv(juhed),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end)||'|'||
to_char(alt.LIEN_EXPIRY_DATE)||'|'||
trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' ')))||'|'||
to_char(alt.REQUESTED_BY_DESC)||'|'||
to_char(case when (trim(to_char(lpad(case when JUINP is not null then 'Date Hold Entered: '||to_char(to_date(get_date_fm_btrv(JUINP),'YYYYMMDD'),'DD-MM-YYYY')
                 else ' ' end||
                 case when JUDLM is not null and get_date_fm_btrv(JUDLM)<>'ERROR' then 
                ' Date Last Maintained: '|| to_char(to_date(get_date_fm_btrv(JUDLM),'YYYYMMDD'),'DD-MM-YYYY')
                  else ' ' end,80,' '))))=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end)||'|'||
to_char(trim(JUHDD1))||'|'||
to_char(alt.lien_remarks)||'|'||
case when trim(to_char(trim(JUHDD1)))=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end||'|'||                  
trim(TO_CHAR(lpad(trim(JUACO),80,' '))) ||'|'||
TO_CHAR(alt.REQUEST_DEPARTMENT)  ||'|'||
TO_CHAR(case when trim((TO_CHAR(lpad(trim(JUACO),80,' '))))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end)  ||'|'||
TO_CHAR(C2RNM)||'|'||
TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||trim(JUHDD3)||trim(JUHDD4),1,80),80,' ')
                 end) ||'|'||
TO_CHAR(alt.CONTACT_NUM)  ||'|'||
case when nvl(trim((TO_CHAR(case when trim(JUHDD2) is not null or trim(JUHDD3) is not null or trim(JUHDD4) is not null 
                 then lpad(substr(trim(JUHDD2)||' '||trim(JUHDD3)||' '||trim(JUHDD4),1,80),80,' ')
                end))),'.')=nvl(trim((TO_CHAR(alt.CONTACT_NUM))),'.') then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.SCHM_TYPE)||'|'||
to_char(map_acc.SCHM_CODE)||'|'||
to_char(alt.LIEN_REASON_CODE)||'|'||
TO_CHAR(RCT.REF_DESC) 
 from map_acc
inner join jupf on trim(jupf.jubbn)=leg_branch_id and trim(jupf.jubno)=leg_scan and trim(jupf.jusfx)=leg_scas  
inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas
inner join (select *  from lien_depo where LIEN_ACCOUNT in( 
    select LIEN_ACCOUNT from lien_depo
    group by LIEN_ACCOUNT ,LIEN_AMT
    having count(*)>1 AND SUM(DEPOSIT_AMOUNT)=LIEN_AMT ))dep_lien on dep_lien.FIN_ACC_NUM=map_acc.fin_acc_num  
  inner join c8pf on c8ccy = map_acc.currency
  inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
  inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
  INNER JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid AND trim(alt.lien_amt) = to_number((DEPOSIT_AMOUNT)/POWER(10,C8CED)) and alt.LIEN_START_DATE=to_char(to_date(get_date_fm_btrv(jusdte),'YYYYMMDD'),'DD-MON-YYYY') and to_char(trim(JUHDD1))=alt.lien_remarks
  and  case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
  else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')  and to_char(to_date(get_date_fm_btrv(trim(jusdte)),'YYYYMMDD'),'DD-MON-YYYY')  = TO_CHAR (alt.lien_start_date, 'DD-MON-YYYY')
  left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
  LEFT JOIN C2PF ON C2ACO=trim(JUACO)
where case when  juhed = '9999999' then to_date('20990101','YYYYMMDD')
else to_date(get_date_fm_btrv(jupf.juhed),'YYYYMMDD') end > to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
and map_acc.schm_type ='TDA'
  union all
  select
to_char('ULIEN') ||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char(map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.LEG_ACCT_TYPE) ||'|'||
to_char(map_acc.FIN_SOL_ID) ||'|'||
to_char(map_acc.FIN_CIF_ID) ||'|'||
to_char(map_acc.LEG_CUST_TYPE) ||'|'||
to_char(FIN_ACC_NUM) ||'|'||
to_char(LIEN_AMOUNT) ||'|'||
to_char(alt.LIEN_AMT) ||'|'||
case when trim(to_char(LIEN_AMOUNT))=(to_char(alt.LIEN_AMT)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.ACCT_CRNCY_CODE)||'|'||
to_char(case when (map_acc.CURRENCY)=(gam.ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end)||'|'||
to_char(to_date(lb.LIEN_START_DATE,'dd-mm-yyyy'),'DD-MON-YYYY')||'|'||
to_char(alt.lien_start_date)||'|'||
case when trim(to_char(to_date(lb.LIEN_START_DATE,'dd-mm-yyyy'),'DD-MON-YY'))=trim((to_char(alt.lien_start_date))) then 'TRUE' else 'FALSE' end||'|'||
to_char(lb.LIEN_EXPIRY_DATE)||'|'||
to_char(alt.LIEN_EXPIRY_DATE)||'|'||
to_char(lb.REQUESTED_BY_DESC)||'|'||
to_char(alt.REQUESTED_BY_DESC)||'|'||
to_char(case when trim(lb.REQUESTED_BY_DESC)=trim((to_char(alt.REQUESTED_BY_DESC))) then 'TRUE' else 'FALSE' end)||'|'||
to_char(lb.LIEN_REMARKS)||'|'||
to_char(alt.lien_remarks)||'|'||
case when trim(lb.LIEN_REMARKS)=trim(to_char(alt.lien_remarks)) then 'TRUE' else 'FALSE' end||'|'||                  
to_char(trim(REQUESTED_DEPARTMENT)) ||'|'||
TO_CHAR(alt.REQUEST_DEPARTMENT)  ||'|'||
case when trim(TO_CHAR(REQUESTED_DEPARTMENT))=(TO_CHAR(alt.REQUEST_DEPARTMENT)) then 'TRUE' else 'FALSE' end ||'|'||
TO_CHAR(C2RNM)||'|'||
to_char(lb.CONTACT_NUM) ||'|'||
TO_CHAR(alt.CONTACT_NUM)  ||'|'||
case when nvl(trim(to_char(lb.CONTACT_NUM)),'.') = nvl(trim(TO_CHAR(alt.CONTACT_NUM)),'.') then 'TRUE' else 'FALSE' end ||'|'||
to_char(map_acc.SCHM_TYPE)||'|'||
to_char(map_acc.SCHM_CODE)||'|'||
to_char(alt.LIEN_REASON_CODE)||'|'||
TO_CHAR(RCT.REF_DESC)
from map_acc
inner join scpf on scpf.scab=leg_branch_id and scan=leg_scan and scas=leg_scas  
inner join c8pf on c8ccy = scccy
inner join lien_o_table_bkp lb on trim(account_number)=trim(map_acc.fin_acc_num)
inner join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam on gam.foracid = map_acc.fin_acc_num
inner JOIN crmuser.accounts b ON map_acc.fin_cif_id = b.orgkey
left JOIN (select * from tbaadm.alt where bank_id=get_param('BANK_ID'))alt ON alt.acid = gam.acid
left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='BF')RCT ON ALT.LIEN_REASON_CODE=RCT.REF_CODE
LEFT JOIN C2PF ON C2ACO=trim(REQUESTED_DEPARTMENT);
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Rollover.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Rollover.sql 
select fin_cif_id CUSTOMER_NUMBER,leg_branch_id||leg_scan||leg_scas INTERNAL_ACC_NO,external_acc EXTERNAL_NUMBER, fin_acc_num FINACLE_ACC_NO,leg_acc_num DEAL_REF_NO, ossrc ROLLOVER_CODE,
case when map_acc.schm_code='LFR' and trim(ossrc)='A'  and isnumber(substr(trim(lcnr3||' '||lcnr4),length(trim(lcnr3||' '||lcnr4))-5,6))=1 and substr(trim(lcnr3||' '||lcnr4),length(trim(lcnr3||' '||lcnr4))-5,6) is not null and (substr(trim(lcnr3||' '||lcnr4),length(trim(lcnr3||' '||lcnr4))-5,6)) not like '%.%' then to_char('.'||substr(trim(lcnr3||' '||lcnr4),length(trim(lcnr3||' '||lcnr4))-5,6)) 
       when map_acc.schm_code='LFR' and trim(ossrc)='A' then '.250000'
       else ' ' end  ROLLOVER_FEE_PERCENTAGE,
round(((to_date(LIMIT_EXPIRY_DATE,'YYYYMMDD')-to_date(ACCT_OPEN_DATE,'YYYYMMDD'))-10)/30,0) ROLLOVER_MONTHS
from map_acc 
inner join cl001_o_table on trim(acc_num)=fin_acc_num
inner join ospf on osbrnm||trim(osdlp)||trim(osdlr)=leg_acc_num
left join ldpf on ldbrnm||trim(lddlp)||trim(lddlr)=leg_acc_num
left join lcpf on trim(lccmr)=trim(ldcmr)
where map_acc.schm_code='LFR' 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
si.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
si.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/si.dat
Select 
'TYPE_OF_SI' ||'|'||
'FINACLE_SI_SRL_NUM'  ||'|'||
'EQUATION_BRANCH_ID'||'|'||
'FINACLE_BRANCH_ID'||'|'||
'EQUATION_CLIENT_NO' ||'|'||
'FINACLE_CIF_ID' ||'|'||
--'EQUATION_SI_SRL_NUM'||'|'||
--'FINACLE_SI_SRL_NUM'||'|'||
'EQUATION_FREQ_TYPE'||'|'||
---'EQUATION_EXTRACTED_FREQ_TYPE'||'|'||
'FINACLE_SI_FREQ_TYPE'||'|'||
'SI_FREQ_TYPE_MATCH' ||'|'||
'EQUATION_FREQ_START_DD'||'|'||
'FINACLE_FREQ_START_DD'||'|'||
'FREQ_START_DD_MATCH' ||'|'||
'EQUATION_SI_END_DATE'||'|'||
'FINACLE_SI_END_DATE'||'|'||
'SI_END_DATE_MATCH'||'|'||
'EQUATION_SI_NEXT_EXEC_DT'||'|'||
'FINACLE_SI_NEXT_EXEC_DT'||'|'||
'NEXT_EXECUTION_DT_MATCH'||'|'||
--'LEG_BALANCE_INDICATOR' ||'|'||
--'FINACLE_BALANCE_INDICATOR' ||'|'||
--'BALANCE_INDICATOR_MATCH' ||'|'||
--'LEG_EXCESS_SHORT_INDICATOR' ||'|'||
--'FINACLE_EXCESS_SHORT_INDICATOR' ||'|'||
--'EXCESS_SHORT_INDICATOR_MATCH' ||'|'||
'EQUATION_CURRENCY'||'|'||
'FINACLE_CURRENCY'||'|'||
'CURRENCY_MATCH'||'|'||
'EQUATION_SI_AMT'||'|'||
'FINACLE_SI_AMT'||'|'||
'SI_AMT_MATCH'||'|'||
'INTERNAL_DR_ACC_NUM'||'|'||
'EQUATION_DR_ACC_NO'||'|'||
'FINACLE_DR_ACC_NO'||'|'||
'DR_ACC_MATCH'||'|'||
'INTERNAL_CR_ACC_NUM'||'|'||
'EQUATION_CR_ACC_NO'||'|'||
'FINACLE_CR_ACC_NO'||'|'||
'CR_ACC_MATCH'||'|'||
'EQUATION_SI_FREQ_DAYS_NUM' ||'|'||
'LEGACY_RATE_CODE' ||'|'||
'FINACLE_RATE_CODE' ||'|'||
'LEGACY_CR_RATE_CODE' ||'|'||
'FINACLE_CR_RATE_CODE'||'|'||
'LEG_SI_REFERENCE_NUMBER'||'|'||
'PR_SRL_NUM'||'|'||
'FIN_REF_NO'||'|'||
'PAYSIS_ID'||'|'||
'LEG_NAME'||'|'||
'FIN_NAME'||'|'||
'DETAILS_MATCH'||'|'||
'LEG_IBAN'||'|'||
'FIN_IBAN'||'|'||
'IBAN_MATCH'||'|'||
'LEG_PAYEE_BANK_CODE'||'|'||
'FIN_PAYEE_BANK_CODE'||'|'||
'PAYEE_BANK_CODE_MATCH'||'|'||
'LEG_PAYEE_BR_BRANCH'||'|'||
'FIN_PAYEE_BR_CODE'||'|'||
'PAYEE_BR_CODE_MATCH'
from dual
union all
Select distinct
'SAME CURRENCY SI' ||'|'||
to_char(SI_SRL_NUM) ||'|'|| 
to_char(r5ab) ||'|'||
to_char(nvl(map_acc.fin_sol_id,map_sol.fin_sol_id)) ||'|'||  
to_char(r5an) ||'|'||
to_char(map_ACC.fin_cif_id) ||'|'||
--'EQUATION_SI_SRL_NUM'||'|'||
--'FINACLE_SI_SRL_NUM'||'|'||
to_char(mapfrequency(substr(VW_ACTIVE_SI.r5afr,1,1))) ||'|'||
---'EQUATION_EXTRACTED_FREQ_TYPE'||'|'||
to_char(si_rpt.SI_FREQ_TYPE) ||'|'||
case when to_char(trim(mapfrequency(substr(VW_ACTIVE_SI.r5afr,1,1)))) = to_char(si_rpt.SI_FREQ_TYPE) then 'TRUE' else 'FALSE' end ||'|'||
case when trim(mapfrequency(substr(VW_ACTIVE_SI.r5afr,1,1))) in('W','F','D') 
then '' else to_char(substr(VW_ACTIVE_SI.r5afr,2,2)) end  ||'|'||
to_char(si_rpt.si_freq_start_dd) ||'|'||
case when (case when trim(mapfrequency(substr(VW_ACTIVE_SI.r5afr,1,1))) in('W','F','D') 
then '' else to_char(substr(VW_ACTIVE_SI.r5afr,2,2)) end) = lpad(to_char(si_rpt.si_freq_start_dd),2,0) then 'TRUE' else 'FALSE' end ||'|'||
  case
  when VW_ACTIVE_SI.r5fld='9999999' then ' '
  when get_date_fm_btrv(VW_ACTIVE_SI.r5fld)<>0 and get_date_fm_btrv(VW_ACTIVE_SI.r5fld) <> 'ERROR' then
  to_char(to_date(get_date_fm_btrv(VW_ACTIVE_SI.r5fld),'YYYYMMDD'),'DD-MM-YYYY') end ||'|'||
case when to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY')='31-12-2099' then ' ' else to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY') end ||'|'||
case when(case
  when VW_ACTIVE_SI.r5fld='9999999' then ' '
  when get_date_fm_btrv(VW_ACTIVE_SI.r5fld)<>0 and get_date_fm_btrv(VW_ACTIVE_SI.r5fld) <> 'ERROR' then
  to_char(to_date(get_date_fm_btrv(VW_ACTIVE_SI.r5fld),'YYYYMMDD'),'DD-MM-YYYY') end) = (case when to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY')='31-12-2099' then ' ' else to_char(si_rpt.SI_END_DATE,'DD-MM-YYYY') end) then 'TRUE' else 'FALSE' end  ||'|'||
case when get_date_fm_btrv(VW_ACTIVE_SI.r5npr)<>0 and get_date_fm_btrv(VW_ACTIVE_SI.r5npr) <> 'ERROR' then 
  RPAD(to_char(to_date(get_date_fm_btrv(VW_ACTIVE_SI.r5npr),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end ||'|'||
to_char(si_rpt.NEXT_EXEC_DaTe,'DD-MM-YYYY') ||'|'||
case when (case when get_date_fm_btrv(VW_ACTIVE_SI.r5npr)<>0 and get_date_fm_btrv(VW_ACTIVE_SI.r5npr) <> 'ERROR' then 
  RPAD(to_char(to_date(get_date_fm_btrv(VW_ACTIVE_SI.r5npr),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end) = to_char(si_rpt.NEXT_EXEC_DaTe,'DD-MM-YYYY') then 'TRUE' else 'FALSE' end ||'|'||
FUND_CCY ||'|'||
to_char(si_rpt.crncy_code) ||'|'||
case when (case when trim(c8ccy)='DH' then 'AED' else trim(c8ccy) end) = to_char(si_rpt.crncy_code) then 'TRUE' else 'FALSE' end ||'|'||
to_char(abs(to_number(VW_ACTIVE_SI.r5rpa)/POWER(10,c8pf.C8CED))) ||'|'||
to_char(si_rpt.fixed_amt) ||'|'||
case when to_char(abs(to_number(VW_ACTIVE_SI.r5rpa)/POWER(10,c8pf.C8CED))) = to_char(si_rpt.fixed_amt) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(nvl(map_acc1.LEG_BRANCH_ID||MAP_ACC1.LEG_SCAN||MAP_ACC1.LEG_SCAS,map_off_acc1.leg_acc_num))||'|'||
to_char(r5ab||r5an||r5as)||'|'||
--to_char(af.scab||af.scan||af.scas)||'|'||
to_char(nvl(trim(map_acc1.fin_acc_num),map_off_acc1.fin_acc_num))||'|'||
to_char(si_rpt.dr_acct_number)||'|'||
case when trim(to_char(nvl(trim(map_acc1.fin_acc_num),map_off_acc1.fin_acc_num))) = trim(to_char(si_rpt.dr_acct_number)) then 'TRUE' else 'FALSE' end||'|'||
--to_char (nvl(map_acc2.LEG_BRANCH_ID||MAP_ACC2.LEG_SCAN||MAP_ACC2.LEG_SCAS,map_off_acc2.leg_acc_num)) ||'|'||
--to_char(af1.scab||af1.scan||af1.scas)||'|'||
to_char(r5rab||r5ran||r5ras)||'|'||
to_char(nvl(map_acc2.fin_acc_num,map_off_acc1.fin_acc_num)) ||'|'||
to_char(si_rpt.cr_acct_number)||'|'||
case when trim(to_char(nvl(map_acc2.fin_acc_num,map_off_acc1.fin_acc_num)))=trim(to_char(si_rpt.cr_acct_number)) then 'TRUE' else 'FALSE' end ||'|'||
' '  ||'|'||
' ' ||'|'||
' ' ||'|'||
' ' ||'|'||
' ' ||'|'||
to_char(R5sor)||'|'||
to_char(r5ab||r5an||r5as||R5SOR)||'|'||
to_char(si_rpt.REF_NUM)||'|'||
case when trim(rstd.REF_NUM) is not null then 'SWIFT' else '' end||'|'||
to_char(Details)||'|'||
to_char(PARTY_NAME)||'|'||
case when nvl(trim(Details),'.') = nvl(trim(PARTY_NAME),'.') then 'TRUE' else 'FALSE' end||'|'||
to_char(iban)||'|'||
to_char(OTHER_PARTY_NAME)||'|'||
case when nvl(trim(iban),'.')=nvl(trim(OTHER_PARTY_NAME),'.') then 'TRUE' else 'FALSE' end||'|'||
to_char(BENEF_BANK)||'|'||
to_char(PAYEE_BANK_CODE)||'|'|| 
case when nvl(trim(BENEF_BANK),'.') = nvl(trim(PAYEE_BANK_CODE),'.') then 'TRUE' else 'FALSE' end ||'|'||
to_char(BENEF_BRANCH) ||'|'||
to_char(PAYEE_BR_CODE)||'|'||
case when nvl(trim(BENEF_BRANCH),'.')=nvl(trim(PAYEE_BR_CODE),'.') then 'TRUE' else 'FALSE' end 
from active_si VW_ACTIVE_SI
inner join C8PF on C8CCYN = VW_ACTIVE_SI.R5CCY
inner join scpf on r5ab||r5an||r5as=scab||scan||scas
inner join map_sol on br_code=trim(r5ab)
left join (select * from map_cif where del_flg<>'Y')map_cif on map_cif.gfcpnc = trim(VW_ACTIVE_SI.r5an)
left join crmuser.accounts b on b.ORGKEY = map_cif.fin_cif_id
left join map_acc on leg_branch_id || leg_scan||leg_scas =  r5ab||r5an||r5as
inner join si_rpt on  abs(to_number(VW_ACTIVE_SI.r5rpa)/POWER(10,c8pf.C8CED)) = si_rpt.fixed_amt
and 
case when get_date_fm_btrv(VW_ACTIVE_SI.r5npr)<>0 and get_date_fm_btrv(VW_ACTIVE_SI.r5npr) <> 'ERROR' then 
  RPAD(to_char(to_date(get_date_fm_btrv(VW_ACTIVE_SI.r5npr),'YYYYMMDD'),'DD-MM-YYYY'),10,' ') end = to_char(si_rpt.NEXT_EXEC_DATE,'DD-MM-YYYY') 
and to_char(fund_account) = to_char(si_rpt.dr_acct_number) and trim(to_char(R5sor))=trim(si_rpt.ref_num)
left join (select * from map_acc) map_acc1 on trim(map_acc1.fin_acc_num) = trim(VW_ACTIVE_SI.FUND_ACCOUNT)
left join (select * from map_acc) map_acc2 on trim(map_acc2.fin_acc_num) = trim(VW_ACTIVE_SI.recv_account)
left join (select * from map_off_acc) map_off_acc1 on map_off_acc1.fin_acc_num = trim(VW_ACTIVE_SI.FUND_ACCOUNT)
left join (select * from map_off_acc) map_off_acc2 on map_off_acc2.fin_acc_num = trim(VW_ACTIVE_SI.recv_account)
left join siu_tt ON trim(FUND_ACCOUNT)||TRIM(R5SOR) =trim(FUND_ACCT_NUM)||TRIM(SO_REF)
left join SIU_TT_BANK on BANK_NAME=BENEF_ACCT_NAME
left join (select * from tbaadm.pyrd pd
inner join tbaadm.pyrh ph on pd.PR_SRL_NUM=ph.PR_SRL_NUM 
inner join tbaadm.rstd rs on rs.PR_SRL_NUM=ph.PR_SRL_NUM
left join tbaadm.gam on pd.acid=gam.acid)rstd  on trim(r5ab||r5an||r5as||R5SOR)= trim(rstd.REF_NUM)
left join all_final_trial_balance af on  trim(si_rpt.dr_acct_number)=af.fin_acc_num
--left join all_final_trial_balance af1 on  trim(si_rpt.cr_acct_number)=af1.fin_acc_num
WHERE trim(FUND_CCY) = trim(RECV_CCY) and  R5NPR>get_param('EODCYYMMDD') and r5fld>get_param('EODCYYMMDD');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
si_tt.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
si_tt.sql 
select
r5ab||r5an||r5as||R5SOR PR_SRL_NUM,
REF_NUM FIN_REF_NO,
'SWIFT' PAYSYS_ID,
'KWD' CURRENCY,
FUND_ACCOUNT LEG_FUND_ACCOUNT,
foracid FIN_FUND_ACC,
Details LEG_NAME,
PARTY_NAME FIN_NAME,
case when trim(Details) = trim(PARTY_NAME) then 'TRUE' else 'FALSE' end DETAILS_MATCH,
iban LEG_IBAN,
OTHER_PARTY_NAME FIN_IBAN,
case when trim(iban)=trim(OTHER_PARTY_NAME) then 'TRUE' else 'FALSE' end IBAN_MATCH,
BENEF_BANK LEG_PAYEE_BANK_CODE,
PAYEE_BANK_CODE FIN_PAYEE_BANK_CODE,
case when trim(BENEF_BANK) = trim(PAYEE_BANK_CODE) then 'TRUE' else 'FALSE' end PAYEE_BANK_CODE_MATCH,
BENEF_BRANCH LEG_PAYEE_BR_BRANCH,
PAYEE_BR_CODE FIN_PAYEE_BR_CODE,
case when trim(BENEF_BRANCH)=trim(PAYEE_BR_CODE) then 'TRUE' else 'FALSE' end PAYEE_BR_CODE_MATCH
from ACTIVE_SI 
inner join siu_tt ON trim(FUND_ACCOUNT)||TRIM(R5SOR) =trim(FUND_ACCT_NUM)||TRIM(SO_REF)
inner join SIU_TT_BANK on BANK_NAME=BENEF_ACCT_NAME
inner join scpf on r5ab||r5an||r5as=scab||scan||scas
left join map_acc on leg_branch_id||leg_scan||leg_scas=scab||scan||scas
--left join tbaadm.gam gam on foracid=fin_acc_num
--left join tbaadm.pyrd pyrd on gam.acid=pyrd.acid
left join (select * from tbaadm.pyrd pd
inner join tbaadm.pyrh ph on pd.PR_SRL_NUM=ph.PR_SRL_NUM 
inner join tbaadm.rstd rs on rs.PR_SRL_NUM=ph.PR_SRL_NUM
left join tbaadm.gam on pd.acid=gam.acid)rstd  on r5ab||r5an||r5as||R5SOR= REF_NUM
--inner join tbaadm.rstd on trim(OTHER_PARTY_NAME)=trim(iban) and trim(PARTY_NAME)=trim(Details)
WHERE trim(FUND_CCY) = trim(RECV_CCY) and  R5NPR>get_param('EODCYYMMDD') and r5fld>get_param('EODCYYMMDD') 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Special_condition.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
Special_condition.sql 
  select EXTERNAL_ACC EXTERNAL_ACC,map_acc.LEG_BRANCH_ID,map_acc.LEG_SCAN,map_acc.LEG_SCAS,map_acc.LEG_ACC_NUM,map_acc.FIN_ACC_NUM,map_acc.LEG_CUST_TYPE,map_acc.SCHM_TYPE,
map_acc.SCHM_CODE,SCAI17 SC017,SCAI81 SC081,SCAI83 SC083,SCAI84 SC084,FREZ_CODE,FREZ_REASON_CODE,REF_DESC,SCAI85 SC085,nvl(corp.STATUS,acct.status) STATUS,SCAIC7 ,SCAI92  SC092, MODE_OF_OPER_CODE,
scaig4 SC164,scaij2 SCAI192,scaij3 SCAI193,FREE_TEXT_6 FIN_TAJER,scaij4 SCAI194,FREE_TEXT_7 FIN_CHANGE_SIGNATURE,scaig7 SCAI167,SCAIJ6 SCAI196,acct.CUST_HLTH CUST_HLTH,
case when value=nvl(corp.HEALTH_DESC,acct.CUST_HLTH) then 'TRUE' else 'FALSE' end HEALTH_CODE_MATCH,
lang.LOCALETEXT,
scaco
from map_acc 
left join scpf on trim(scab)||trim(scan)||trim(scas)=trim(LEG_BRANCH_ID)||trim(LEG_SCAN)||trim(LEG_SCAS)
left join (select * from tbaadm.gam where bank_id='01')gam on gam.foracid=map_acc.fin_acc_num
left join (select * from tbaadm.rct where bank_id='01' and  REF_REC_TYPE='31')rct on gam.FREZ_REASON_CODE=REF_CODE
left join (select * from tbaadm.gac where bank_id='01')gac on gac.acid=gam.acid
left join map_cif on map_cif.fin_cif_id=map_acc.fin_cif_id
left join crmuser.accounts acct on map_cif.fin_cif_id=orgkey
left join crmuser.corporate corp on map_cif.fin_cif_id=corp.corp_key
left join (select * from crmuser.categories where CATEGORYTYPE='HEALTH_CODE' and bank_id='01')cat on value=nvl(corp.HEALTH_DESC,acct.CUST_HLTH)
left join CRMUSER.CATEGORY_LANG lang on lang.CATEGORYID=cat.CATEGORYID
where map_acc.schm_type in ('SBA','CAA','ODA','PCA')  
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
stop_cheque.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
stop_cheque.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_STOP_CHEQUE.dat
select
--'LEG_CHEQUE_REF_NO' ||'|'||
'FINACLE_CHEQUE_REF_NO' ||'|'||
'LEG_BRANCH_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CRNC_CODE'||'|'||
'FINACLE_CRNC_CODE'||'|'||
'CURRENCY_CODE_MATCH'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'FINACLE_ACCOUNT_NUMBER'||'|'||
'LEG_CHEQUE_NUMBER'||'|'||
'FINACLE_CHEQUE_NUMBER'||'|'||
'CHEQUE_NUMBER_MATCH'||'|'||
'LEG_CHEQUE_AMOUNT'||'|'||
'FINACLE_CHEQUE_AMOUNT'||'|'||
'CHEQUE_AMOUNT_MATCH'  ||'|'||
'LEG_ACCEPTANCE_DATE'  ||'|'||
'FINACLE_ACCEPTANCE_DATE'  ||'|'||
'ACCEPTANCE_DATE_MATCH' ||'|'||
'LEG_CHEQUE_DATE'  ||'|'||
'FINACLE_CHEQUE_DATE'  ||'|'||
'CHEQUE_DATE_MATCH'||'|'||
'LEG_REASON_CODE'||'|'||
'FIN_REASON_CODE'||'|'||
'REASON_CODE_MATCH'||'|'||
'LEG_REASON'||'|'||
'FIN_REASON'
from dual
union all
select distinct
--TO_CHAR(LEG_REF_NO) ||'|'||
TO_CHAR(REF_NUM) ||'|'||
to_char(map_acc.LEG_BRANCH_ID) ||'|'||
to_char( map_acc.LEG_SCAN) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(rpad(map_acc.currency,3,' '))||'|'||
to_char(ACCT_CRNCY_CODE)||'|'||
case when to_char(rpad(map_acc.currency,3,' ')) = to_char(ACCT_CRNCY_CODE) then 'TRUE' else 'FALSE' end  ||'|'||
to_char(map_acc.fin_sol_id) ||'|'||
to_char(map_acc.fin_cif_id) ||'|'||
to_char(foracid) ||'|'||
to_char(lpad(START_NO,16,' '))||'|'||
to_char(begin_chq_num)||'|'||
case when to_number(spt.begin_chq_num)= to_number((lpad(START_NO,16,' '))) then 'TRUE' else 'FALSE' end   ||'|'||
to_char(trim(case when trim(AMOUNT) is not null and  trim(AMOUNT)<>0  then
            lpad(AMOUNT/power(10,c8ced),17,' ') 
            else lpad('0',17,' ') end))  ||'|'||
to_char(chq_amt)||'|'||
case when nvl(trim(case when trim(AMOUNT) is not null and  trim(AMOUNT)<>0  then
            lpad(AMOUNT/power(10,c8ced),17,' ') 
            else lpad(' ',17,' ') end),'0') = nvl(trim(chq_amt),'0') then 'TRUE' else 'FALSE' end ||'|'||
to_char(POSTDT) ||'|'||
to_char(ACPT_DATE,'DD-MON-YYYY') ||'|'||
CASE WHEN to_char(POSTDT) = to_char(ACPT_DATE,'DD-MM-YYYY')  THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when trim(rpad(' ',10,' ')) is not null then to_char(to_date(rpad(' ',10,' '),'DD-MM-YYYY'),'DD-MON-YYYY') else ' ' end  ||'|'||
to_char(CHQ_DATE,'DD-MON-YYYY') ||'|'||
CASE WHEN (case when trim(rpad(' ',10,' ')) is not null then nvl(to_char(to_date(rpad(' ',10,' '),'DD-MM-YYYY'),'DD-MON-YYYY'),' ') else ' ' end) = nvl(to_char(CHQ_DATE,'DD-MON-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END||'|'||
to_char(FIN_STOP_PAY_REASON_CODE)||'|'||
to_char(rct.REF_CODE)||'|'||
CASE WHEN NVL(to_char(FIN_STOP_PAY_REASON_CODE),'.') = NVL(to_char(rct.REF_CODE),'.') THEN 'TRUE' ELSE 'FALSE' END||'|'||
TO_CHAR(NARRATION)||'|'||
rct.REF_DESC
from spt_temp
left join map_acc on map_acc.fin_acc_num=spt_temp.fin_acc_num
inner join c8pf on c8ccy=spt_temp.CURRENCY
left join stop_reason_code on trim(LEG_STOP_REASON_CODE)=trim(narration)
left JOIN (select * from tbaadm.gam where BANK_ID=get_param('BANK_ID'))gam  ON gam.foracid = spt_temp.fin_acc_num 
left JOIN (SELECT * FROM TBAADM.RCT WHERE BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='08')RCT ON trim(FIN_STOP_PAY_REASON_CODE)=trim(RCT.REF_CODE)
left join (select * from tbaadm.spt where BANK_ID=get_param('BANK_ID'))spt on spt.acid = gam.acid  and to_number(spt.begin_chq_num) =  to_number((START_NO));
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
sweeps.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
sweeps.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_SWEEPS.dat
select 
'LEG_ACC_NUM'||'|'||
'FIN_ACC_NUM'||'|'||
'ACC_NUM_MATCH'||'|'||
'LEG_POOL_NUMBER'||'|'||
'FIN_POOL_ID'||'|'||
'LEG_POOL_DESC'||'|'||
'FIN_POOL_DESC'||'|'||
'POOL_DESC_MATCH' ||'|'||
'LEG_SUSPEND_FLAG'||'|'||
'FIN_SUSPEND_FLAG'||'|'||
'SUSPEND_FLAG_MATCH' ||'|'||
'LEG_UTILIZATION_ORDER'||'|'||
'FIN_UTILIZATION_ORDER'||'|'||
'UTILIZATION_ORDER_MATCH'||'|'||
'LEG_POOL_TYPE'||'|'||
'FIN_POOL_TYPE'||'|'||
'POOL_TYPE_MATCH'
from dual
union all
select
to_char(case when r7bot <> 'D' then rPAD(FIN_BO_ACCOUNT,16,' ') else RPAD(FIN_BO_DR_ACCT,16,' ') end) ||'|'||
foracid||'|'||
case when case when r7bot <> 'D' then trim(FIN_BO_ACCOUNT) else trim(FIN_BO_DR_ACCT) end=foracid then 'TRUE' else 'FALSE' end ||'|'||
case when bo_fin_cif_id is null then RPAD(' ',6,' ') else RPAD(bo_fin_cif_id,6,' ') end||'|'||
POOL_OWNER_CUST_ID||'|'||
case when bo_fin_cif_id is null then (' ') else (bo_fin_cif_id) end||'|'||
to_char(POOL_DESC) ||'|'||
case when trim(case when bo_fin_cif_id is null then (' ') else (bo_fin_cif_id) end) = trim(to_char(POOL_DESC)) then 'TRUE' else 'FALSE' end||'|'||
'N'||'|'||
to_char(SUSPEND_FLG)||'|'||
case when ('N') = to_char(SUSPEND_FLG) then 'TRUE' else 'FALSE' end ||'|'||
to_char(R0SEQ) ||'|'||
ORDER_OF_UTILISATION||'|'||
case when to_number(trim(R0SEQ))= to_number(ORDER_OF_UTILISATION) then 'TRUE' else 'FALSE' end||'|'||
case when trim(FUND_CCY) <> trim(RECV_CCY) then 'M' else 'S' end||'|'||
POOL_TYPE ||'|'||
case when (case when trim(FUND_CCY) <> trim(RECV_CCY) then 'M' else 'S' end)= trim(POOL_TYPE) then 'TRUE' else 'FALSE' end 
from BALANCE_ORDER
inner join c8pf on trim(c8ccy) = trim(fund_ccy)
inner join map_acc on fin_acc_num=case when r7bot <> 'D' then trim(FIN_BO_ACCOUNT) else trim(FIN_BO_DR_ACCT) end
left join (select * from tbaadm.gam where bank_id='01')gam on foracid=fin_acc_num  
left join (select * from tbaadm.pft where bank_id='01')pft on gam.pool_id=pft.pool_id
where r7npr >get_param('EODCYYMMDD') AND r7fld>get_param('EODCYYMMDD')
and r0frc ='R' and map_acc.schm_type in ('SBA','CAA','ODA');
EXIT;




select 
trim(pool.Account_number) LEG_ACCOUNT,
foracid FIN_ACCOUNT,
case when trim(pool.Account_number)=foracid then 'TRUE' else 'FALSE' end ACCOUNT_MATCH,
pool.POOL_NUMBER LEG_POOL_NO,
POOL_OWNER_CUST_ID FIN_POOL_ID,
pool.POOL_DESC LEG_POOL_DESC,
pft.POOL_DESC FIN_POOL_DESC,
case when trim(pool.POOL_DESC) = trim(pft.POOL_DESC) then 'TRUE' else 'FALSE' end POOL_DESC_MATCH,
pool.SUSPEND_FLAG LEG_SUSPEND,
pft.SUSPEND_FLG FIN_SUSPEND,
case when trim(pool.SUSPEND_FLAG) = trim(pft.SUSPEND_FLG) then 'TRUE' else 'FALSE' end  SUSPEND_FLAG_MATCH,
pool.ORDER_OF_UTILIZATION LEG_ORDER_OF_UTILIZATION,
GAM.ORDER_OF_UTILISATION FIN_ORDER_OF_UTILISATION,
case when trim(pool.ORDER_OF_UTILIZATION) = trim(GAM.ORDER_OF_UTILISATION) then 'TRUE' else  'FALSE' end ORDER_OF_UTILISATION_MATCH,
pool.POOL_TYPE LEG_POOL_TYPE,
pft.POOL_TYPE  FIN_POOL_TYPE,
case when trim(pool.POOL_TYPE) = trim(pft.POOL_TYPE) then 'TRUE' else 'FALSE' end POOL_TYPE_MATCH 
from (select * from custom_pool_o_table where trim(ORDER_OF_UTILIZATION)='1') pool
inner join (select * from tbaadm.gam where bank_id='01' and ORDER_OF_UTILISATION='1')gam on gam.foracid=trim(pool.Account_number)
left join (select * from tbaadm.pft where bank_id='01')pft on gam.pool_id=pft.pool_id and trim(pool.POOL_DESC) = trim(pft.POOL_DESC) 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_laa_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_laa_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_STAFF_LAA.dat
select 
'EXTERNAL_ACC_NO'||'|'||  
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'BRANCH_ID_MATCH'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'FINACLE_REPRICING_PLAN'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_SANCTION_LIMIT'||'|'||
'FINACLE_SANCTION_LIMIT'||'|'||
'SANCTION_LIMIT_MATCH'||'|'||
'LEG_LIMIT_SANCTION_DATE'||'|'||
'FINACLE_LIMIT_SANCTION_DATE'||'|'||
'LIMIT_SANCTION_DATE_MATCH'||'|'||
'LEG_LIMIT_EXPIRY_DATE'||'|'||
'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
'LIMIT_EXPIRY_DATE_MATCH'||'|'||
'LEG_REPY_PRD_IN_MONS'||'|'||
'FINACLE_REPY_PRD_IN_MON'||'|'||
'REPY_PRD_IN_MON_MATCH'||'|'||
'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
'LEG_REPAY_SCHEDULE_DATE'||'|'||
'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
'REPAY_SCHEDULE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_BRANCH'||'|'||
'LEG_OPERATIVE_CLIENT_NO'||'|'||
'LEG_OPERATIVE_ORDINAL'||'|'||
'LEG_OPERATIVE_ACC'||'|'||
'FIN_OPER_ACC'||'|'||
'OPERATIVE_ACC_MATCH'||'|'||
'LEG_OPERATIVE_CCY'||'|'||
'LEG_TENOR_IN_MONTHS'||'|'||
'FINACLE_TENOR_IN_MONTHS'||'|'||
'TENOR_IN_MONTHS_MATCH'||'|'||
'LEG_TENOR_IN_DAYS'||'|'||
'FINACLE_TENOR_IN_DAYS'||'|'||
'TENOR_IN_DAYS_MATCH'||'|'||
'PURPOSE_OF_LOAN'||'|'||
'FIN_PURPOSE_OF_LOAN'||'|'||
'PURPOSE_OF_LOAN_MATCH'||'|'||
'PURPOSE_OF_LOAN_DESC'||'|'||
'LEG_LEDGER_BAL'||'|'||
'FIN_LEDGER_BAL'||'|'||
'LEDGER_MATCH'||'|'||
'FIN_DUE_AMT'||'|'||
--'LEG_DUE_AMT'||'|'||
'EARLIER_DUE_AMT'||'|'||
'DUE_AMT_MATCH'||'|'||
'LEG_DUE_DAYS'||'|'||
'FIN_DUE_DAYS'||'|'||
'DUE_DAYS_MATCH'||'|'||
'LEG_DUE_DATE'||'|'||
'FIN_DUE_DATE'||'|'||
'DUE_DATE_MATCH'||'|'||
'LEG_ACCRUED_AMT'||'|'||
'FIN_ACCRUED_AMT'||'|'||
'ACCURUAL_MATCH'||'|'||
'REPRISING_DATE'||'|'||
'LEG_E2CODE'||'|'||
'FINACLE_REPRICING_PLAN'||'|'||
'TBL_CODE'||'|'||
'FIN_BASE_RATE'||'|'||
'FIN_DEBIT_PERCENT'||'|'||
'FIN_PREF_RATE'||'|'||
'FIN_NET_RATE'||'|'||
'LEGACY_NET_RATE'||'|'||
'NET_RATE_MATCH'||'|'||
'LEG_PRI_INSTALLMENT_AMOUNT'||'|'||
'FIN_PRI_INSTALLMENT_AMOUNT'||'|'||
'PRINCIPAL_INSTALLMENT_MATCH'||'|'||
'LEG_INT_INSTALLMENT_AMOUNT'||'|'||
'FIN_INT_INSTALLMENT_AMOUNT'||'|'||
'INTEREST_AMOUNT_MATCH'||'|'||
'TOTAL_LEG_INSTALLMENT_AMOUNT'||'|'||
'TOTAL_FIN_INSTALLMENT_AMOUNT'||'|'||
'INTALLMENT_AMOUNT_MATCH'
from dual
union all
select 
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'|| 
to_char(gam.sol_id)||'|'||
case when substr(map_acc.leg_branch_id,2,4) = gam.sol_id then 'TRUE' else 'FALSE' end  ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS)||'|'||
map_acc.currency||'|'||
gam.acct_crncy_code ||'|'||
CASE WHEN map_acc.currency = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
map_acc.leg_acc_num||'|'||
to_char(V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
map_acc.leg_cust_type ||'|'||
map_acc.leg_acct_type ||'|'|| 
map_acc.schm_code ||'|'||
gam.ACCT_NAME||'|'||
--to_char(lrp.repricing_plan) ||'|'||
case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then  to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end  = gam.acct_opn_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED) end)||'|'||
    to_char(gam.sanct_lim) ||'|'||
CASE WHEN case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED)end = gam.sanct_lim THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')end ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')end =lht.lim_sanct_date then 'TRUE' else 'FALSE' end ||'|'||
case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')end ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')end = lht.lim_exp_date THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end)||'|'||
to_char(lam.rep_perd_mths)||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(to_number(otdla)/POWER(10,c8pf.C8CED))||'|'||
to_char(lam.liab_as_on_xfer_eff_date)||'|'||
case when to_number(otdla)/POWER(10,c8pf.C8CED)=lam.liab_as_on_xfer_eff_date then 'TRUE' else 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end=lam.rep_shdl_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(NEEAN,1,4))||'|'||
to_char(substr(NEEAN,5,6))||'|'||
to_char(substr(NEEAN,11,3))||'|'||
to_char(NEEAN)||'|'||
CASE WHEN L.OP_ACID IS NOT NULL THEN G1.FORACID ELSE '' END ||'|'||
case when to_char(nvl(trim(NEEAN),' ')) = to_char(nvl(CASE WHEN trim(L.OP_ACID) IS NOT NULL THEN trim(G1.FORACID) END,' ')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(oper.currency) ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end )||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
 else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end)||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
     to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
 =lam.rep_perd_days then 'TRUE' else 'FALSE' end ||'|'||
to_char(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
case when nvl(TRIM(SCC2R),' ') = nvl(GAC.PURPOSE_OF_ADVN,' ') then 'TRUE' else 'FALSE' end ||'|'||
REF_DESC||'|'||
case when  V5BAL is not null then to_char(to_number(v5bal)/POWER(10,C8CED)) else '0.01' end||'|'||
to_char(gam.CLR_BAL_AMT)||'|'||
case when case when  V5BAL is not null then to_number(v5bal)/POWER(10,C8CED) else 0.01 end=gam.CLR_BAL_AMT then 'TRUE' else 'FALSE' end ||'|'||
abs(LDT.DMD_AMT1)||'|'||
--abs(ls.sp/c8pwd)||'|'||
abs(lsamt.sp/c8pwd)||'|'||
case when nvl(abs(LDT.DMD_AMT1),0) = nvl(abs(lsamt.sp/c8pwd),0) then 'TRUE' else 'FALSE' end ||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end||'|'||
gac.DPD_CNTr||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end),0) = nvl(gac.DPD_CNTr,0) then 'TRUE' else 'FALSE' end||'|'||
to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end)||'|'||
to_char(DB_STAT_DATE - gac.DPD_CNTR)||'|'||
case when (to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YY') else '20-FEB-17' end)) = (to_char(DB_STAT_DATE - gac.DPD_CNTR)) then 'TRUE' else 'FALSE' end||'|'||
to_char(eitt.NRML_ACCRUED_AMOUNT_DR)||'|'||
to_char(eit.NRML_ACCRUED_AMOUNT_DR)||'|'||
case when to_char(nvl(eitt.NRML_ACCRUED_AMOUNT_DR,'0'))=to_char(nvl(eit.NRML_ACCRUED_AMOUNT_DR,'0')) then 'TRUE' else 'FALSE' end||'|'||
itb.REPRICING_DATE||'|'||
to_char(v5pf.v5brr)||'|'||
to_char(lrp.repricing_plan)||'|'||
to_char(TBL_CODE)||'|'||
to_char(nvl(lt.BASE_PCNT_DR,0))||'|'||
--to_char(fin_interest_rates.base_rate) ||'|'||
to_char(nvl(lt.DR_NRML_INT_PCNT,0))||'|'||
--to_char(fin_interest_rates.NRML_INT_PCNT)||'|'||
to_char(nvl(lt.ACTUAL_PREF_RATE,0))||'|'||
--to_char(fin_interest_rates.pref_rate)||'|'||
--abs(to_number(to_char(fin_interest_rates.FIN_NET_RATE)))||'|'||
abs(to_number(to_char(nvl(lt.BASE_PCNT_DR,0)+nvl(lt.DR_NRML_INT_PCNT,0)+nvl(lt.ACTUAL_PREF_RATE,0))))||'|'||
to_char(nvl(lt.acc_pref_rate,0))||'|'||
case when abs(to_number(to_char(nvl(lt.acc_pref_rate,0))))=abs(to_number(to_char(nvl(lt.BASE_PCNT_DR,0)+nvl(lt.DR_NRML_INT_PCNT,0)+nvl(lt.ACTUAL_PREF_RATE,0)))) then 'TRUE' else 'FALSE' end ||'|'||
--case when abs(to_number(to_char(lt.acc_pref_rate)))=abs(to_number(to_char(fin_interest_rates.FIN_NET_RATE))) then 'TRUE' else 'FALSE' end ||'|'||
case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end||'|'||
nvl(lrs.PRINCIPAL_AMT,0) ||'|'||
case when case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED)end = lrs.PRINCIPAL_AMT then 'TRUE' else 'FALSE' end||'|'||
case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end||'|'||
nvl(lrs.INTEREST_AMT,0)||'|'||
case when case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end = lrs.INTEREST_AMT then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end)||'|'||
to_char(nvl(lrs.INSTALLMENT_AMT,0))||'|'||
case when case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end = lrs.INSTALLMENT_AMT then 'TRUE' else 'FALSE' end --||'|'|| 
from (select * from map_acc where schm_type='LAA') map_acc
inner join (select * from map_cif where IS_JOINT<>'Y' ) map_cif on MAP_ACC.FIN_CIF_ID=map_cif.fin_cif_id
INNER join (select * from gfpf where gfctp in('EC','EV','EW'))gfpf on nvl(TRIM(gfpf.gfclc),' ')=nvl(TRIM(map_cif.gfclc),' ') and  TRIM(gfpf.gfcus)=TRIM(map_cif.gfcus)
inner JOIN tbaadm.gam ON gam.foracid = map_acc.fin_acc_num and gam.bank_id=get_param('BANK_ID') and gam.schm_type='LAA'
inner join v5pf on v5brnm||v5dlp||trim(v5dlr) = leg_acc_num
LEFT JOIN tbaadm.lrp ON lrp.acid = gam.acid and lrp.bank_id=get_param('BANK_ID')
inner join otpf on otbrnm||otdlp||trim(otdlr) = leg_acc_num
inner join (select ombrnm||omdlp||trim(omdlr) ompf_leg_num,sum(omnwp) omnwp from ompf inner join map_acc on ombrnm||omdlp||trim(omdlr) =leg_acc_num where schm_type='LAA' and ommvt='P' and ommvts in ('C','O') group by ombrnm||omdlp||trim(omdlr))OMPF ON OMPF_LEG_NUM=LEG_ACC_NUM
inner join c8pf on c8ccy = currency
left join iompf_laa on del_ref_num=LEG_ACC_NUM
left join r8pf on trim(r8lnp)=trim(v5dlp)
LEFT JOIN tbaadm.lht ON lht.acid = gam.acid and lht.bank_id=get_param('BANK_ID')
LEFT JOIN (select i1.* from tbaadm.itc i1
left join (select * from tbaadm.itc where bank_id='01')i2 on (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM > i2.INT_TBL_CODE_SRL_NUM)  
where i1.bank_id='01' and i2.entity_id is null)itc  ON itc.entity_id = gam.acid AND ITC.ENTITY_TYPE='ACCNT'  and itc.bank_id=get_param('BANK_ID')
INNER JOIN tbaadm.lam  ON lam.acid = gam.acid AND LAM.bank_id=get_param('BANK_ID')
left join operacc oper on  TRIM(oper.ompf_leg_num)=leg_acc_num
left join  nepf on trim(OPER_LEG_ACC)=trim(neab)||trim(nean)||trim(neas)
LEFT JOIN TBAADM.LAM L ON L.ACID=gam.ACID AND gam.BANK_ID=L.BANK_ID
LEFT JOIN TBAADM.GAM G1 ON G1.ACID=L.OP_ACID AND L.BANK_ID=G1.BANK_ID
LEFT JOIN tbaadm.gac ON gac.acid = gam.acid AND GAC.bank_id=get_param('BANK_ID')
left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
left join loan_account_finacle_int_rate lt on lt.int_acc_num=leg_acc_num
left JOIN TBAADM.RCT ON GAC.PURPOSE_OF_ADVN=RCT.REF_CODE AND RCT.BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='41'
left join (select o1.ombrnm||o1.omdlp||trim(o1.omdlr) del_ref_num,o1.omnwr ins,to_date(get_date_fm_btrv(o1.OmDTE),'YYYYMMDD') isd from ompf o1 inner join map_acc on o1.ombrnm||o1.omdlp||trim(o1.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='P' and om.OMMVTs='R' and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o1.ombrnm AND om.omdlp=o1.omdlp AND om.omdlr=o1.omdlr and oM.omdte=o1.omdte 
where o1.ommvt='P' and o1.OMMVTs='R' AND schm_type='LAA')ina on ina.del_ref_num=leg_acc_num
LEFT JOIN (select distinct ca1.foracid,ca1.flow_date,ca1.INSTALLMENT_AMT,ca1.PRINCIPAL_AMT,ca1.INTEREST_AMT,ca1.BANK_ID from custom.c_amort ca1 where ca1.bank_id='01' 
and ca1.SERIAL_NUM=(select min(ca2.serial_num) from custom.c_amort ca2 where INSTALLMENT_AMT<>0 and flow_date > to_date('3-7-2017','DD-MM-YYYY') and ca1.foracid=ca2.foracid group by ca2.foracid) ) lrS ON lrs.foracid = gam.foracid 
left join (select o2.ombrnm||o2.omdlp||trim(o2.omdlr) del_ref_num,o2.omnwr ins,to_date(get_date_fm_btrv(o2.OmDTE),'YYYYMMDD') isd from ompf o2 inner join map_acc on o2.ombrnm||o2.omdlp||trim(o2.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt in ('I','P') and (TRIM(om.OMMVTs)= 'R' or TRIM(om.OMMVTs) IS NULL) and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o2.ombrnm AND om.omdlp=o2.omdlp AND om.omdlr=o2.omdlr and oM.omdte=o2.omdte 
where o2.ommvt='I' and TRIM(o2.OMMVTs) IS NULL AND schm_type='LAA')ii on ii.del_ref_num=leg_acc_num
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join (select trim(lsbrnm)||trim(lsdlp)||trim(lsdlr) del_num,sum((abs(lsamtd)-abs(lsamtp)))sp,min(lsdte)dte from lspf where lspdte='9999999' and TO_NUMBER(lsdte)<=TO_NUMBER(get_param('EODCYYMMDD')) and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by trim(lsbrnm)||trim(lsdlp)||trim(lsdlr))lsamt on lsamt.del_num =leg_acc_num
left join (select lsbrnm||trim(lsdlp)||trim(lsdlr) del_num ,sum(lsamtd - lsamtp) sp,min(lsdte)dte from lspf where lsmvt='P' and (LSAMTD - LSAMTP) < 0 and lsamtd <> 0  and lsdte <= get_param('EODCYYMMDD') group by lsbrnm,lsdlp,lsdlr)ls on ls.del_num=leg_acc_num
left join tbaadm.gct gct on gct.bank_id='01' 
left join CUSTOM_EIT eitt on eitt.foracid=gam.foracid
left join int_tbl itb on itb.INT_ACC_NUM = leg_acc_num
left join (select * from tbaadm.eit where bank_id='01')eit on eit.entity_id=gam.acid
where map_acc.schm_type='LAA'  and gfpf.gfctp in('EC','EV','NW');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_laa_master_new.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_laa_master_new.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_STAFF_LAA.dat
Select distinct   
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'BRANCH_ID_MATCH'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
--'LEGACY_CUST_NAME' ||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'LEGACY_DEBIT_PREF_PERCENT'||'|'||
--'FINACLE_DEBIT_PREF_PERCENT'||'|'||
--'DEBIT_PREF_PERCENT_MATCH'||'|'||
--'LEGACY_REPRICING_PLAN'||'|'||
'FINACLE_REPRICING_PLAN'||'|'||
--'REPRICING_PLAN_MATCH'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_SANCTION_LIMIT'||'|'||
'FINACLE_SANCTION_LIMIT'||'|'||
'SANCTION_LIMIT_MATCH'||'|'||
'LEG_LIMIT_SANCTION_DATE'||'|'||
'FINACLE_LIMIT_SANCTION_DATE'||'|'||
'LIMIT_SANCTION_DATE_MATCH'||'|'||
'LEG_LIMIT_EXPIRY_DATE'||'|'||
'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
'LIMIT_EXPIRY_DATE_MATCH'||'|'||
--'LEG_INT_TBL_CODE'||'|'||
'FINACLE_INT_TBL_CODE'||'|'||
--'INT_TBL_CODE_MATCH'||'|'||
'LEG_REPY_PRD_IN_MONS'||'|'||
'FINACLE_REPY_PRD_IN_MON'||'|'||
'REPY_PRD_IN_MON_MATCH'||'|'||
'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
--'LEG_UPFRONT_INSTALLMENT_COLL'||'|'||
--'FINACLE_UPFRONT_INSTALLMENT_COLL'||'|'||
--'UPFRONT_INSTLMNT_COLL_MATCH'||'|'||
--'LEG_SUM_OF_THE_PRINC_DMD_AMT'||'|'||
--'FINACLE_SUM_OF_THE_PRN_DMD_AMT'||'|'||
--'SUM_OF_THE_PRN_DMD_AMT_MATCH'||'|'||
--'LEG_INT_RATE_ON_SANC_LMT'||'|'||
--'FINACLE_INT_RATE_ON_SANC_LMT'||'|'||
--'INT_RATE_ON_SANC_LMT_MATCH'||'|'||
--'LEG_DISBUR_PREVIOUS_SCHE'||'|'||
--'FINACLE_DISBUR_PREVIOUS_SCHE'||'|'||
--'DISBUR_PREVIOUS_SCHE_MATCH'||'|'||
'LEG_REPAY_SCHEDULE_DATE'||'|'||
'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
'REPAY_SCHEDULE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_BRANCH'||'|'||
'LEG_OPERATIVE_CLIENT_NO'||'|'||
'LEG_OPERATIVE_ORDINAL'||'|'||
'LEG_OPERATIVE_ACC'||'|'||
'FIN_OPER_ACC'||'|'||
'OPERATIVE_ACC_MATCH'||'|'||
'LEG_OPERATIVE_CCY'||'|'||
'LEG_TENOR_IN_MONTHS'||'|'||
'FINACLE_TENOR_IN_MONTHS'||'|'||
'TENOR_IN_MONTHS_MATCH'||'|'||
'LEG_TENOR_IN_DAYS'||'|'||
'FINACLE_TENOR_IN_DAYS'||'|'||
'TENOR_IN_DAYS_MATCH'||'|'||
'PURPOSE_OF_LOAN'||'|'||
'FIN_PURPOSE_OF_LOAN'||'|'||
'PURPOSE_OF_LOAN_MATCH'||'|'||
'PURPOSE_OF_LOAN_DESC'||'|'||
'LEGACY_RATE_OF_INTEREST'||'|'||
'FIN_RATE_OF_INTEREST'||'|'||
'RATE_OF_INTEREST_MATCH'||'|'||
'LEG_PRI_INSTALLMENT_AMOUNT'||'|'||
'FIN_PRI_INSTALLMENT_AMOUNT'||'|'||
'PRINCIPAL_INSTALLMENT_MATCH'||'|'||
'LEG_INT_INSTALLMENT_AMOUNT'||'|'||
'FIN_INT_INSTALLMENT_AMOUNT'||'|'||
'INTEREST_AMOUNT_MATCH'||'|'||
'TOTAL_LEG_INSTALLMENT_AMOUNT'||'|'||
'TOTAL_FIN_INSTALLMENT_AMOUNT'||'|'||
'INTALLMENT_AMOUNT_MATCH'||'|'||
'LEG_LEDGER_BAL'||'|'||
'FIN_LEDGER_BAL'||'|'||
'LEDGER_MATCH'||'|'||
'FIN_DUE_AMT'||'|'||
'LEG_DUE_AMT'||'|'||
'DUE_AMT_MATCH'||'|'||
'LEG_DUE_DAYS'||'|'||
'FIN_DUE_DAYS'||'|'||
'DUE_DAYS_MATCH'||'|'||
'LEG_DUE_DATE'||'|'||
'FIN_DUE_DATE'||'|'||
'MATCH'
from dual
union all
select 
to_char(map_acc.leg_branch_id) ||'|'|| 
to_char(gam.sol_id)||'|'||
case when substr(map_acc.leg_branch_id,2,4) = gam.sol_id then 'TRUE' else 'FALSE' end  ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS)||'|'||
map_acc.currency||'|'||
gam.acct_crncy_code ||'|'||
CASE WHEN map_acc.currency = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
map_acc.leg_acc_num||'|'||
to_char(V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
map_acc.leg_cust_type ||'|'||
map_acc.leg_acct_type ||'|'|| 
map_acc.schm_code ||'|'||
gam.ACCT_NAME||'|'||
to_char(lrp.repricing_plan) ||'|'||
case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then  to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end  = gam.acct_opn_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED) end)||'|'||
    to_char(gam.sanct_lim) ||'|'||
CASE WHEN case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED)end = gam.sanct_lim THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')end ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')end =lht.lim_sanct_date then 'TRUE' else 'FALSE' end ||'|'||
case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')end ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')end = lht.lim_exp_date THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(itc.int_tbl_code)||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end)||'|'||
to_char(lam.rep_perd_mths)||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(to_number(otdla)/POWER(10,c8pf.C8CED))||'|'||
to_char(lam.liab_as_on_xfer_eff_date)||'|'||
case when to_number(otdla)/POWER(10,c8pf.C8CED)=lam.liab_as_on_xfer_eff_date then 'TRUE' else 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end=lam.rep_shdl_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(NEEAN,1,4))||'|'||
to_char(substr(NEEAN,5,6))||'|'||
to_char(substr(NEEAN,11,3))||'|'||
to_char(NEEAN)||'|'||
CASE WHEN L.OP_ACID IS NOT NULL THEN G1.FORACID ELSE '' END ||'|'||
case when to_char(nvl(trim(NEEAN),' ')) = to_char(nvl(CASE WHEN trim(L.OP_ACID) IS NOT NULL THEN trim(G1.FORACID) END,' ')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(oper.currency) ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end )||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
 else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end)||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
     to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
 =lam.rep_perd_days then 'TRUE' else 'FALSE' end ||'|'||
to_char(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
case when nvl(TRIM(SCC2R),' ') = nvl(GAC.PURPOSE_OF_ADVN,' ') then 'TRUE' else 'FALSE' end ||'|'||
REF_DESC||'|'||
to_char(lt.acc_pref_rate)||'|'||
to_char(lt.BASE_PCNT_DR+lt.DR_NRML_INT_PCNT+lt.ACTUAL_PREF_RATE)||'|'||
case when abs(to_number(to_char(lt.acc_pref_rate)))=abs(to_number(to_char(lt.BASE_PCNT_DR+lt.DR_NRML_INT_PCNT+lt.ACTUAL_PREF_RATE))) then 'TRUE' else 'FALSE' end ||'|'||  
case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end||'|'||
PRINCIPAL_AMT ||'|'||
case when case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED)end = PRINCIPAL_AMT then 'TRUE' else 'FALSE' end||'|'||
case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end||'|'||
INTEREST_AMT||'|'||
case when case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end = INTEREST_AMT then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end)||'|'||
to_char(INSTALLMENT_AMT)||'|'||
case when case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end = INSTALLMENT_AMT then 'TRUE' else 'FALSE' end ||'|'||
case when  V5BAL is not null then to_char(to_number(v5bal)/POWER(10,C8CED)) else '0.01' end||'|'||
to_char(gam.CLR_BAL_AMT)||'|'||
case when case when  V5BAL is not null then to_number(v5bal)/POWER(10,C8CED) else 0.01 end=gam.CLR_BAL_AMT then 'TRUE' else 'FALSE' end ||'|'||
LDT.DMD_AMT1||'|'||
ls.sp/c8pwd||'|'||
case when nvl(LDT.DMD_AMT1,0) = nvl(to_number(ls.sp)/c8pwd,0) then 'TRUE' else 'FALSE' end ||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end||'|'||
gac.DPD_CNTr||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end),0) = nvl(gac.DPD_CNTr,0) then 'TRUE' else 'FALSE' end||'|'||
to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end)||'|'||
to_char(DB_STAT_DATE - gac.DPD_CNTR)||'|'||
case when (to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YY') else '20-FEB-17' end)) = (to_char(DB_STAT_DATE - gac.DPD_CNTR)) then 'TRUE' else 'FALSE' end
from map_acc 
inner join map_cif on MAP_ACC.FIN_CIF_ID=map_cif.fin_cif_id
INNER join gfpf  on nvl(TRIM(gfpf.gfclc),' ')=nvl(TRIM(map_cif.gfclc),' ') and  TRIM(gfpf.gfcus)=TRIM(map_cif.gfcus)
inner JOIN tbaadm.gam ON gam.foracid = map_acc.fin_acc_num and gam.bank_id=get_param('BANK_ID') and gam.schm_type='LAA'
inner join v5pf on v5brnm||v5dlp||trim(v5dlr) = leg_acc_num
LEFT JOIN tbaadm.lrp ON lrp.acid = gam.acid and lrp.bank_id=get_param('BANK_ID')
inner join otpf on otbrnm||otdlp||trim(otdlr) = leg_acc_num
inner join (select ombrnm||omdlp||trim(omdlr) ompf_leg_num,sum(omnwp) omnwp from ompf inner join map_acc on ombrnm||omdlp||trim(omdlr) =leg_acc_num where schm_type='LAA' and ommvt='P' and ommvts in ('C','O') group by ombrnm||omdlp||trim(omdlr))OMPF ON OMPF_LEG_NUM=LEG_ACC_NUM
inner join c8pf on c8ccy = currency
left join iompf_laa on del_ref_num=LEG_ACC_NUM
left join r8pf on trim(r8lnp)=trim(v5dlp)
LEFT JOIN tbaadm.lht ON lht.acid = gam.acid and lht.bank_id=get_param('BANK_ID')
LEFT JOIN tbaadm.itc  ON itc.entity_id = gam.acid AND ITC.ENTITY_TYPE='ACCNT'  and itc.bank_id=get_param('BANK_ID')
INNER JOIN tbaadm.lam  ON lam.acid = gam.acid AND LAM.bank_id=get_param('BANK_ID')
left join operacc oper on  TRIM(oper.ompf_leg_num)=leg_acc_num
left join  nepf on trim(OPER_LEG_ACC)=trim(neab)||trim(nean)||trim(neas)
LEFT JOIN TBAADM.LAM L ON L.ACID=gam.ACID AND gam.BANK_ID=L.BANK_ID
LEFT JOIN TBAADM.GAM G1 ON G1.ACID=L.OP_ACID AND L.BANK_ID=G1.BANK_ID
LEFT JOIN tbaadm.gac ON gac.acid = gam.acid AND GAC.bank_id=get_param('BANK_ID')
left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
left join loan_account_finacle_int_rate lt on lt.int_acc_num=leg_acc_num
left JOIN TBAADM.RCT ON GAC.PURPOSE_OF_ADVN=RCT.REF_CODE AND RCT.BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='41'
left join (select o1.ombrnm||o1.omdlp||trim(o1.omdlr) del_ref_num,o1.omnwr ins,to_date(get_date_fm_btrv(o1.OmDTE),'YYYYMMDD') isd from ompf o1 inner join map_acc on o1.ombrnm||o1.omdlp||trim(o1.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='P' and om.OMMVTs='R' and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o1.ombrnm AND om.omdlp=o1.omdlp AND om.omdlr=o1.omdlr and oM.omdte=o1.omdte 
where o1.ommvt='P' and o1.OMMVTs='R' AND schm_type='LAA')ina on ina.del_ref_num=leg_acc_num
LEFT JOIN (select distinct foracid,flow_date,INSTALLMENT_AMT,PRINCIPAL_AMT,INTEREST_AMT,BANK_ID from c_amort where bank_id='01') lrS ON lrs.foracid = gam.foracid AND ina.ISD = LRS.FLOW_DATE   
left join (select o2.ombrnm||o2.omdlp||trim(o2.omdlr) del_ref_num,o2.omnwr ins,to_date(get_date_fm_btrv(o2.OmDTE),'YYYYMMDD') isd from ompf o2 inner join map_acc on o2.ombrnm||o2.omdlp||trim(o2.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='I' and TRIM(om.OMMVTs) IS NULL and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o2.ombrnm AND om.omdlp=o2.omdlp AND om.omdlr=o2.omdlr and oM.omdte=o2.omdte 
where o2.ommvt='I' and TRIM(o2.OMMVTs) IS NULL AND schm_type='LAA')ii on ii.del_ref_num=leg_acc_num
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and TO_NUMBER(lsdte)<=TO_NUMBER(get_param('EODCYYMMDD')) and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
left join tbaadm.gct gct on gct.bank_id='01' 
--where map_acc.schm_type='LAA' and map_cif.individual='Y'  and gfpf.gfctp in('EC','EV','NW');
where map_acc.schm_type='LAA'  and gfpf.gfctp in('EC','EV','NW');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_oda_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_oda_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_STAFF_ODA.dat
select
'LEG_BRANCH_ID'||'|'||
'LEG_BRANCH_NAME'  ||'|'||
'FINACLE_BRANCH_NAME' ||'|'||
'LEG_CLIENTNO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CURRENCY'||'|'||
'FINACLE_CURRENCY'||'|'||
'CURRENCY_MATCH'||'|'||
'FINACLE_SOL_ID'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_ACC_NUMBER'||'|'||
'FINACLE_ACCOUNT_NUM'||'|'||
'LEG_CUST_TYPE' ||'|'||
'LEG_ACCOUNT_TYPE'||'|'||
'FINACLE_SCHM_CODE'||'|'||
'FINACLE_SCHM_CODE_DESC' ||'|'||
'LEG_ACCOUNT_STATUS' ||'|'||
'FINACLE_ACCOUNT_STATUS' ||'|'||
'ACCOUNT_STATUS_MATCH' ||'|'||
'LEG_SEGMENT'||'|'||
'LEG_ACCT_OPENDATE'||'|'||
'FINACLE_OPENDATE'||'|'||
'OPENDATE_MATCH'||'|'||
'LEG_LAST_TRANSACTION_DATE' ||'|'||
'FINACLE_LAST_TRANSACTION_DATE' ||'|'||
'LAST_TRANSACTION_DATE_MATCH' ||'|'||
'LEG_CREDIT_PREF_RATE'||'|'||
'FIN_CREDIT_PREF_RATE'||'|'||
'CREDIT_PREF_RATE_MATCH'||'|'||
'LEG_DEBIT_PREF_RATE'||'|'||
'FIN_DEBIT_PREF_RATE'||'|'||
'DEBIT_PREF_RATE_MATCH'||'|'||
'LEG_BASE_INTEREST_RATE'||'|'||
'FIN_BASE_INTEREST_RATE'||'|'||
'BASE_INTEREST_RATE_MATCH'||'|'||
'INT_TABLE_CODE'||'|'||
'LEG_SECTOR_CODE'||'|'||
'FINACLE_SECTOR_CODE'||'|'||
'FINACLE_SECTOR_CODE_DESC'||'|'||
'LEG_SUB_SECTOR_CODE'||'|'||
'FINACLE_SUB_SECTOR_CODE'||'|'||
'FINACLE_SUB_SECTOR_CODE_DESC'||'|'||
'FINACLE_DPD_CNT' ||'|'||
'LEG_HOLDMAIL_FLAG' ||'|'||
'LEG_UNDELSTMT_FLAG' ||'|'||
'LEG_CURRENT_BALANCE'||'|'||
'FINACLE_CURRENT_BALANCE'||'|'||
'CURRENT_BALANCE_MATCH'||'|'||
'LEG_LEGDER_BALANCE'||'|'||
'FIN_LEDGER_BALANCE'||'|'||
'LEDGER_BALANCE_MATCH'||'|'||
'MEMOPAD FLAG'||'|'||
'LEG_PAST_DUE_DATE'||'|'||
'FIN_PAST_DUE_DATE'||'|'||
'DUE_AMT'||'|'||
'C5_CODE'||'|'||
'MANAGER_CODE'||'|'||
'LEG_STATEMENT_FREQUENCY'||'|'||
'FIN_STATEMENT_FREQUENCY'||'|'||
'STATEMENT_FREQUENCY_MATCH'||'|'||
'LEG_INT_FREQ'||'|'||
'FIN_INT_FREQ'||'|'||
'INT_FREQ_MATCH'
from dual
union all
select distinct
to_char(map_acc.leg_branch_id) ||'|'||
to_char(CABRN) ||'|'||
to_char(SOL_DESC) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.leg_scas) ||'|'||
to_char(map_acc.CURRENCY) ||'|'||
to_char(gam.acct_crncy_code)||'|'||
case when map_acc.CURRENCY=gam.acct_crncy_code then 'TRUE' else 'FALSE' end  ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(gam.cif_id) ||'|'||
TO_CHAR(MAP_ACC.LEG_ACC_NUM)||'|'||
to_char(gam.foracid)||'|'||
TO_CHAR(MAP_ACC.LEG_CUST_TYPE) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(gam.schm_code)||'|'||
TO_CHAR(GSP.SCHM_DESC) ||'|'||
case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
      when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
           when scai20 = 'Y' then 'I'                           
           else 'A' end ||'|'||
         TO_CHAR(CAM.ACCT_STATUS) ||'|'||
CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
      when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
           when scai20 = 'Y' then 'I'                           
           else 'A' end) =     TO_CHAR(CAM.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END ||'|'|| 
to_char(itc.INT_TBL_CODE)||'|'||
case when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' and scdle<>0 and to_date(get_date_fm_btrv(scdle),'YYYYMMDD')<to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
         then to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MON-YYYY')
         when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' then
         to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else ' '    end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when (case when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' and scdle<>0 and to_date(get_date_fm_btrv(scdle),'YYYYMMDD')<to_date(get_date_fm_btrv(scoad),'YYYYMMDD')
         then to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MON-YYYY')
         when scoad <> 0 and get_date_fm_btrv(scoad) <> 'ERROR' then
         to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY')
         else ' '    end)= TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end||'|'||
case when scdle <>0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY')
        else ' '
    end         ||'|'||
TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY') ||'|'||
CASE WHEN (case when scdle <>0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY')
        else ' '
    end    )     = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ')  THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(inte.S5RATC)||'|'||
to_char(itc.CUST_CR_PREF_PCNT)||'|'||
case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(inte.S5RATD)||'|'||
to_char(itc.CUST_DR_PREF_PCNT)||'|'||
case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(inte.BASE_PCNT_DR)||'|'||
to_char(icvv.BASE_PCNT_DR)||'|'||
case when nvl(to_char(trim(inte.BASE_PCNT_DR)),'0') = nvl(to_char(icvv.BASE_PCNT_DR),' ') then 'TRUE' else 'FALSE' end ||'|'||
to_char(itc.INT_TBL_CODE) ||'|'||
to_char(gfpf.GFCA2) ||'|'||
to_char(gac.sector_code) ||'|'||
TO_CHAR(D.localetext) ||'|'||
to_char(gfpf.GFCA2)  ||'|'||
to_char(gac.sub_sector_code)||'|'||
TO_CHAR(E.localetext) ||'|'||
to_char(gac.dpd_cntr) ||'|'||
TO_CHAR(SCAI64) ||'|'||
TO_CHAR(SCAIJ1) ||'|'||    
to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ||'|'||
to_char(clr_bal_amt) ||'|'||
case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ||'|'||
to_char((scbal - SCSUMA)/POWER(10,C8CED))||'|'|| 
to_char(clr_bal_amt + future_bal_amt)||'|'||
case when (to_char((scbal - SCSUMA)/POWER(10,C8CED))) = (to_char(clr_bal_amt + future_bal_amt)) then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end)||'|'||
to_char(pass_due_dt)||'|'||
to_char(gac.PD_XFER_DATE)||'|'||
to_char(Suspence_amt)||'|'||
to_char(scc5r)||'|'||
to_char(gfaco)||'|'||
sa.PS_FREQ_TYPE||'|'||
ast.PS_FREQ_TYPE||'|'||
case when (sa.PS_FREQ_TYPE) = (ast.PS_FREQ_TYPE) then 'TRUE' else 'FALSE' end||'|'||
case  when get_param('BANK_ID')='02' and map_acc.schm_code='360'  and trim(S5IFQD) is null then  'M'
       when trim(S5IFQD) is not null then 
       lpad(MapFrequency(substr(trim(S5IFQD),1,1)),1,' ') 
       else lpad(' ',1,' ') end||'|'||
to_char(eit.INT_FREQ_TYPE_DR)||'|'||
case when to_char(case  when get_param('BANK_ID')='02' and map_acc.schm_code='360'  and trim(S5IFQD) is null then  'M'
       when trim(S5IFQD) is not null then 
       lpad(MapFrequency(substr(trim(S5IFQD),1,1)),1,' ') 
       else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_DR)) then 'TRUE' else 'FALSE' end
from map_acc
inner join scpf on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
inner join c8pf on c8ccy = scccy
INNER JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = fin_acc_num
LEFT JOIN (select * from tbaadm.cam where bank_id=get_param('BANK_ID'))cam ON cam.acid = gam.acid
LEFT JOIN (select * from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id =gam.acid
left join  s5pf on s5ab=scab and s5an=scan and s5as=scas
left join capf on CABBN = scpf.scab
left join gfpf on gfpf.gfcpnc = scpf.scan
LEFT JOIN (select * from TBAADM.SOL where bank_id=get_param('BANK_ID'))sol ON sol.SOL_ID = MAP_ACC.FIN_SOL_ID
left join crmuser.accounts b on b.orgkey = map_acc.fin_cif_id
LEFT JOIN(SELECT localetext, VALUE, categorytype FROM crmuser.categories a, crmuser.category_lang b WHERE a.categoryid = b.categoryid
AND categorytype = 'SECTOR_CODE' AND a.bank_id = b.bank_id AND a.bank_id =get_param('BANK_ID') ) d ON d.VALUE = gac.sector_code
LEFT JOIN(SELECT localetext, VALUE, categorytype FROM crmuser.categories a, crmuser.category_lang b WHERE a.categoryid = b.categoryid
AND categorytype = 'SUB_SECTOR_CODE' AND a.bank_id = b.bank_id AND a.bank_id = get_param('BANK_ID')) E ON E.VALUE = gac.sub_sector_code
left join (select * from map_cif where del_flg<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID     
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
left join (select * from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
left join (
select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
union all
select lp10_acct acc_num,'Y' past_due_flg, LP10_LXD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
union all
select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
union all
select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
left join tbaadm.gct gct on gct.bank_id='01' 
left join(select int_tbl_code,crncy_code,max(int_tbl_ver_num),BASE_PCNT_DR from tbaadm.icv icv where bank_id=get_param('BANK_ID') and int_tbl_code='ODNOR' 
and int_tbl_ver_num=(select max(int_tbl_ver_num) from tbaadm.icv ic where ic.int_tbl_code=icv.int_tbl_code and ic.crncy_code =icv.crncy_code
group by int_tbl_code,crncy_code)
group by int_tbl_code,crncy_code,BASE_PCNT_DR)icvv on itc.INT_TBL_CODE=icvv.INT_TBL_CODE and icvv.crncy_code=trim(scccy)
left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas
left join statements_accounts sa on sa.account_number=foracid
where map_acc.schm_type in( 'ODA','PCA') and (B.STAFFFLAG ='Y');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_sbca_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_sbca_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_STAFF_SBCA.dat
 select
 'EXTERNAL_ACC_NO',
  'LEG_BRANCH',
  'FINACLE_SOL_ID',
  'BRANCH_ID_MATCH',
  'LEG_CLIENTNO',
  'LEG_SUFFIX',
  'LEG_CURRENCY',
  'FINACLE_CURRENCY',
  'CURRENCY_MATCH',
  'FINACLE_CIF_ID',
  'FINACLE_ACCOUNT_NUMBER',
  'LEG_CUST_TYPE',
  'LEG_ACCOUNT_TYPE',
  'FINACLE_SCHM_CODE',
  'SCHM_DESC',
  'LEG_ACCOUNT_STATUS' ,
  'FINACLE_ACCOUNT_STATUS' ,
  'ACCOUNT_STATUS_MATCH' ,
  'LEG_ACCOUNT_OPENDATE',
  'FINACLE_ACCOUNT_OPENDATE',
  'ACCOUNT_OPENDATE_MATCH',
  'LEG_LAST_TRANSACTION_DATE' ,
  'FINACLE_LAST_TRANSACTION_DATE' ,
  'LAST_TRANSACTION_DATE_MATCH' ,
  'LEG_HOLDMAIL_FLAG' ,
  'LEG_UNDELSTMT_FLAG' ,
  'FINACLE_HOLDMAIL/UNDELSTMT_FLAG' ,
  'LEG_MODE_OF_OPERATION' ,
  'FINACLE_MODE_OF_OPERATION' ,
  'MODE_OF_OPERATION_MATCH' ,
  'LEG_CREDIT_PREF_RATE',
  'FIN_CREDIT_PREF_RATE',
  'CREDIT_PREF_RATE_MATCH',
  'LEG_DEBIT_PREF_RATE',
  'FIN_DEBIT_PREF_RATE',
  'DEBIT_PREF_RATE_MATCH',
  'FIN_BASE_INTEREST_RATE',
  'INT_TABLE_CODE',
  'LEG_CURRENT_BALANCE',
  'FINACLE_CURRENT_BALANCE',
  'CURRENT_BALANCE_MATCH',
  'LEG_LEGDER_BALANCE' ,
  'FIN_LEDGER_BALANCE',
  'LEDGER_BALANCE_MATCH',
  'MEMOPAD FLAG',
  'LEG_PAST_DUE_DATE',
  'FIN_PAST_DUE_DATE',
  'LEG_DUE_AMT',
  'C5_CODE',
  'MANAGER_CODE',
  'LEG_STATEMENT_FREQUENCY',
  'FIN_STATEMENT_FREQUENCY',
  'CR_INT_FREQ_FIELD',
  'LEG_CR__INT_FREQ',
  'FIN_CR_INT_FREQ',
  'CR_INT_FREQ_MATCH' ,
  'LEG_C3CODE',
  'FIN_ASSET_CLASS',
  'CREDIT_TIER_CODE',
  'DEBIT_TIER_CODE',
  'LEG_ACCRUED_AMT',
  'FIN_ACCRUED_AMT',
  'ACCRUED_AMT_MATCH',
  'LEG_DIVISION',
'FIN_DIVISION',
'LEG_SUB_DIVISION',
'FIN_SUB_DIVISION'
  from dual
  union all
  select distinct
  to_char(map_acc.EXTERNAL_ACC),
  to_char(map_acc.leg_branch_id) ,
  to_char(gam.sol_id) ,
  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
  to_char(map_acc.leg_scan) ,
  to_char(map_acc.LEG_SCAS) ,
  to_char(scccy),
  to_char(gam.acct_crncy_code),
  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
  to_char(gam.cif_id),
  to_char(gam.foracid),
  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
  to_char(map_acc.leg_acct_type),
  to_char(gam.schm_code),
  to_char(gsp.SCHM_DESC),
  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
                   when scai20 = 'Y' then 'I'                           
             else 'A' end ,
  TO_CHAR(SMT.ACCT_STATUS) ,
  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
                   when scai20 = 'Y' then 'I'                           
             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end ,
  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
           else ''
      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
  case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end,
  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY')   , 
  case when (case when ext_acc is not null and to_date(modify_date,'DD-MON-YY')=to_date('23-06-2003','DD-MM-YYYY') and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is null and trim(ACCOUNT_NUMBER_EXT) is not null and trim(LAST_DORMANCY_DATE) is not null  and add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(LAST_DORMANCY_DATE,'MM-DD-YYYY'),-12),'DD-MM-YYYY')
          when ext_acc is not null  and trim(modify_date) is not null   and add_months(to_date(modify_date,'DD-MON-YY'),-12) >=  
case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'DD-MON-YY'),-12),'DD-MM-YYYY')
          when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
           lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
        else lpad(' ',10,' ')
    end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
  TO_CHAR(SCAI64) ,
  TO_CHAR(SCAIJ1) ,    
  to_char(alr.ACCT_LABEL)    ,
  case when SCAIC7='Y' then lpad('006',5,' ')
                   when scai92='Y' then lpad('011',5,' ')
              else lpad('999',5,' ') end ,
  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
  CASE WHEN (case when SCAIC7='Y' then '006'
                   when scai92='Y' then '011'
              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
  to_char(inte.S5RATC),
  to_char(itc.CUST_CR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.S5RATD),
  to_char(itc.CUST_DR_PREF_PCNT),
  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
  to_char(inte.BASE_PCNT_DR),
  to_char(itc.INT_TBL_CODE) ,
  to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ,
  to_char(clr_bal_amt) ,
  case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
  to_char((scbal - SCSUMA)/POWER(10,C8CED)), 
  to_char(clr_bal_amt + FUTURE_BAL_AMT),
  case when to_char((scbal - SCSUMA)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
  to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MON-YYYY') else lpad(' ',10,' ') end),
  to_char(gac.PD_XFER_DATE),
  to_char(nvl(abs(Suspence_amt),0)),
  to_char(scc5r),
  to_char(scaco),
  to_char(SCSFC),
  to_char(ast.PS_FREQ_TYPE),
  to_char(S5IFQC),
  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
             else lpad(' ',1,' ') end,
  to_char(eit.INT_FREQ_TYPE_CR),
  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
             and trim(S5IFQC) is null then  'M'
             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
  to_char(trim(scc3r)) ,
  to_char(SUB_CLASSIFICATION_USER),
  to_char(inte.S5TRCC) ,
  to_char(inte.S5TRCD) ,
  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end,
    case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.division,
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end,
c_gac.SUB_DIVISION
  from (select * from map_acc where map_acc.schm_type in( 'SBA','CAA') and map_acc.schm_code<>'PISLA')map_acc
      inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
      inner join c8pf  on c8ccy = scccy
      inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
  INNER JOIN (select orgkey,staffflag from crmuser.accounts where staffflag='Y') acct ON acct.orgkey = map_acc.fin_cif_id
      left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
      left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
      left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
      left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
      LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
             left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
      left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
      left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
      LEFT JOIN (select acid,ACCT_STATUS from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
  left join (select acid,ACCT_LABEL from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'Y' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss1  on map_acc.schm_code = gss1.schm_code
  left join (select schm_code,crncy_code from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
  left join (select schm_code,INT_PAID_FLG,INT_FREQ_TYPE_CR,SCHM_DESC  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
  left join (select INT_FREQ_TYPE_CR,entity_id,NRML_ACCRUED_AMOUNT_CR from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
      left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
      union 
      select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
      left join (
      select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
      union all
      select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
      union all
      select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
      left join (select acid from tbaadm.ta_cot where bank_id='01') cot on gam.acid=cot.acid
      left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
      left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas--code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
      left join freetext free on map_acc.fin_acc_num=free.acid
      left join custom_eit leit on trim(leit.foracid)=gam.foracid
      left join tbaadm.acd on B2K_ID=gam.acid
      left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
	    left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid;
-- select
--  'LEG_BRANCH',
--  'FINACLE_SOL_ID',
--  'BRANCH_ID_MATCH',
--  'LEG_CLIENTNO',
--  'LEG_SUFFIX',
--  'LEG_CURRENCY',
--  'FINACLE_CURRENCY',
--  'CURRENCY_MATCH',
--  'FINACLE_CIF_ID',
--  'FINACLE_ACCOUNT_NUMBER',
--  'LEG_CUST_TYPE',
--  'LEG_ACCOUNT_TYPE',
--  'FINACLE_SCHM_CODE',
--  'SCHM_DESC',
--  'LEG_ACCOUNT_STATUS' ,
--  'FINACLE_ACCOUNT_STATUS' ,
--  'ACCOUNT_STATUS_MATCH' ,
--  'LEG_ACCOUNT_OPENDATE',
--  'FINACLE_ACCOUNT_OPENDATE',
--  'ACCOUNT_OPENDATE_MATCH',
--  'LEG_LAST_TRANSACTION_DATE' ,
--  'FINACLE_LAST_TRANSACTION_DATE' ,
--  'LAST_TRANSACTION_DATE_MATCH' ,
--  'LEG_HOLDMAIL_FLAG' ,
--  'LEG_UNDELSTMT_FLAG' ,
--  'FINACLE_HOLDMAIL/UNDELSTMT_FLAG' ,
--  'LEG_MODE_OF_OPERATION' ,
--  'FINACLE_MODE_OF_OPERATION' ,
--  'MODE_OF_OPERATION_MATCH' ,
--  'LEG_CREDIT_PREF_RATE',
--  'FIN_CREDIT_PREF_RATE',
--  'CREDIT_PREF_RATE_MATCH',
--  'LEG_DEBIT_PREF_RATE',
--  'FIN_DEBIT_PREF_RATE',
--  'DEBIT_PREF_RATE_MATCH',
--  'FIN_BASE_INTEREST_RATE',
--  'INT_TABLE_CODE',
--  'LEG_CURRENT_BALANCE',
--  'FINACLE_CURRENT_BALANCE',
--  'CURRENT_BALANCE_MATCH',
--  'LEG_LEGDER_BALANCE' ,
--  'FIN_LEDGER_BALANCE',
--  'LEDGER_BALANCE_MATCH',
--  'MEMOPAD FLAG',
--  'LEG_PAST_DUE_DATE',
--  'FIN_PAST_DUE_DATE',
--  'LEG_DUE_AMT',
--  'C5_CODE',
--  'MANAGER_CODE',
--  'LEG_STATEMENT_FREQUENCY',
--  'FIN_STATEMENT_FREQUENCY',
--  'CR_INT_FREQ_FIELD',
--  'LEG_CR__INT_FREQ',
--  'FIN_CR_INT_FREQ',
--  'CR_INT_FREQ_MATCH' ,
--  'LEG_C3CODE',
--  'FIN_ASSET_CLASS',
--  'CREDIT_TIER_CODE',
--  'DEBIT_TIER_CODE',
--  'LEG_ACCRUED_AMT',
--  'FIN_ACCRUED_AMT',
--  'ACCRUED_AMT_MATCH'
--  from dual
--  union all
--  select distinct
--  to_char(map_acc.leg_branch_id) ,
--  to_char(gam.sol_id) ,
--  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
--  to_char(map_acc.leg_scan) ,
--  to_char(map_acc.LEG_SCAS) ,
--  to_char(scccy),
--  to_char(gam.acct_crncy_code),
--  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
--  to_char(gam.cif_id),
--  to_char(gam.foracid),
--  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
--  to_char(map_acc.leg_acct_type),
--  to_char(gam.schm_code),
--  to_char(gsp.SCHM_DESC),
--  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--                   when scai20 = 'Y' then 'I'                           
--             else 'A' end ,
--  TO_CHAR(SMT.ACCT_STATUS) ,
--  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--                   when scai20 = 'Y' then 'I'                           
--             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
--  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end ,
--  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
--  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
--  case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end,
--  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY')   , 
--  case when (case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
--  TO_CHAR(SCAI64) ,
--  TO_CHAR(SCAIJ1) ,    
--  to_char(alr.ACCT_LABEL)    ,
--  case when SCAIC7='Y' then lpad('006',5,' ')
--                   when scai92='Y' then lpad('011',5,' ')
--              else lpad('999',5,' ') end ,
--  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
--  CASE WHEN (case when SCAIC7='Y' then '006'
--                   when scai92='Y' then '011'
--              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
--  to_char(inte.S5RATC),
--  to_char(itc.CUST_CR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.S5RATD),
--  to_char(itc.CUST_DR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.BASE_PCNT_DR),
--  to_char(itc.INT_TBL_CODE) ,
--  to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) ,
--  to_char(clr_bal_amt) ,
--  case when to_char((scbal -(scsum1+scsum2))/POWER(10,C8CED)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
--  to_char((scbal - SCSUMA)/POWER(10,C8CED)), 
--  to_char(clr_bal_amt + FUTURE_BAL_AMT),
--  case when to_char((scbal - SCSUMA)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
--  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
--  to_char(case when past.acc_num is not null then to_char(to_date(pass_due_dt,'YYYYMMDD'),'DD-MON-YYYY') else lpad(' ',10,' ') end),
--  to_char(gac.PD_XFER_DATE),
--  to_char(nvl(abs(Suspence_amt),0)),
--  to_char(scc5r),
--  to_char(scaco),
--  to_char(SCSFC),
--  to_char(ast.PS_FREQ_TYPE),
--  to_char(S5IFQC),
--  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
--             else lpad(' ',1,' ') end,
--  to_char(eit.INT_FREQ_TYPE_CR),
--  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
--             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
--  to_char(trim(scc3r)) ,
--  to_char(SUB_CLASSIFICATION_USER),
--  to_char(inte.S5TRCC) ,
--  to_char(inte.S5TRCD) ,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end
--  from map_acc
--      inner join scpf  on scab=map_acc.leg_branch_id and scan=leg_scan and scas=leg_scas
--      inner join c8pf  on c8ccy = scccy
--      inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
--  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
--      left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--      left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
--      left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
--      left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
--      LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
--  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
--  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--             left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scab||scan||scas
--      left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scab||scan||scas
--      left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
--      LEFT JOIN (select acid,ACCT_STATUS from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
--  left join (select acid,ACCT_LABEL from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
--  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'Y' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
--  left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss1  on map_acc.schm_code = gss1.schm_code
--  left join (select schm_code,crncy_code from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
--  left join (select schm_code,INT_PAID_FLG,INT_FREQ_TYPE_CR,SCHM_DESC  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--  left join (select INT_FREQ_TYPE_CR,entity_id,NRML_ACCRUED_AMOUNT_CR from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
--      left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
--      union 
--      select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
--      left join (
--      select lp10_acct acc_num,'Y' past_due_flg, LP10_LBD pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where to_number(LP10_LMT_C)=0 
--      union all
--      select lp10_acct acc_num,'Y' past_due_flg, case when LP10_LXD <> 0 then LP10_LXD else LP10_LED end  pass_due_dt, to_char(LP10_LGR_K) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXPIRED' and to_number(LP10_LMT_C)<> 0
--      union all
--      select lp10_acct acc_num,'Y' past_due_flg, LP10_LED pass_due_dt,to_char( to_number(LP10_LGR_K)-to_number(LP10_LMT_K)) Suspence_amt from uzlp10pf where trim(LP10_RMK)='EXCESS' and to_number(LP10_LMT_C)<> 0)past on fin_acc_num=trim(acc_num)
--      left join (select acid from tbaadm.ta_cot where bank_id='01') cot on gam.acid=cot.acid
--      left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
--      left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas--code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
--      left join freetext free on map_acc.fin_acc_num=free.acid
--      left join custom_eit leit on trim(leit.foracid)=gam.foracid
--      left join tbaadm.acd on B2K_ID=gam.acid
--      left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
--      where map_acc.schm_type in( 'SBA','CAA') and map_acc.schm_code<>'PISLA' 
--      and (acct.staffflag='Y')
--      union all
--  select  distinct
--  to_char(map_acc.leg_branch_id) ,
--  to_char(gam.sol_id) ,
--  case when substr(to_char(map_acc.leg_branch_id),2,4) = (to_char(gam.sol_id)) then 'TRUE' else 'FALSE' end ,
--  to_char(map_acc.leg_scan) ,
--  to_char(map_acc.LEG_SCAS) ,
--  to_char(scccy),
--  to_char(gam.acct_crncy_code),
--  case when to_char(scccy) = gam.acct_crncy_code then 'TRUE' else 'FALSE' end ,
--  to_char(gam.cif_id),
--  to_char(gam.foracid),
--  TO_CHAR(MAP_ACC.LEG_CUST_TYPE),
--  to_char(map_acc.leg_acct_type),
--  to_char(gam.schm_code),
--  to_char(gsp.SCHM_DESC),
--  case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
--             when scai20 = 'Y' then 'I'                           
--             else 'A' end ,
--  TO_CHAR(SMT.ACCT_STATUS) ,
--  CASE WHEN (case when scai85 = 'Y' and get_param('BANK_ID')= '01' then 'D'
--        when scai94 = 'Y' and get_param('BANK_ID')= '02' then 'D'
--             when scai20 = 'Y' then 'I'                           
--             else 'A' end)    =       TO_CHAR(SMT.ACCT_STATUS) THEN 'TRUE' ELSE 'FALSE' END , 
--  case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''   end ,
--  TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY'),
--  CASE WHEN trim(case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR'
--           then lpad(to_char(to_date(get_date_fm_btrv(scoad),'YYYYMMDD'),'DD-MON-YYYY'),11,' ')          
--           else ''
--      end)=TO_CHAR(gam.acct_opn_date,'DD-MON-YYYY') THEN 'TRUE' else 'FALSE' end ,
--  case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end,
--  TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),    
--  case when (case when ext_acc is not null and add_months(to_date(modify_date,'MM/DD/YYYY'),-12) > case when scoad<>0 and get_date_fm_btrv(scoad)<> 'ERROR' then to_date(get_date_fm_btrv(scoad),'YYYYMMDD') end then to_char(add_months(to_date(modify_date,'MM/DD/YYYY'),-12),'DD-MM-YYYY')---changed on 07-06-2017 sa per mk4a observation from sandeep
--       when scdle <> 0 and get_date_fm_btrv(scdle) <> 'ERROR' then
--             lpad(to_char(to_date(get_date_fm_btrv(scdle),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
--          else lpad(' ',10,' ')
--      end) = nvl(TO_CHAR(GAM.LAST_TRAN_DATE,'DD-MM-YYYY'),' ') THEN 'TRUE' ELSE 'FALSE' END ,
--  TO_CHAR(SCAI64) ,
--  TO_CHAR(SCAIJ1) ,    
--  to_char(alr.ACCT_LABEL)    ,
--  case when SCAIC7='Y' then lpad('006',5,' ')
--                   when scai92='Y' then lpad('011',5,' ')
--              else lpad('999',5,' ') end ,
--  TO_CHAR(GAM.MODE_OF_OPER_CODE) ,
--  CASE WHEN (case when SCAIC7='Y' then '006'
--                   when scai92='Y' then '011'
--              else '999' end) = TO_CHAR(GAM.MODE_OF_OPER_CODE) THEN 'TRUE' ELSE 'FALSE' END ,
--  to_char(inte.S5RATC),
--  to_char(itc.CUST_CR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATC)),'0')=nvl(to_char(itc.CUST_CR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.S5RATD),
--  to_char(itc.CUST_DR_PREF_PCNT),
--  case when nvl(to_char(trim(inte.S5RATD)),'0') = nvl(to_char(itc.CUST_DR_PREF_PCNT),' ') then 'TRUE' else 'FALSE' end, 
--  to_char(inte.BASE_PCNT_DR),
--  to_char(itc.INT_TBL_CODE), 
--  to_char(to_number(V5BAL)/power(10,c8pf.c8ced)), 
--  to_char(clr_bal_amt) ,
--  case when to_char(to_number(V5BAL)/power(10,c8pf.c8ced)) = to_char(clr_bal_amt) then 'TRUE' else 'FALSE' end ,
--  to_char((V5BAL)/POWER(10,C8CED)), 
--  to_char(clr_bal_amt + FUTURE_BAL_AMT),
--  case when to_char((V5BAL)/POWER(10,C8CED)) = (to_char(clr_bal_amt + FUTURE_BAL_AMT)) then 'TRUE' else 'FALSE' end,
--  to_char(case when mpt.entity_cre_flg='Y' then 'Y' else 'N' end),
--  to_char(' '),
--  to_char(gac.PD_XFER_DATE),
--  to_char(nvl(' ',0)),
--  to_char(scc5r),
--  to_char(scaco),
--  to_char(SCSFC),
--  to_char(ast.PS_FREQ_TYPE),
--  to_char(S5IFQC),
--  case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR --added in Mock3B based on scheme validation Infosys request           
--             else lpad(' ',1,' ') end,
--  to_char(eit.INT_FREQ_TYPE_CR),
--  case when (case  when get_param('BANK_ID')='02' and map_acc.schm_code='SCALC' 
--             and trim(S5IFQC) is null then  'M'
--             when trim(S5IFQC) is not null then lpad(MapFrequency(substr(trim(S5IFQC),1,1)),1,' ')
--             when gsp.INT_PAID_FLG='Y' and trim(gsp.INT_FREQ_TYPE_CR) is not null then gsp.INT_FREQ_TYPE_CR            
--             else lpad(' ',1,' ') end) = (to_char(eit.INT_FREQ_TYPE_CR)) then 'TRUE' else 'FALSE' end,
--  to_char(trim(scc3r)) ,
--  to_char(SUB_CLASSIFICATION_USER),
--  to_char(inte.S5TRCC) ,
--  to_char(inte.S5TRCD) ,
--  to_char(nvl(leit.NRML_ACCRUED_AMOUNT_CR,0)),
--  to_char(eit.NRML_ACCRUED_AMOUNT_CR ),
--  case when nvl(leit.NRML_ACCRUED_AMOUNT_CR,0) = (eit.NRML_ACCRUED_AMOUNT_CR) then 'TRUE' else 'FALSE' end
--  from v5pf
--  inner join map_acc on trim(map_acc.LEG_ACC_NUM)=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
--  inner join scpf on scpf.SCAB=v5pf.V5ABD and scpf.scan=v5pf.V5AND and scpf.scas=v5pf.V5ASD and scpf.scccy=v5pf.V5CCY
--  inner join (select sol_id,acid,acct_crncy_code,foracid,FUTURE_BAL_AMT,clr_bal_amt,MODE_OF_OPER_CODE,LAST_TRAN_DATE,acct_opn_date,schm_code,cif_id from tbaadm.gam where bank_id=get_param('BANK_ID') and schm_type in ('SBA','CAA'))gam on gam.foracid = map_acc.fin_acc_num
--  INNER JOIN (select orgkey,staffflag from crmuser.accounts) acct ON acct.orgkey = map_acc.fin_cif_id
--  inner join c8pf  on c8ccy = scccy
--  LEFT JOIN (select acid,acct_status from tbaadm.smt where bank_id=get_param('BANK_ID'))smt ON smt.acid = gam.acid
--  left join (select acct_label,acid from tbaadm.alr where bank_id=get_param('BANK_ID'))alr on alr.acid = gam.acid
--  LEFT JOIN (select i1.entity_id,i1.INT_TBL_CODE_SRL_NUM,i1.INT_TBL_CODE,i1.CUST_DR_PREF_PCNT,i1.CUST_CR_PREF_PCNT from tbaadm.itc i1 
--  left join (select * from tbaadm.itc where bank_id='01')i2 on  (i1.entity_id=i2.entity_id and i1.INT_TBL_CODE_SRL_NUM>i2.INT_TBL_CODE_SRL_NUM)
--  where i1.bank_id='01' and i2.entity_id is null )itc ON itc.entity_id =gam.acid
--  LEFT JOIN (select acid,PD_XFER_DATE from tbaadm.gac where bank_id=get_param('BANK_ID'))gac ON gac.acid = gam.acid
--  left join  s5pf  on s5pf.s5ab=scab and s5pf.s5an=scan and s5pf.s5as=scas
--  left join (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit on gam.acid=eit.entity_id
--  left join  chqbk on dtabc=scab and dtanc=scan and dtasc=scas
--  left join (select distinct acid,ENTITY_CRE_FLG from tbaadm.mpt where bank_id=get_param('BANK_ID'))mpt on mpt.acid=gam.acid
--  left join (select * from tbaadm.ast where bank_id=get_param('BANK_ID'))ast on ast.acid=gam.acid
--  left join r4pf on r4ab=leg_branch_id and r4an=leg_scan and r4as=leg_scas
--  left join acct_interest_tbl inte on inte.s5ab=scab and inte.s5an=scan and inte.s5as=scas 
--  left join (select * from map_cif where del_flg<>'Y' and IS_JOINT<>'Y') map_cif on map_cif.FIN_CIF_ID=map_acc.FIN_CIF_ID
--  left join (select distinct GFCUS,GFCLC,SWIFT_CODE from swift_code2) swift on nvl(trim(swift.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(swift.gfcus)=map_cif.gfcus
--  left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code =map_acc.CURRENCY     
--  left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
--  left join (select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from ret_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id
--  union 
--  select distinct fin_cif_id,max(to_number(substr(addr_type,4,2))) addr_num from corp_cust_address1  where trim(addr_type)<>'Prime' group  by fin_cif_id) cntr on cntr.fin_cif_id=map_acc.fin_cif_id 
--  left join Acc_dormant  on lpad(trim(ext_Acc),13,0)=fin_acc_num
--  inner join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(map_cif.gfclc),' ') and  trim(gfpf.gfcus)=trim(map_cif.gfcus)
--  left join dormant_acc on  leg_branch_id||leg_scan||leg_scas=dormant_acc.scab||dormant_acc.scan||dormant_acc.scas --code changed for dormant account from Excel file based on the email from Vijay on 17-May-2017,Code chage date on 21/May 
--  left join freetext free on map_acc.fin_acc_num=free.acid
--  left join (select * from tbaadm.icv where bank_id=get_param('BANK_ID') and int_tbl_code||crncy_code||int_tbl_ver_num in (select int_tbl_code||crncy_code||max(int_tbl_ver_num)  from tbaadm.icv where bank_id=get_param('BANK_ID') and start_date <= to_date(get_param('EOD_DATE'),'DD-MM-YYYY')
--  group by int_tbl_code,crncy_code))icv on itc.INT_TBL_CODE=icv.INT_TBL_CODE and icv. crncy_code=trim(scccy)
--  left join acct_addr_type_ret addr_ret on addr_ret.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
--  left join acct_addr_type_corp addr_corp on addr_corp.leg_acc_num=scpf.scab||scpf.scan||scpf.scas
--  left join tbaadm.acd on B2K_ID=gam.acid
--  left join custom_eit leit on trim(leit.foracid)=gam.foracid
--  where map_acc.schm_type in('CAA')  and v5pf.v5bal<>0
--  and (acct.staffflag='Y');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_tda_master.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
s_tda_master.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
spool $MIG_PATH/output/reports/kw/casa/KW_STAFF_TDA.dat
select
'EXTERNAL_NO'||'|'||
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
'SCHM_DESC'||'|'||
--'LEGACY_CUST_NAME' ||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'lEGACY_CR_PREF_RATE'||'|'||
'LEG_DEPOSIT_AMOUNT'||'|'||
'FINACLE_DEPOSIT_AMOUNT'||'|'||
'DEPOSIT_AMOUNT_MATCH'||'|'||
--'LEG_INT_TAB_CODE'||'|'||
--'LEG_EXTRACTED_INT_TBL_CODE'||'|'||
--'FINACLE_INT_TBL_CODE'||'|'||
--'INT_TBL_CODE_MATCH'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_OPEN_EFFECTIVE_DATE'||'|'||
'FINACLE_OPEN_EFFECTIVE_DATE'||'|'||
'OPEN_EFFECTIVE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_ACCOUNT' ||'|'||
'FINACLE_OPERATIVE_ACCOUNT' ||'|'||
'LEG_REPAYMENT_ACCOUNT' ||'|'||
'FINACLE_REPAYMENT_ACCOUNT' ||'|'||
'LEG_LAST_CR_INT_POST_DT'||'|'||
'FINACLE_LAST_CR_INT_POST_DT'||'|'||
'LAST_CR_INT_POST_DT_MATCH'||'|'||
'LEG_LAST_INT_RUN_DATE_CR'||'|'||
'FINACLE_LAST_INT_RUN_DATE_CR'||'|'||
'LAST_INT_RUN_DATE_CR_MATCH'||'|'||
--'LEG_NET_INT_CALC'||'|'||
--'FINACLE_NET_INT_CALC'||'|'||
--'LEG_CUMU_INTEREST_PAID'||'|'||
--'FINACLE_CUMU_INTEREST_PAID'||'|'||
--'CUMU_INTEREST_PAID_MATCH'||'|'||
'LEG_CUMU_INTE_CREDIT'||'|'||
'FINACLE_CUMU_INT_CREDIT'||'|'||
'CUMU_INT_CREDIT_MATCH'||'|'||
'LEG_MATURITY_DATE'||'|'||
'FINACLE_MATURITY_DATE'||'|'||
'MATURITY_DATE_MATCH'||'|'||
--'LEG_PRIN_REPAY_ACCT'||'|'||
--'FINACLE_PRIN_REPAY_ACCT'||'|'||
--'LEG_INT_CR_ACCT'||'|'||
--'FINACLE_INT_CR_ACCT'||'|'||
'LEG_AUTO_RENEWAL_FLAG'||'|'||
'FINACLE_AUTO_RENEWAL_FLG'||'|'||
'LEG_AUTO_CLOSURE_FLG'||'|'||
'FINACLE_AUTO_CLOSURE_FLG'||'|'||
--'LEG_RENEWAL_OPTION'||'|'||
--'FINACLE_RENEWAL_OPTION'||'|'||
--'RENEWAL_OPTION_MATCH'||'|'||
'FINACLE_INT_TABLE_RATE'||'|'||
'LEG_ABSOLUTE_RATE'||'|'||
'FINACLE_ABSOLUTE_RATE'||'|'||
'ABSOLUTE_RATE_MATCH'||'|'||
'FIN_PREF_RATE'||'|'||
'LEG_ACCOUNT_BALANCE'||'|'||
'FINACLE_CLEAR_BALANCE_AMOUNT'||'|'||
'ACCOUNT_BALANCE_MATCH'||'|'||
'LEG_LEGDER_BALANCE'||'|'||
'MANAGER_CODE'||'|'||
--'LEG_NOMINATED_ACC'||'|'||
--'FINACLE_NOMINATED_ACC'||'|'||
--'NOMINATED_ACC_MATCH'||'|'||
'CAPITALISED_INTEREST_FLAG'||'|'||
'LEG_DIVISION'||'|'||
'FIN_DIVISION'||'|'||
'LEG_SUB_DIVISION'||'|'||
'FIN_SUB_DIVISION'
from dual
union all
select 
to_char(map_acc.EXTERNAL_ACC)||'|'||
to_char(map_acc.leg_branch_id) ||'|'||
to_char(gam.sol_id) ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS) ||'|'||
to_char(map_acc.currency) ||'|'||
to_char(gam.acct_crncy_code) ||'|'||
case when to_char(gam.acct_crncy_code) = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
to_char(map_acc.leg_acc_num) ||'|'||
TO_CHAR(V5PF.V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
to_char(map_acc.leg_cust_type) ||'|'||
to_char(map_acc.leg_acct_type) ||'|'|| 
to_char(map_acc.schm_code) ||'|'||
to_char(gsp.SCHM_DESC)||'|'||
--to_char(gam.ACCT_NAME) ||'|'||
to_char(gam.ACCT_NAME) ||'|'||
--to_char(ACC_PREF_RATE) ||'|'||
to_char(case when (v5abd||v5and||v5asd=v5abi||v5ani||v5asi)  and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)||'|'||
----to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
----                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
----            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end) ||'|'||
to_char(tam.deposit_amount) ||'|'||
case when trim(case when (v5abd||v5and||v5asd=v5abi||v5ani||v5asi)  and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end) = to_char(tam.deposit_amount) then 'TRUE' else 'FALSE' end ||'|'||
--to_char(csp.INT_TBL_CODE)||'|'||
--to_char(csp.INT_TBL_CODE)||'|'||
--to_char(itc.int_tbl_code)||'|'||
--case when csp.INT_TBL_CODE = itc.int_tbl_code then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else ' ' end)  ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  to_char(case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else ' ' end)  = TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY') then 'TRUE' else 'FALSE' end  ||'|'||
case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MON-YYYY')
            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else  '' end  ||'|'||
TO_CHAR (tam.open_effective_date, 'DD-MON-YYYY') ||'|'||
case when (case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD'),'DD-MON-YYYY')
            when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY')
            else  '' end)  = TO_CHAR (tam.open_effective_date, 'DD-MON-YYYY')  then 'TRUE' else 'FALSE' end ||'|'||
case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null and v5ani <> '111112' 
           then to_char(v5abi||v5ani||v5asi)
           when v5ani ='111112'
           then to_char(iv.omabf||iv.omanf||iv.omasf)
           when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
           then to_char(iv.omabf||iv.omanf||iv.omasf)
           else ''
           end ||'|'||
case
           when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null and v5ani <> '111112' 
           then to_char(get_oper_acct(v5abi||v5ani||v5asi))
           when v5ani ='111112'
           then to_char(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) 
           when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
           then to_char(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) 
           else '' end ||'|'||
TO_CHAR(pm.omabf||pm.omanf||pm.omasf) ||'|'||
TO_CHAR(get_oper_acct(pm.omabf||pm.omanf||pm.omasf))  ||'|'||           
case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---- commented on 09-09-2017 based on sandeep requirement and finding from day 1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end  ||'|'||
TO_CHAR (eit.interest_calc_upto_date_cr, 'DD-MM-YYYY' ) ||'|'||
case when (case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---- commented on 09-09-2017 based on sandeep requirement and finding from day 1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end) = (TO_CHAR (eit.interest_calc_upto_date_cr, 'DD-MM-YYYY' )) then 'TRUE' else 'FALSE' end ||'|'||
case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---commented on 09-09-2017 based on sandeep requirement and day1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end  ||'|'||
TO_CHAR(eit.last_interest_run_date_cr,'DD-MM-YYYY')||'|'||
case when (case --when  otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' and v5lcd=0 then rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')---commented on 09-09-2017 based on sandeep requirement and day1 recon
                 when v5lcd<>0 and v5lre<>0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' and to_date(get_date_fm_btrv(v5lre),'YYYYMMDD') <to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD') 
                                     then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')
                 when v5lre<>0  and get_date_fm_btrv(v5lre) <> 'ERROR'  then rpad(to_char(to_date(get_date_fm_btrv(v5lre),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ')
                 when v5lcd<>0 and v5lre=0 and  get_date_fm_btrv(v5lcd) <> 'ERROR' then rpad(to_char(to_date(get_date_fm_btrv(v5lcd),'YYYYMMDD'),'DD-MM-YYYY'),10,' ')------Added on 09-09-2017 based on sandeep requirement and day1 recon
            else rpad(to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,'DD-MM-YYYY'),10,' ') end) = (TO_CHAR(eit.last_interest_run_date_cr,'DD-MM-YYYY')) then 'TRUE' else 'FALSE' end ||'|'||
--'LEG_NET_INT_CALC'||'|'||
--'FINACLE_NET_INT_CALC'||'|'||
--case when v5abd||v5and||v5asd<>v5abi||v5ani||v5asi then nvl(to_char(to_number((clmamount)/POWER(10,C8CED))),'0')
--            else ' ' end ||'|'||
--to_char(tam.cumulative_int_paid)||'|'||
--case when (case when v5abd||v5and||v5asd<>v5abi||v5ani||v5asi then nvl(to_char(to_number((clmamount)/POWER(10,C8CED))),'0')
--            else ' ' end) = to_char(tam.cumulative_int_paid) then 'TRUE' else 'FALSE' end ||'|'||
case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi then to_char(to_number((v5am4)/POWER(10,C8CED))) else ' ' end ||'|'||
to_char(tam.cumulative_int_credited)||'|'||
CASE WHEN (case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi then to_char(to_number((v5am4)/POWER(10,C8CED))) else ' ' end)  = to_char(tam.cumulative_int_credited) THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(case when v5mdt<>0 and   get_date_fm_btrv(v5mdt) <> 'ERROR' and v5mdt<>'9999999' then
            to_char(to_date(get_date_fm_btrv(v5mdt),'YYYYMMDD'),'DD-MM-YYYY')
            else to_char(to_date(get_date_fm_btrv(V5NRD),'YYYYMMDD'),'DD-MM-YYYY') end) ||'|'||   --- challenge
TO_CHAR (tam.maturity_date, 'DD-MON-YYYY') ||'|'||
CASE WHEN (case when v5mdt<>0 and   get_date_fm_btrv(v5mdt) <> 'ERROR' and v5mdt<>'9999999' then
            to_char(to_date(get_date_fm_btrv(v5mdt),'YYYYMMDD'),'DD-MM-YYYY')
            else to_char(to_date(get_date_fm_btrv(V5NRD),'YYYYMMDD'),'DD-MM-YYYY') end) = TO_CHAR (tam.maturity_date, 'DD-Mm-YYYY') THEN 'TRUE' ELSE 'FALSE' END  ||'|'||
--'LEG_PRIN_REPAY_ACCT'||'|'||
--'FINACLE_PRIN_REPAY_ACCT'||'|'||
--'LEG_INT_CR_ACCT'||'|'||
--'FINACLE_INT_CR_ACCT'||'|'||
rpad(case when v5pf.v5arc in ('A','P') then 'N'
                when HYDBNM||HYDLP||HYDLR is not null then 'U' 
                when v5pf.v5mdt=9999999 then 'U'
                else 'N' end,1,' ') ||'|'||
to_char(tam.auto_renewal_flg) ||'|'||
rpad(
rpad(case when v5pf.v5arc in ('A','P') then 'N'
                when HYDBNM||HYDLP||HYDLR is not null then 'N' 
                when v5pf.v5mdt=9999999 then 'N'
                else 'Y' end,1,' '),1,' ') ||'|'||
to_char(tam.close_on_maturity_flg) ||'|'||
to_char(itc.INT_TBL_CODE) ||'|'||
to_char(case when trim(v5pf.v5rat)='0' then lpad(to_char(nvl(trim(D4BRAR),0)),8,' ')
when  TO_number(trim(v5pf.v5rat)) between 0.001 and 0.999 then lpad('0'||to_char(trim(v5pf.v5rat)),8,' ')
else lpad(to_char(trim(v5pf.v5rat)),8,' ')
end)||'|'||
case when trim(dep_rate.v5pf_acc_num) is null then to_char(itc.ID_CR_PREF_PCNT + itc.NRML_PCNT_CR) else to_char(itc.ID_CR_PREF_PCNT + tvs.NRML_INT_PCNT) end||'|'||
--to_char(itc.ID_CR_PREF_PCNT + tvs.NRML_INT_PCNT)||'|'||
case when to_number(case when v5pf.v5rat='0' then lpad(to_char(nvl(D4BRAR,0)),8,' ')
when  TO_number(v5pf.v5rat) between 0.001 and 0.999 then lpad('0'||to_char(v5pf.v5rat),8,' ')
else lpad(to_char(v5pf.v5rat),8,' ')
end) = to_number(case when trim(dep_rate.v5pf_acc_num) is null then to_char(itc.ID_CR_PREF_PCNT + itc.NRML_PCNT_CR) else to_char(itc.ID_CR_PREF_PCNT + tvs.NRML_INT_PCNT) end) then 'TRUE' else 'FALSE' end ||'|'||
to_char(itc.ID_CR_PREF_PCNT) ||'|'||
to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)  ||'|'||
to_char(TO_NUMBER (tam.deposit_amount))||'|'||
case when to_char(case when v5abd||v5and||v5asd=v5abi||v5ani||v5asi and nvl(clmamount,0)  <> 0 
                then to_number(v5pf.v5bal)/power(10,c8pf.c8ced) - to_number((clmamount)/POWER(10,C8CED))
            else to_number(v5pf.v5bal)/power(10,c8pf.c8ced) end)  =to_char(TO_NUMBER (tam.deposit_amount))  then 'TRUE' else 'FALSE' end  ||'|'||
to_char((scbal - SCSUMA)/POWER(10,C8CED))||'|'||
to_char(scaco) ||'|'||
--case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null            
--then rpad(get_oper_acct(v5abi||v5ani||v5asi),16,' ')                     
--when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--then rpad(get_oper_acct(iv.omabf||iv.omanf||iv.omasf),16,' ') 
--else rpad(' ',16,' ') end||'|'||
--gam_oper.foracid||'|'||
--case when trim(case when trim(get_oper_acct(v5abi||v5ani||v5asi)) is not null            
--then rpad(get_oper_acct(v5abi||v5ani||v5asi),16,' ')                     
--when trim(get_oper_acct(iv.omabf||iv.omanf||iv.omasf)) is not null 
--then rpad(get_oper_acct(iv.omabf||iv.omanf||iv.omasf),16,' ') 
--else rpad(' ',16,' ') end) = (gam_oper.foracid) then 'TRUE' else 'FALSE' end   ||'|'||
to_char(case when map_acc.schm_code in ('TDGTD','TDATD') then 'N' else 'Y' end)||'|'||
case 
when nrd.officer_code is not null and trim(nrd.division)  is not null  then to_char(trim(nrd.division))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end||'|'||
c_gac.division||'|'||
case 
when nrd.officer_code is not null  and trim(SUBDIVISION)  is not null  then to_char(trim(nrd.subdivision))
when trim(dv.DIVISION) is not null then to_char(trim(dv.DIVISION)) end||'|'||
c_gac.SUB_DIVISION
from (select * from v5pf where v5pf.v5tdt='D' and v5pf.v5bal<>'0')v5pf
inner join scpf on trim(scpf.SCAB)=trim(v5pf.V5ABD) and trim(scpf.scan)=trim(v5pf.V5AND) and trim(scpf.scas)=trim(v5pf.V5ASD) and scpf.scccy=v5pf.V5CCY
inner join (select * from map_acc where schm_type='TDA')map_acc on map_acc.LEG_ACC_NUM=trim(v5brnm)||trim(v5dlp)||trim(v5dlr)
left join map_cif mc on mc.fin_cif_id=map_acc.fin_cif_id
inner join c8pf on c8ccy =scpf.scccy
LEFT JOIN (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam ON gam.foracid = map_acc.fin_acc_num
LEFT JOIN (select * from TBAADM.ALR where bank_id=get_param('BANK_ID'))ALR ON ALR.ACID = GAM.ACID
LEFT JOIN (select * from tbaadm.tam where bank_id=get_param('BANK_ID'))tam ON tam.acid = gam.acid
left join (select * from tbaadm.gam where bank_id=get_param('BANK_ID'))gam_oper on tam.REPAYMENT_ACID=gam_oper.acid
LEFT JOIN (select * from tbaadm.eit where bank_id=get_param('BANK_ID'))eit ON eit.entity_id = gam.acid 
left join (select *  from tbaadm.gsp   where bank_id = get_param('BANK_ID') and del_flg = 'N')gsp on  map_acc.schm_code = gsp.schm_code
LEFT JOIN (select * from tbaadm.itc where bank_id=get_param('BANK_ID'))itc ON itc.entity_id = gam.acid AND itc.entity_type = 'ACCNT'
--left join (select tv1.* from (select * from tbaadm.tvs where bank_id='01') tv1 
--inner join (select int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) int_ver from tbaadm.tvs where bank_id='01'group by  int_tbl_code,crncy_code) tv2 
--on tv1.int_tbl_code=tv2.int_tbl_code and tv1.crncy_code=tv2.crncy_code and tv1.INT_TBL_VER_NUM=tv2.int_ver) tvs on tvs.INT_TBL_CODE=itc.INT_TBL_CODE and tvs.crncy_code=map_acc.currency
left join crmuser.accounts b on b.orgkey = map_acc.fin_cif_id     
left join ospf on v5brnm=osbrnm and v5dlp=osdlp and v5dlr=osdlr
left join (select * from otpf where ottdt='D')otpf on v5brnm=otbrnm and v5dlp=otdlp and v5dlr=otdlr
left join ompf_iv iv on v5brnm=iv.ombrnm and v5dlp=iv.omdlp and v5dlr=iv.omdlr
left join ompf_pm pm on v5brnm=pm.ombrnm and v5dlp=pm.omdlp and v5dlr=pm.omdlr
left join (select v5brnm,v5dlp,v5dlr,sum(v4aim1)+sum(v4aim2) clmamount  from v5pf
inner join v4pf on v5brnm=v4brnm and v5dlp=v4dlp and v5dlr=v4dlr
inner join (select * from otpf where ottdt='D')otpf on otbrnm=v4brnm and otdlp=v4dlp and otdlr=v4dlr
where to_date(get_date_fm_btrv(V4DTE),'YYYYMMDD') > case when V5LRE<>'0' and   get_date_fm_btrv(V5LRE) <> 'ERROR' then to_date(get_date_fm_btrv(V5LRE),'YYYYMMDD')
when  otsdte<>'0' and   get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end
and v5pf.v5tdt='D' and v5pf.v5bal<>'0'        
Group by v5brnm,v5dlp,v5dlr)int_amt on int_amt.v5brnm =v5pf.v5brnm and int_amt.v5dlp=v5pf.v5dlp  and  int_amt.v5dlr=v5pf.v5dlr
left join d4pf on d4brr=V5PF.v5brr
left join jrpf on trim(jrpf.jrprc) =trim(v5pf.v5prc) 
left join (select* from hypf where hydlr is not null) hypf on HYDBNM||HYDLP||HYDLR = map_acc.leg_acc_num
left join (select * from tbaadm.csp where bank_id = get_param('BANK_ID') and del_flg = 'N')csp on csp.schm_code = map_acc.schm_code and csp.crncy_code = map_acc.CURRENCY  
left join (select schm_code,max(GL_SUB_HEAD_CODE) GL_SUB_HEAD_CODE from tbaadm.gss where bank_id = get_param('BANK_ID') and del_flg = 'N' and default_flg = 'N' group by schm_code)gss  on map_acc.schm_code = gss.schm_code
left join (select * from tbaadm.TSP where bank_id = get_param('BANK_ID') and del_flg = 'N' )TSP  on map_acc.schm_code = TSP.schm_code AND Tsp.crncy_code = map_acc.CURRENCY 
left join gfpf  on nvl(trim(gfpf.gfclc),' ')=nvl(trim(mc.gfclc),' ') and  trim(gfpf.gfcus)=trim(mc.gfcus)
left join (select distinct v5pf_acc_num,tbl_code from dep_rate)dep_rate on  v5pf_acc_num=map_acc.leg_acc_num
left join (select tv1.* from (select * from tbaadm.tvs where bank_id='01') tv1 
inner join (select int_tbl_code,crncy_code,max(INT_TBL_VER_NUM) int_ver from tbaadm.tvs where bank_id='01'group by  int_tbl_code,crncy_code) tv2 
on tv1.int_tbl_code=tv2.int_tbl_code and tv1.crncy_code=tv2.crncy_code and tv1.INT_TBL_VER_NUM=tv2.int_ver) tvs on tvs.INT_TBL_CODE=dep_rate.TBL_CODE and tvs.crncy_code=map_acc.currency 
left join rm_code_mapping dv on trim(dv.RESPONSIBILITY_CODE) =trim(scaco)
left join NEWRMCODE_DATA nrd on trim(nrd.officer_code)=trim(scaco)
left join (select * from CUSTOM.CUST_GAC_EXTENTION_TBL)c_gac on c_gac.acid=gam.acid
where (B.STAFFFLAG ='Y');
exit; 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
test.sql 
========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
test.sql 
set head off
set feedback off
set term off
set lines 1100
set page size 0
set pages 0
set trimspool on
set define off
spool $MIG_PATH/output/reports/kw/casa/test.dat
Select distinct   
'LEG_BRCH_ID'||'|'||
'FINACLE_SOL_ID'||'|'||
'BRANCH_ID_MATCH'||'|'||
'LEG_CLIENT_NO'||'|'||
'LEG_SUFFIX'||'|'||
'LEG_CCY'||'|'||
'FINACLE_CCY'||'|'||
'CCY_MATCH'||'|'||
'FINACLE_CIF_ID'||'|'||
'LEG_CONTRACT'||'|'||
'LEG_DEAL_REF_NUMBER' ||'|'||
'FINACLE_ACCT_NUM'||'|'||
'LEG_CUST_TYPE'||'|'||
'LEG_ACCT_TYPE'||'|'||
'FINACLE_SCHEME_CODE'||'|'||
--'LEGACY_CUST_NAME' ||'|'||
'FINACLE_CUST_NAME' ||'|'||
--'LEGACY_DEBIT_PREF_PERCENT'||'|'||
--'FINACLE_DEBIT_PREF_PERCENT'||'|'||
--'DEBIT_PREF_PERCENT_MATCH'||'|'||
--'LEGACY_REPRICING_PLAN'||'|'||
'FINACLE_REPRICING_PLAN'||'|'||
--'REPRICING_PLAN_MATCH'||'|'||
'LEG_ACCT_OPN_DATE'||'|'||
'FINACLE_ACCT_OPN_DATE'||'|'||
'ACCT_OPN_DATE_MATCH'||'|'||
'LEG_SANCTION_LIMIT'||'|'||
'FINACLE_SANCTION_LIMIT'||'|'||
'SANCTION_LIMIT_MATCH'||'|'||
'LEG_LIMIT_SANCTION_DATE'||'|'||
'FINACLE_LIMIT_SANCTION_DATE'||'|'||
'LIMIT_SANCTION_DATE_MATCH'||'|'||
'LEG_LIMIT_EXPIRY_DATE'||'|'||
'FINACLE_LIMIT_EXPIRY_DATE'||'|'||
'LIMIT_EXPIRY_DATE_MATCH'||'|'||
--'LEG_INT_TBL_CODE'||'|'||
'FINACLE_INT_TBL_CODE'||'|'||
--'INT_TBL_CODE_MATCH'||'|'||
'LEG_REPY_PRD_IN_MONS'||'|'||
'FINACLE_REPY_PRD_IN_MON'||'|'||
'REPY_PRD_IN_MON_MATCH'||'|'||
'LEG_LIAB_TRF_UPD_AMOUNT'||'|'||
'FINACLE_LIAB_TRF_UPD_AMOUNT'||'|'||
'LIAB_TRF_UPD_AMOUNT_MATCH'||'|'||
--'LEG_UPFRONT_INSTALLMENT_COLL'||'|'||
--'FINACLE_UPFRONT_INSTALLMENT_COLL'||'|'||
--'UPFRONT_INSTLMNT_COLL_MATCH'||'|'||
--'LEG_SUM_OF_THE_PRINC_DMD_AMT'||'|'||
--'FINACLE_SUM_OF_THE_PRN_DMD_AMT'||'|'||
--'SUM_OF_THE_PRN_DMD_AMT_MATCH'||'|'||
--'LEG_INT_RATE_ON_SANC_LMT'||'|'||
--'FINACLE_INT_RATE_ON_SANC_LMT'||'|'||
--'INT_RATE_ON_SANC_LMT_MATCH'||'|'||
--'LEG_DISBUR_PREVIOUS_SCHE'||'|'||
--'FINACLE_DISBUR_PREVIOUS_SCHE'||'|'||
--'DISBUR_PREVIOUS_SCHE_MATCH'||'|'||
'LEG_REPAY_SCHEDULE_DATE'||'|'||
'FINACLE_REPAY_SCHEDULE_DATE'||'|'||
'REPAY_SCHEDULE_DATE_MATCH'||'|'||
'LEG_OPERATIVE_BRANCH'||'|'||
'LEG_OPERATIVE_CLIENT_NO'||'|'||
'LEG_OPERATIVE_ORDINAL'||'|'||
'LEG_OPERATIVE_ACC'||'|'||
'FIN_OPER_ACC'||'|'||
'OPERATIVE_ACC_MATCH'||'|'||
'LEG_OPERATIVE_CCY'||'|'||
'LEG_TENOR_IN_MONTHS'||'|'||
'FINACLE_TENOR_IN_MONTHS'||'|'||
'TENOR_IN_MONTHS_MATCH'||'|'||
'LEG_TENOR_IN_DAYS'||'|'||
'FINACLE_TENOR_IN_DAYS'||'|'||
'TENOR_IN_DAYS_MATCH'||'|'||
'PURPOSE_OF_LOAN'||'|'||
'FIN_PURPOSE_OF_LOAN'||'|'||
'PURPOSE_OF_LOAN_MATCH'||'|'||
'PURPOSE_OF_LOAN_DESC'||'|'||
'LEGACY_RATE_OF_INTEREST'||'|'||
'FIN_RATE_OF_INTEREST'||'|'||
'RATE_OF_INTEREST_MATCH'||'|'||
'LEG_PRI_INSTALLMENT_AMOUNT'||'|'||
'FIN_PRI_INSTALLMENT_AMOUNT'||'|'||
'PRINCIPAL_INSTALLMENT_MATCH'||'|'||
'LEG_INT_INSTALLMENT_AMOUNT'||'|'||
'FIN_INT_INSTALLMENT_AMOUNT'||'|'||
'INTEREST_AMOUNT_MATCH'||'|'||
'TOTAL_LEG_INSTALLMENT_AMOUNT'||'|'||
'TOTAL_FIN_INSTALLMENT_AMOUNT'||'|'||
'INTALLMENT_AMOUNT_MATCH'||'|'||
'LEG_LEDGER_BAL'||'|'||
'FIN_LEDGER_BAL'||'|'||
'LEDGER_MATCH'||'|'||
'FIN_DUE_AMT'||'|'||
'LEG_DUE_AMT'||'|'||
'DUE_AMT_MATCH'||'|'||
'LEG_DUE_DAYS'||'|'||
'FIN_DUE_DAYS'||'|'||
'DUE_DAYS_MATCH'||'|'||
'LEG_DUE_DATE'||'|'||
'FIN_DUE_DATE'||'|'||
'DUE_DATE_MATCH'
from dual
union all
select 
to_char(map_acc.leg_branch_id) ||'|'|| 
to_char(gam.sol_id)||'|'||
case when substr(map_acc.leg_branch_id,2,4) = gam.sol_id then 'TRUE' else 'FALSE' end  ||'|'||
to_char(map_acc.leg_scan) ||'|'||
to_char(map_acc.LEG_SCAS)||'|'||
map_acc.currency||'|'||
gam.acct_crncy_code ||'|'||
CASE WHEN map_acc.currency = gam.acct_crncy_code THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(gam.cif_id) ||'|'||
map_acc.leg_acc_num||'|'||
to_char(V5DLR) ||'|'||
to_char(gam.foracid) ||'|'|| 
map_acc.leg_cust_type ||'|'||
map_acc.leg_acct_type ||'|'|| 
map_acc.schm_code ||'|'||
gam.ACCT_NAME||'|'||
to_char(lrp.repricing_plan) ||'|'||
case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then  to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (gam.acct_opn_date, 'DD-MON-YYYY')||'|'||
case when  case when otsdte<>0 and   get_date_fm_btrv(otsdte) <> 'ERROR' then
            to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end  = gam.acct_opn_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED) end)||'|'||
    to_char(gam.sanct_lim) ||'|'||
CASE WHEN case when r8crl='Y' then (ompf.omnwp/POWER(10,c8pf.C8CED))-(nvl(iomnwr,0)/POWER(10,c8pf.C8CED))
    else to_number(ompf.omnwp)/POWER(10,c8pf.C8CED)end = gam.sanct_lim THEN 'TRUE' ELSE 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MM-YYYY')end ||'|'||
TO_CHAR (lht.lim_sanct_date,'DD-MM-YYYY') ||'|'||
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')end =lht.lim_sanct_date then 'TRUE' else 'FALSE' end ||'|'||
case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),'DD-MON-YYYY')end ||'|'||
TO_CHAR (lht.lim_exp_date,'DD-MON-YYYY') ||'|'||   
CASE WHEN case when otmdt<>'0' and otmdt<>'9999999'  and get_date_fm_btrv(otmdt) <> 'ERROR' then to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')end = lht.lim_exp_date THEN 'TRUE' ELSE 'FALSE' END ||'|'||
to_char(itc.int_tbl_code)||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end)||'|'||
to_char(lam.rep_perd_mths)||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(to_number(otdla)/POWER(10,c8pf.C8CED))||'|'||
to_char(lam.liab_as_on_xfer_eff_date)||'|'||
case when to_number(otdla)/POWER(10,c8pf.C8CED)=lam.liab_as_on_xfer_eff_date then 'TRUE' else 'FALSE' END ||'|'||
case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_char(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),'DD-MON-YYYY') end ||'|'||
TO_CHAR (lam.rep_shdl_date,'DD-MON-YYYY')||'|'||  
case when case when otsdte<>'0' and get_date_fm_btrv(otsdte) <> 'ERROR' then to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') end=lam.rep_shdl_date then 'TRUE' else 'FALSE' end ||'|'||
to_char(substr(NEEAN,1,4))||'|'||
to_char(substr(NEEAN,5,6))||'|'||
to_char(substr(NEEAN,11,3))||'|'||
to_char(NEEAN)||'|'||
CASE WHEN L.OP_ACID IS NOT NULL THEN G1.FORACID ELSE '' END ||'|'||
case when to_char(nvl(trim(NEEAN),' ')) = to_char(nvl(CASE WHEN trim(L.OP_ACID) IS NOT NULL THEN trim(G1.FORACID) END,' ')) then 'TRUE' else 'FALSE' end ||'|'||
to_char(oper.currency) ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end )||'|'||
to_char(lam.rep_perd_mths) ||'|'|| 
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1))
     else floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'))) end=lam.rep_perd_mths then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then  to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
 else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end)||'|'||
to_char(lam.rep_perd_days) ||'|'||
case when case when last_day(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')) = to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') then 
     to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1 - add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1,floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')-1,to_date(get_date_fm_btrv(otsdte),'YYYYMMDD')-1 ))) 
     else to_date(get_date_fm_btrv(otmdt),'YYYYMMDD')- add_months(to_date(get_date_fm_btrv(otsdte),'YYYYMMDD'),floor(MONTHS_BETWEEN( to_date(get_date_fm_btrv(otmdt),'YYYYMMDD'),to_date(get_date_fm_btrv(otsdte),'YYYYMMDD') ))) end
 =lam.rep_perd_days then 'TRUE' else 'FALSE' end ||'|'||
to_char(SCC2R)||'|'||
TO_CHAR(GAC.PURPOSE_OF_ADVN)||'|'||
case when nvl(TRIM(SCC2R),' ') = nvl(GAC.PURPOSE_OF_ADVN,' ') then 'TRUE' else 'FALSE' end ||'|'||
REF_DESC||'|'||
to_char(lt.acc_pref_rate)||'|'||
to_char(lt.BASE_PCNT_DR+lt.DR_NRML_INT_PCNT+lt.ACTUAL_PREF_RATE)||'|'||
case when abs(to_number(to_char(lt.acc_pref_rate)))=abs(to_number(to_char(lt.BASE_PCNT_DR+lt.DR_NRML_INT_PCNT+lt.ACTUAL_PREF_RATE))) then 'TRUE' else 'FALSE' end ||'|'||  
case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end||'|'||
PRINCIPAL_AMT ||'|'||
case when case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED)end = PRINCIPAL_AMT then 'TRUE' else 'FALSE' end||'|'||
case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end||'|'||
INTEREST_AMT||'|'||
case when case when ii.ins is null then 0 else  to_number(ii.ins)/POWER(10,C8CED) end = INTEREST_AMT then 'TRUE' else 'FALSE' end ||'|'||
to_char(case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end)||'|'||
to_char(INSTALLMENT_AMT)||'|'||
case when case when ina.ins is null and ii.ins is null then 0 else (case when ina.ins is null then 0 else to_number(ina.ins)/POWER(10,C8CED) end)+(case when ii.ins is null then 0 else to_number(ii.ins)/POWER(10,C8CED) end) end = INSTALLMENT_AMT then 'TRUE' else 'FALSE' end ||'|'||
case when  V5BAL is not null then to_char(to_number(v5bal)/POWER(10,C8CED)) else '0.01' end||'|'||
to_char(gam.CLR_BAL_AMT)||'|'||
case when case when  V5BAL is not null then to_number(v5bal)/POWER(10,C8CED) else 0.01 end=gam.CLR_BAL_AMT then 'TRUE' else 'FALSE' end ||'|'||
LDT.DMD_AMT1||'|'||
ls.sp/c8pwd||'|'||
case when nvl(LDT.DMD_AMT1,0) = nvl(to_number(ls.sp)/c8pwd,0) then 'TRUE' else 'FALSE' end ||'|'||
case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end||'|'||
gac.DPD_CNTr||'|'||
case when nvl(to_number(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then abs(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD') - to_date(get_param('EOD_DATE'),'DD-MM-YYYY')) else 0 end),0) = nvl(gac.DPD_CNTr,0) then 'TRUE' else 'FALSE' end||'|'||
to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YYYY') else ' ' end)||'|'||
to_char(DB_STAT_DATE - gac.DPD_CNTR)||'|'||
case when (to_char(case when ls.dte>0 and ls.dte is not null and ls.dte!= '9999999' then to_char(to_date(get_date_fm_btrv(ls.dte),'YYYYMMDD'),'DD-MON-YY') else '20-FEB-17' end)) = (to_char(DB_STAT_DATE - gac.DPD_CNTR)) then 'TRUE' else 'FALSE' end
from map_acc 
inner join map_cif on MAP_ACC.FIN_CIF_ID=map_cif.fin_cif_id
INNER join gfpf  on nvl(TRIM(gfpf.gfclc),' ')=nvl(TRIM(map_cif.gfclc),' ') and  TRIM(gfpf.gfcus)=TRIM(map_cif.gfcus)
inner JOIN tbaadm.gam ON gam.foracid = map_acc.fin_acc_num and gam.bank_id=get_param('BANK_ID') and gam.schm_type='LAA'
inner join v5pf on v5brnm||v5dlp||trim(v5dlr) = leg_acc_num
LEFT JOIN tbaadm.lrp ON lrp.acid = gam.acid and lrp.bank_id=get_param('BANK_ID')
inner join otpf on otbrnm||otdlp||trim(otdlr) = leg_acc_num
inner join (select ombrnm||omdlp||trim(omdlr) ompf_leg_num,sum(omnwp) omnwp from ompf inner join map_acc on ombrnm||omdlp||trim(omdlr) =leg_acc_num where schm_type='LAA' and ommvt='P' and ommvts in ('C','O') group by ombrnm||omdlp||trim(omdlr))OMPF ON OMPF_LEG_NUM=LEG_ACC_NUM
inner join c8pf on c8ccy = currency
left join iompf_laa on del_ref_num=LEG_ACC_NUM
left join r8pf on trim(r8lnp)=trim(v5dlp)
LEFT JOIN tbaadm.lht ON lht.acid = gam.acid and lht.bank_id=get_param('BANK_ID')
LEFT JOIN tbaadm.itc  ON itc.entity_id = gam.acid AND ITC.ENTITY_TYPE='ACCNT'  and itc.bank_id=get_param('BANK_ID')
INNER JOIN tbaadm.lam  ON lam.acid = gam.acid AND LAM.bank_id=get_param('BANK_ID')
left join operacc oper on  TRIM(oper.ompf_leg_num)=leg_acc_num
left join  nepf on trim(OPER_LEG_ACC)=trim(neab)||trim(nean)||trim(neas)
LEFT JOIN TBAADM.LAM L ON L.ACID=gam.ACID AND gam.BANK_ID=L.BANK_ID
LEFT JOIN TBAADM.GAM G1 ON G1.ACID=L.OP_ACID AND L.BANK_ID=G1.BANK_ID
LEFT JOIN tbaadm.gac ON gac.acid = gam.acid AND GAC.bank_id=get_param('BANK_ID')
left join scpf on scab||scan||scas=V5ABD||v5AND||V5ASD
left join loan_account_finacle_int_rate lt on lt.int_acc_num=leg_acc_num
left JOIN TBAADM.RCT ON GAC.PURPOSE_OF_ADVN=RCT.REF_CODE AND RCT.BANK_ID=get_param('BANK_ID') AND REF_REC_TYPE='41'
left join (select o1.ombrnm||o1.omdlp||trim(o1.omdlr) del_ref_num,o1.omnwr ins,to_date(get_date_fm_btrv(o1.OmDTE),'YYYYMMDD') isd from ompf o1 inner join map_acc on o1.ombrnm||o1.omdlp||trim(o1.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='P' and om.OMMVTs='R' and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) and om.omnwr!=0 GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o1.ombrnm AND om.omdlp=o1.omdlp AND om.omdlr=o1.omdlr and oM.omdte=o1.omdte 
where o1.ommvt='P' and o1.OMMVTs='R' AND schm_type='LAA')ina on ina.del_ref_num=leg_acc_num
LEFT JOIN (select distinct ca1.foracid,ca1.flow_date,ca1.INSTALLMENT_AMT,ca1.PRINCIPAL_AMT,ca1.INTEREST_AMT,ca1.BANK_ID from custom.c_amort ca1 where ca1.bank_id='01' 
and to_number(ca1.SERIAL_NUM)=(select min(to_number(ca2.serial_num)) from custom.c_amort ca2 where to_number(INSTALLMENT_AMT)<>0 and ca1.foracid=ca2.foracid 
and (FLOW_DESC='Loan Principal Demand' or FLOW_DESC='Equated Installment Demand' or flow_desc='Regular Installment' or trim(FLOW_DESC)is null) group by ca2.foracid) ) lrS ON lrs.foracid = gam.foracid   
left join (select o2.ombrnm||o2.omdlp||trim(o2.omdlr) del_ref_num,o2.omnwr ins,to_date(get_date_fm_btrv(o2.OmDTE),'YYYYMMDD') isd from ompf o2 inner join map_acc on o2.ombrnm||o2.omdlp||trim(o2.omdlr) =leg_acc_num 
INNER JOIN (select ombrnm,omdlp,omdlr, min(om.omdte) omdte from ompf om where om.ommvt='P' and TRIM(om.OMMVTs) ='R' and TO_NUMBER(om.omdte)>TO_NUMBER(get_param('EODCYYMMDD')-1) GROUP BY ombrnm,omdlp,omdlr)OM ON om.ombrnm=o2.ombrnm AND om.omdlp=o2.omdlp AND om.omdlr=o2.omdlr and oM.omdte=o2.omdte
where o2.ommvt='I' and TRIM(o2.OMMVTs) IS NULL AND schm_type='LAA')ii on ii.del_ref_num=leg_acc_num
left join (select acid,sum(dmd_amt)dmd_amt1,min(dmd_date)dmd_date1 from tbaadm.ldt where bank_id=get_param('BANK_ID') group by  acid)ldt on ldt.acid=gam.acid
left join (select lsbrnm||lsdlp||lsdlr del_num,sum((abs(lsamtd)-abs(lsamtp))+lsup)sp,min(lsdte)dte from lspf where lspdte='9999999' and TO_NUMBER(lsdte)<=TO_NUMBER(get_param('EODCYYMMDD')) and ((abs(lsamtd)-abs(lsamtp))+lsup)<>0 group by lsbrnm||lsdlp||lsdlr)ls on ls.del_num =leg_acc_num
left join tbaadm.gct gct on gct.bank_id='01' 
where map_acc.schm_type='LAA' 
and map_cif.individual='Y'  and gfpf.gfctp not in('EC','EV','NW');
exit;



==========================================================================================================================================================
DD REPORT
===========================================================================================================================================================

  SELECT NVL(trim(DraftIssueBranchId),substr(trim(POSTING_DETAILS),1,4)) DraftIssueBranchId,'003' mapped_ISSU_BR_CODE, ISSU_BR_CODE,CASE WHEN '003' = TRIM(ISSU_BR_CODE)  THEN 'TRUE' ELSE 'FALSE' END MATCH_ISSU_BR_CODE,
to_number(substr(trim(CHEQUE_REFERENCE),instr(trim(CHEQUE_REFERENCE),'-',1)+1)) DraftNumber,DD_NUM,CASE WHEN to_number(substr(trim(CHEQUE_REFERENCE),instr(trim(CHEQUE_REFERENCE),'-',1)+1)) = TRIM(DD_NUM) THEN 'TRUE' ELSE 'FALSE' END MATCH_DraftNumber,
trunc(nvl(DraftValueDate,DRAFTISSUEDATE))DRAFTISSUEDATE ,ISSUE_DATE,CASE WHEN trunc(nvl(DraftValueDate,DRAFTISSUEDATE)) = ISSUE_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_ISSUE_DATE,
'KWD' DD_Currency,DD_CRNCY_CODE,CASE WHEN 'KWD' = DD_CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_ISSUE_DATE,
DraftValue,DD_AMT,CASE WHEN DraftValue = DD_AMT THEN 'TRUE' ELSE 'FALSE' END MATCH_DD_AMT,
DRAFTCUSTOMERNAME,PUR_NAME Purchasers_Name,CASE WHEN NVL(TRIM(DRAFTCUSTOMERNAME),' ') = NVL(TRIM(PUR_NAME),' ') THEN 'TRUE' ELSE 'FALSE' END MATCH_DRAFTCUSTOMERNAME,
trim(DraftBeneficiaryName1)DraftBeneficiaryName1, PAYEE_NAME Payees_Name,CASE WHEN NVL(TRIM(DraftBeneficiaryName1),' ') = NVL(TRIM(PAYEE_NAME),' ') THEN 'TRUE' ELSE 'FALSE' END MATCH_PAYEE_NAME
FROM MC_DD 
INNER JOIN DD_OUSTANDING ON TRIM(DRAFTNUMBER) = TRIM(CHEQUE_REFERENCE) OR TRIM(CHEQUE_REFERENCE) = TRIM(CASHIERORDERNUMBER)
INNER JOIN TBAADM.SOL ON  SOL.SOL_ID = '003'
LEFT JOIN SCPF ON SCPF.SCAB||SCPF.SCAN||SCPF.SCAS=TRIM(DRAFTCUSTOMERACCOUNT)
LEFT JOIN TBAADM.DST ON to_number(substr(trim(CHEQUE_REFERENCE),instr(trim(CHEQUE_REFERENCE),'-',1)+1)) = TRIM(DD_NUM)  and dst.bank_id='01'
WHERE TRIM(DRAFTPAYMENTTYPE) IS NOT NULL;

=========================================================================================================================================================================================
LOCKER
=========================================================================================================================================================================================

SELECT 
SDBBRNM LEG_SOL_ID,LC.SOL_ID FIN_SOL_ID,CASE WHEN SDBBRNM = LC.SOL_ID THEN 'TRUE' ELSE 'FALSE' END MATCH_SOL_ID,
SUBSTR(SDBEAN,1,10) LEG_CIF_ID,NVL(ORGKEY,CORP_KEY) FIN_CIF_ID,CASE WHEN SUBSTR(SDBEAN,1,10) = NVL(ORGKEY,CORP_KEY) THEN 'TRUE' ELSE 'FALSE' END MATCH_CIF_ID,
scshn LEG_CUSTOMER_NAME,LC.CUST_NAME FIN_CUSTOMER_NAME,CASE WHEN scshn = LC.CUST_NAME THEN 'TRUE' ELSE 'FALSE' END MATCH_CUSTOMER_NAME,
SDBTYP LEG_LOCKER_TYPE,LC.LOCKER_TYPE FIN_LOCKER_TYPE,CASE WHEN SDBTYP = LC.LOCKER_TYPE THEN 'TRUE' ELSE 'FALSE' END MATCH_LOCKER_TYPE,
to_char(SDBNBR) LEG_LOCKER_NO,LC.LOCKER_NO FIN_LOCKER_NO,CASE WHEN trim(SDBBRNM||SDBTYP||SDBNBR) = LC.LOCKER_NO THEN 'TRUE' ELSE 'FALSE' END MATCH_LOCKER_NO,
case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') else NULL end LEG_OPEN_DATE,LC.OPEN_DATE FIN_OPEN_DATE,
CASE WHEN trim(SDBBRNM||SDBTYP||SDBNBR) = LC.LOCKER_NO THEN 'TRUE' ELSE 'FALSE' END MATCH_OPEN_DATE,
trim(SDBNR1||SDBNR2||SDBNR3) LEG_REMARKS,   LC.REMARKS FIN_REMARKS,  CASE WHEN trim(SDBNR1||SDBNR2||SDBNR3) = LC.REMARKS THEN 'TRUE' ELSE 'FALSE' END MATCH_REMARKS,
case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') else NULL end LEG_LAST_RENT_DATE,LC.LAST_RENT_DATE FIN_LAST_RENT_DATE,
  CASE WHEN case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') END = LC.LAST_RENT_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_LAST_RENT_DATE,
case when trim(SDBNFD) is not null then to_date(get_date_fm_btrv(trim(SDBNFD)),'YYYYMMDD') else NULL end  LEG_DUE_DATE,LC.DUE_DATE FIN_DUE_DATE,
 CASE WHEN case when trim(SDBNFD) is not null then to_date(get_date_fm_btrv(trim(SDBNFD)),'YYYYMMDD') else NULL end = LC.LAST_RENT_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_DUE_DATE,
SDBFLF  LEG_DUE_RENT,LC.DUE_RENT FIN_DUE_RENT, CASE WHEN TO_CHAR(SDBFLF) = TO_CHAR(LC.DUE_RENT) THEN 'TRUE' ELSE 'FALSE' END MATCH_DUE_RENT
FROM YSDBPF
inner join map_sol on br_code=SDBBRNM
inner join map_acc  on FIN_ACC_NUM=SDBEAN
left join scpf on SCAB||SCAN||SCAS=SDBBRNM
LEFT JOIN (SELECT SD_LOCK_CUSTOMER_MASTER.*,accounts.orgkey,corporate.CORP_KEY FROM tbaadm.SD_LOCK_CUSTOMER_MASTER 
left join crmuser.accounts on accounts.CORE_CUST_ID =CUST_ID 
left join crmuser.corporate on corporate.CORE_CUST_ID =CUST_ID) LC ON map_acc.fin_cif_id = NVL(ORGKEY,CORP_KEY) AND map_sol.fin_sol_id = LC.SOL_ID




SELECT 
SDBBRNM LEG_SOL_ID,LC.SOL_ID FIN_SOL_ID,CASE WHEN SDBBRNM = LC.SOL_ID THEN 'TRUE' ELSE 'FALSE' END MATCH_SOL_ID,
SUBSTR(SDBEAN,1,10) LEG_CIF_ID,NVL(ORGKEY,CORP_KEY) FIN_CIF_ID,CASE WHEN SUBSTR(SDBEAN,1,10) = NVL(ORGKEY,CORP_KEY) THEN 'TRUE' ELSE 'FALSE' END MATCH_CIF_ID,
scshn LEG_CUSTOMER_NAME,LC.CUST_NAME FIN_CUSTOMER_NAME,CASE WHEN scshn = LC.CUST_NAME THEN 'TRUE' ELSE 'FALSE' END MATCH_CUSTOMER_NAME,
SDBTYP LEG_LOCKER_TYPE,LC.LOCKER_TYPE FIN_LOCKER_TYPE,CASE WHEN trim(SDBTYP) = trim(LC.LOCKER_TYPE) THEN 'TRUE' ELSE 'FALSE' END MATCH_LOCKER_TYPE,
trim(SDBNBR) LEG_LOCKER_NO,LC.LOCKER_NO FIN_LOCKER_NO,CASE WHEN  to_number(trim(SDBNBR)) = to_number(LC.LOCKER_NO) THEN 'TRUE' ELSE 'FALSE' END MATCH_LOCKER_NO,
case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') else NULL end LEG_OPEN_DATE,LC.OPEN_DATE FIN_OPEN_DATE,
CASE WHEN case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') else NULL end = LC.OPEN_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_OPEN_DATE,
trim(trim(SDBNR1)||' '||trim(SDBNR2)||' '||trim(SDBNR3)) LEG_REMARKS,   LC.REMARKS FIN_REMARKS,  CASE WHEN trim(trim(SDBNR1)||' '||trim(SDBNR2)||' '||trim(SDBNR3)) = LC.REMARKS THEN 'TRUE' ELSE 'FALSE' END MATCH_REMARKS,
CONV_TO_VALID_DATE(get_date_fm_btrv(trim(SDBNFD)),'YYYYMMDD') LEG_DUE_DATE,LC.DUE_DATE FIN_DUE_DATE,
 CASE WHEN CONV_TO_VALID_DATE(get_date_fm_btrv(trim(SDBNFD)),'YYYYMMDD') = LC.DUE_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_DUE_DATE
FROM 
YSDBPF
inner join map_sol on br_code=SDBBRNM
inner join map_acc  on FIN_ACC_NUM=SDBEAN
left join scpf on SCAB||SCAN||SCAS=SDBBRNM
LEFT JOIN (SELECT SD_LOCK_CUSTOMER_MASTER.*,accounts.orgkey,corporate.CORP_KEY FROM tbaadm.SD_LOCK_CUSTOMER_MASTER 
left join crmuser.accounts on accounts.CORE_CUST_ID =CUST_ID 
left join crmuser.corporate on corporate.CORE_CUST_ID =CUST_ID
where SD_LOCK_CUSTOMER_MASTER.bank_id='01') LC ON map_acc.fin_cif_id = NVL(ORGKEY,CORP_KEY) AND map_sol.fin_sol_id = LC.SOL_ID and trim(SDBTYP) = trim(LC.LOCKER_TYPE)
 and to_number(trim(SDBNBR)) = to_number(LC.LOCKER_NO)
 
 
 --locker failure
 create table locker_failure as 
SELECT SDBBRNM LEG_SOL_ID,map_sol.FIN_SOL_ID,MAP_CIF.FIN_CIF_ID,
CASE WHEN trim(SDBTYP)='120X60' THEN TO_CHAR('60X120') ELSE TO_CHAR(trim(SDBTYP)) END LEG_LOCKER_TYPE,
trim(SDBNBR) LEG_LOCKER_NO
FROM 
YSDBPF
inner join map_sol on br_code=SDBBRNM
inner join map_acc  on FIN_ACC_NUM=SDBEAN
inner join map_cif on  trim(MAP_CIF.FIN_CIF_ID) = trim(map_acc.FIN_CIF_ID) and is_joint<>'Y'
left join scpf on SCAB||SCAN||SCAS=SDBBRNM
LEFT JOIN (SELECT SD_LOCK_CUSTOMER_MASTER.*,accounts.orgkey,corporate.CORP_KEY FROM tbaadm.SD_LOCK_CUSTOMER_MASTER 
left join crmuser.accounts on accounts.CORE_CUST_ID =CUST_ID 
left join crmuser.corporate on corporate.CORE_CUST_ID =CUST_ID
where SD_LOCK_CUSTOMER_MASTER.bank_id='01') LC ON map_acc.fin_cif_id = NVL(ORGKEY,CORP_KEY) AND map_sol.fin_sol_id = LC.SOL_ID and trim(CASE WHEN trim(SDBTYP)='120X60' THEN TO_CHAR('60X120') ELSE TO_CHAR(trim(SDBTYP)) END) = trim(LC.LOCKER_TYPE)
 and to_number(trim(SDBNBR)) = to_number(LC.LOCKER_NO) and  is_joint<>'Y' 
 where  LC.SOL_ID is null
 
 
 
SELECT 
SDBBRNM LEG_SOL_ID,map_sol.fin_sol_id mapped_sol_id,LC.SOL_ID FIN_SOL_ID,CASE WHEN map_sol.fin_sol_id = LC.SOL_ID THEN 'TRUE' ELSE 'FALSE' END MATCH_SOL_ID,
SUBSTR(SDBEAN,1,10) LEG_CIF_ID,NVL(ORGKEY,CORP_KEY) FIN_CIF_ID,CASE WHEN SUBSTR(SDBEAN,1,10) = NVL(ORGKEY,CORP_KEY) THEN 'TRUE' ELSE 'FALSE' END MATCH_CIF_ID,
CASE WHEN trim(SDBTYP)='120X60' THEN TO_CHAR('60X120') ELSE TO_CHAR(trim(SDBTYP)) END LEG_LOCKER_TYPE,LC.LOCKER_TYPE FIN_LOCKER_TYPE,CASE WHEN trim(CASE WHEN trim(SDBTYP)='120X60' THEN TO_CHAR('60X120') ELSE TO_CHAR(trim(SDBTYP)) END) = trim(LC.LOCKER_TYPE) THEN 'TRUE' ELSE 'FALSE' END MATCH_LOCKER_TYPE,
trim(SDBNBR) LEG_LOCKER_NO,LC.LOCKER_NO FIN_LOCKER_NO,CASE WHEN  to_number(trim(SDBNBR)) = to_number(LC.LOCKER_NO) THEN 'TRUE' ELSE 'FALSE' END MATCH_LOCKER_NO,
NEEAN LEG_ACC_NUM, FORACID FIN_ACC_NUM,CASE WHEN trim(NEEAN) = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACC_NUM,
SCCCY LEG_ACC_CURRENCY, ACCT_CRNCY_CODE FIN_ACC_CURRENCY,CASE WHEN SCCCY = ACCT_CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_ACC_CURRENCY,
case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') else NULL end LEG_OPEN_DATE,LC.OPEN_DATE FIN_OPEN_DATE,
CASE WHEN case when trim(SDBSDT) is not null then to_date(get_date_fm_btrv(trim(SDBSDT)),'YYYYMMDD') else NULL end = LC.OPEN_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_OPEN_DATE,
trim(trim(SDBNR1)||' '||trim(SDBNR2)||' '||trim(SDBNR3)) LEG_REMARKS,   LC.REMARKS FIN_REMARKS,  CASE WHEN nvl(trim(trim(SDBNR1)||' '||trim(SDBNR2)||' '||trim(SDBNR3)),' ') = nvl(LC.REMARKS,' ') THEN 'TRUE' ELSE 'FALSE' END MATCH_REMARKS,
CONV_TO_VALID_DATE(get_date_fm_btrv(trim(SDBNFD)),'YYYYMMDD') LEG_DUE_DATE,LC.DUE_DATE FIN_DUE_DATE,
 CASE WHEN CONV_TO_VALID_DATE(get_date_fm_btrv(trim(SDBNFD)),'YYYYMMDD') = LC.DUE_DATE THEN 'TRUE' ELSE 'FALSE' END MATCH_DUE_DATE
FROM 
YSDBPF
LEFT JOIN NEPF ON TRIM(SDBEAN) = TRIM(NEEAN)
left join scpf on SCAB||SCAN||SCAS=NEAB||NEAN||NEAS
inner join map_sol on br_code=SDBBRNM
inner join map_acc  on FIN_ACC_NUM=SDBEAN
inner join map_cif on  trim(MAP_CIF.FIN_CIF_ID) = trim(map_acc.FIN_CIF_ID) and is_joint<>'Y'
LEFT JOIN (SELECT FORACID,ACCT_CRNCY_CODE,
LOCKER_NO,LOCKER_TYPE,SD_LOCK_CUSTOMER_MASTER.SOL_ID,DUE_DATE,SD_LOCK_CUSTOMER_MASTER.REMARKS,OPEN_DATE,
accounts.orgkey,corporate.CORP_KEY FROM tbaadm.SD_LOCK_CUSTOMER_MASTER 
left join crmuser.accounts on accounts.CORE_CUST_ID =CUST_ID 
left join crmuser.corporate on corporate.CORE_CUST_ID =CUST_ID
left join TBAADM.GAM on OPACC =ACID
where SD_LOCK_CUSTOMER_MASTER.bank_id='01') LC ON map_acc.fin_cif_id = NVL(ORGKEY,CORP_KEY) AND map_sol.fin_sol_id = LC.SOL_ID and trim(CASE WHEN trim(SDBTYP)='120X60' THEN TO_CHAR('60X120') ELSE TO_CHAR(trim(SDBTYP)) END) = trim(LC.LOCKER_TYPE)
 and to_number(trim(SDBNBR)) = to_number(LC.LOCKER_NO) and  is_joint<>'Y'
 
 --select * from custom_lcu001_o_table a
--left join tbaadm.sdlkm b on trim(a.locker_type)=trim(b.LOCKER_TYPE) and TO_NUMBER(A.locker_no)=trim(B.LOCKER_NO) and trim(A.sol_id)=trim(B.SOL_ID) AND BANK_ID='01' 
--WHERE B.LOCKER_NO IS NOT NULL

============================================================================================================================================================================
MEMOPAD
============================================================================================================================================================================

select distinct 
ACCOUNT_NO LEG_ACCOUNT_NUMBER,FORACID FIN_ACCT_NUM,CASE WHEN TRIM(ACCOUNT_NO) = TRIM(FORACID) THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCOUNT_NUMBER,
TEXT_MESSAGE LEG_notes,MP_MEMO_TEXT FIN_NOTES,CASE WHEN trim(TEXT_MESSAGE) = TRIM(MP_MEMO_TEXT) THEN 'TRUE' ELSE 'FALSE' END MATCH_NOTES,
to_date(trim(TRANSACTION_DATE),'dd-mm-yyyy') LEG_START_DATE,TRAN_DATE FIN_START_DATE,CASE WHEN nvl(to_date(trim(TRANSACTION_DATE),'dd-mm-yyyy'),SYSDATE) = NVL(TRAN_DATE,SYSDATE) THEN 'TRUE' ELSE 'FALSE' END MATCH_START_DATE,
to_date(trim(TEXT_MESSAGE_IN_THE_ALT_LANG),'dd-mm-yyyy') LEG_EXP_DATE,EXPIRY_DATE FIN_EXP_DATE,CASE WHEN nvl(to_date(trim(TEXT_MESSAGE_IN_THE_ALT_LANG),'dd-mm-yyyy'),SYSDATE) = NVL(EXPIRY_DATE,SYSDATE) THEN 'TRUE' ELSE 'FALSE' END MATCH_EXP_DATE,
GFACO RM_CODE
from MEMOPAD_O_TABLE
left join (select MP_TOPIC,GAM.FORACID,MP_MEMO_TEXT,TRAN_DATE,EXPIRY_DATE from tbaadm.mpt
LEFT JOIN TBAADM.GAM ON trim(GAM.ACID) = trim(mpt.ACID) AND GAM.BANK_ID =GET_PARAM('BANK_ID')
left join CUSTOM.C_MEMOPAD_EXT_TBL  on mpt.MP_SRL_NUM = C_MEMOPAD_EXT_TBL.MP_SRL_NUM
where mpt.bank_id=GET_PARAM('BANK_ID')) fin_memo on trim(fin_memo.FORACID) = trim(ACCOUNT_NO) and trim(fin_memo.MP_MEMO_TEXT) = trim(TEXT_MESSAGE) and nvl(to_date(trim(TEXT_MESSAGE_IN_THE_ALT_LANG),'dd-mm-yyyy'),SYSDATE) = NVL(EXPIRY_DATE,SYSDATE)
and nvl(to_date(trim(TRANSACTION_DATE),'dd-mm-yyyy'),SYSDATE) = NVL(TRAN_DATE,SYSDATE)
left join map_acc on trim(fin_acc_num) = trim(ACCOUNT_NO)
left join map_cif on map_acc.fin_cif_id = MAP_CIF.fin_cif_id
left join gfpf on gfpf.gfclc||gfpf.gfcus = map_cif.gfclc||map_cif.gfcus
;
